{
  "id": "9ad0f304be22b4326a8782600885bc78",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.28",
  "solcLongVersion": "0.8.28+commit.7893614a",
  "input": {
    "language": "Solidity",
    "sources": {
      "@openzeppelin/contracts/access/AccessControl.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted to signal this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/utils/Pausable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
      },
      "contracts/MyToken.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\nimport \"@openzeppelin/contracts/utils/Pausable.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"@openzeppelin/contracts/access/IAccessControl.sol\";\n\n\ncontract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {\n  bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\");\n  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n  address public minter;\n\n  constructor(uint256 initialSupply) ERC20(\"MyToken\", \"MTK\") {\n    minter = msg.sender;\n    _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\n    _grantRole(PAUSER_ROLE, msg.sender);\n    _grantRole(MINTER_ROLE, msg.sender);\n\n    _mint(msg.sender, initialSupply);\n  }\n\n  function pause() public onlyRole(PAUSER_ROLE) {\n    _pause();\n  }\n\n  function unpause() public onlyRole(PAUSER_ROLE) {\n    _unpause();\n  }\n\n  function mint(address to, uint256 amount) public onlyRole(MINTER_ROLE) {\n    _mint(to, amount);\n  }\n\n  function _update(address from, address to, uint256 amount)\n  internal\n  override\n  whenNotPaused\n  {\n    super._update(from, to, amount);\n  }\n}\n"
      }
    },
    "settings": {
      "evmVersion": "paris",
      "optimizer": {
        "enabled": false,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi"
          ]
        }
      },
      "resolc": {
        "version": "latest",
        "compilerSource": "npm",
        "settings": {
          "optimizer": {}
        }
      }
    }
  },
  "output": {
    "errors": [],
    "version": "0.8.28",
    "long_version": "0.8.28+commit.7893614a.Emscripten.clang",
    "revive_version": "0.2.0+commit.e94432e.llvm-18.1.8",
    "sources": {
      "@openzeppelin/contracts/access/AccessControl.sol": {
        "id": 0,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
          "exportedSymbols": {
            "AccessControl": [
              295
            ],
            "Context": [
              1210
            ],
            "ERC165": [
              1342
            ],
            "IAccessControl": [
              378
            ]
          },
          "id": 296,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "108:24:0"
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
              "file": "./IAccessControl.sol",
              "id": 3,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 296,
              "sourceUnit": 379,
              "src": "134:52:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2,
                    "name": "IAccessControl",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 378,
                    "src": "142:14:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 5,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 296,
              "sourceUnit": 1211,
              "src": "187:45:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 4,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1210,
                    "src": "195:7:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
              "file": "../utils/introspection/ERC165.sol",
              "id": 7,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 296,
              "sourceUnit": 1343,
              "src": "233:57:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 6,
                    "name": "ERC165",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1342,
                    "src": "241:6:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 9,
                    "name": "Context",
                    "nameLocations": [
                      "1988:7:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1210,
                    "src": "1988:7:0"
                  },
                  "id": 10,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1988:7:0"
                },
                {
                  "baseName": {
                    "id": 11,
                    "name": "IAccessControl",
                    "nameLocations": [
                      "1997:14:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 378,
                    "src": "1997:14:0"
                  },
                  "id": 12,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1997:14:0"
                },
                {
                  "baseName": {
                    "id": 13,
                    "name": "ERC165",
                    "nameLocations": [
                      "2013:6:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1342,
                    "src": "2013:6:0"
                  },
                  "id": 14,
                  "nodeType": "InheritanceSpecifier",
                  "src": "2013:6:0"
                }
              ],
              "canonicalName": "AccessControl",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 8,
                "nodeType": "StructuredDocumentation",
                "src": "292:1660:0",
                "text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
              },
              "fullyImplemented": true,
              "id": 295,
              "linearizedBaseContracts": [
                295,
                1342,
                1354,
                378,
                1210
              ],
              "name": "AccessControl",
              "nameLocation": "1971:13:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "AccessControl.RoleData",
                  "id": 21,
                  "members": [
                    {
                      "constant": false,
                      "id": 18,
                      "mutability": "mutable",
                      "name": "hasRole",
                      "nameLocation": "2085:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 21,
                      "src": "2052:40:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      },
                      "typeName": {
                        "id": 17,
                        "keyName": "account",
                        "keyNameLocation": "2068:7:0",
                        "keyType": {
                          "id": 15,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2060:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Mapping",
                        "src": "2052:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        },
                        "valueName": "",
                        "valueNameLocation": "-1:-1:-1",
                        "valueType": {
                          "id": 16,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2079:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 20,
                      "mutability": "mutable",
                      "name": "adminRole",
                      "nameLocation": "2110:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 21,
                      "src": "2102:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 19,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2102:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "RoleData",
                  "nameLocation": "2033:8:0",
                  "nodeType": "StructDefinition",
                  "scope": 295,
                  "src": "2026:100:0",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 26,
                  "mutability": "mutable",
                  "name": "_roles",
                  "nameLocation": "2174:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 295,
                  "src": "2132:48:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
                    "typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
                  },
                  "typeName": {
                    "id": 25,
                    "keyName": "role",
                    "keyNameLocation": "2148:4:0",
                    "keyType": {
                      "id": 22,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "2140:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "2132:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
                      "typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 24,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 23,
                        "name": "RoleData",
                        "nameLocations": [
                          "2156:8:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 21,
                        "src": "2156:8:0"
                      },
                      "referencedDeclaration": 21,
                      "src": "2156:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RoleData_$21_storage_ptr",
                        "typeString": "struct AccessControl.RoleData"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": true,
                  "functionSelector": "a217fddf",
                  "id": 29,
                  "mutability": "constant",
                  "name": "DEFAULT_ADMIN_ROLE",
                  "nameLocation": "2211:18:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 295,
                  "src": "2187:49:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2187:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "hexValue": "30783030",
                    "id": 28,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2232:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0x00"
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 39,
                    "nodeType": "Block",
                    "src": "2454:44:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 35,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32,
                              "src": "2475:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 34,
                            "name": "_checkRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              93,
                              114
                            ],
                            "referencedDeclaration": 93,
                            "src": "2464:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) view"
                            }
                          },
                          "id": 36,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2464:16:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 37,
                        "nodeType": "ExpressionStatement",
                        "src": "2464:16:0"
                      },
                      {
                        "id": 38,
                        "nodeType": "PlaceholderStatement",
                        "src": "2490:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 30,
                    "nodeType": "StructuredDocumentation",
                    "src": "2243:174:0",
                    "text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
                  },
                  "id": 40,
                  "name": "onlyRole",
                  "nameLocation": "2431:8:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 33,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 32,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "2448:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 40,
                        "src": "2440:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 31,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2440:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2439:14:0"
                  },
                  "src": "2422:76:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    1341
                  ],
                  "body": {
                    "id": 61,
                    "nodeType": "Block",
                    "src": "2656:111:0",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 59,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            "id": 54,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 49,
                              "name": "interfaceId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 43,
                              "src": "2673:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 51,
                                    "name": "IAccessControl",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 378,
                                    "src": "2693:14:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
                                      "typeString": "type(contract IAccessControl)"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
                                      "typeString": "type(contract IAccessControl)"
                                    }
                                  ],
                                  "id": 50,
                                  "name": "type",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967269,
                                  "src": "2688:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 52,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2688:20:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$378",
                                  "typeString": "type(contract IAccessControl)"
                                }
                              },
                              "id": 53,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "2709:11:0",
                              "memberName": "interfaceId",
                              "nodeType": "MemberAccess",
                              "src": "2688:32:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "src": "2673:47:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 57,
                                "name": "interfaceId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 43,
                                "src": "2748:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              ],
                              "expression": {
                                "id": 55,
                                "name": "super",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967271,
                                "src": "2724:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_super$_AccessControl_$295_$",
                                  "typeString": "type(contract super AccessControl)"
                                }
                              },
                              "id": 56,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2730:17:0",
                              "memberName": "supportsInterface",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1341,
                              "src": "2724:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                                "typeString": "function (bytes4) view returns (bool)"
                              }
                            },
                            "id": 58,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2724:36:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2673:87:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 48,
                        "id": 60,
                        "nodeType": "Return",
                        "src": "2666:94:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 41,
                    "nodeType": "StructuredDocumentation",
                    "src": "2504:56:0",
                    "text": " @dev See {IERC165-supportsInterface}."
                  },
                  "functionSelector": "01ffc9a7",
                  "id": 62,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "supportsInterface",
                  "nameLocation": "2574:17:0",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 45,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "2632:8:0"
                  },
                  "parameters": {
                    "id": 44,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 43,
                        "mutability": "mutable",
                        "name": "interfaceId",
                        "nameLocation": "2599:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 62,
                        "src": "2592:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 42,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "2592:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2591:20:0"
                  },
                  "returnParameters": {
                    "id": 48,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 47,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 62,
                        "src": "2650:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 46,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2650:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2649:6:0"
                  },
                  "scope": 295,
                  "src": "2565:202:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    345
                  ],
                  "body": {
                    "id": 79,
                    "nodeType": "Block",
                    "src": "2937:53:0",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 72,
                                "name": "_roles",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 26,
                                "src": "2954:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
                                  "typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
                                }
                              },
                              "id": 74,
                              "indexExpression": {
                                "id": 73,
                                "name": "role",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 65,
                                "src": "2961:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2954:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RoleData_$21_storage",
                                "typeString": "struct AccessControl.RoleData storage ref"
                              }
                            },
                            "id": 75,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2967:7:0",
                            "memberName": "hasRole",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 18,
                            "src": "2954:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 77,
                          "indexExpression": {
                            "id": 76,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67,
                            "src": "2975:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2954:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 71,
                        "id": 78,
                        "nodeType": "Return",
                        "src": "2947:36:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 63,
                    "nodeType": "StructuredDocumentation",
                    "src": "2773:76:0",
                    "text": " @dev Returns `true` if `account` has been granted `role`."
                  },
                  "functionSelector": "91d14854",
                  "id": 80,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "hasRole",
                  "nameLocation": "2863:7:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 68,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 65,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "2879:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 80,
                        "src": "2871:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 64,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2871:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 67,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "2893:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 80,
                        "src": "2885:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 66,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2885:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2870:31:0"
                  },
                  "returnParameters": {
                    "id": 71,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 70,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 80,
                        "src": "2931:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 69,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2931:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2930:6:0"
                  },
                  "scope": 295,
                  "src": "2854:136:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 92,
                    "nodeType": "Block",
                    "src": "3255:47:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 87,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 83,
                              "src": "3276:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 88,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1192,
                                "src": "3282:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 89,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3282:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 86,
                            "name": "_checkRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              93,
                              114
                            ],
                            "referencedDeclaration": 114,
                            "src": "3265:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
                              "typeString": "function (bytes32,address) view"
                            }
                          },
                          "id": 90,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3265:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 91,
                        "nodeType": "ExpressionStatement",
                        "src": "3265:30:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 81,
                    "nodeType": "StructuredDocumentation",
                    "src": "2996:198:0",
                    "text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
                  },
                  "id": 93,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkRole",
                  "nameLocation": "3208:10:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 84,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 83,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "3227:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 93,
                        "src": "3219:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 82,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3219:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3218:14:0"
                  },
                  "returnParameters": {
                    "id": 85,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3255:0:0"
                  },
                  "scope": 295,
                  "src": "3199:103:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 113,
                    "nodeType": "Block",
                    "src": "3505:124:0",
                    "statements": [
                      {
                        "condition": {
                          "id": 105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "3519:23:0",
                          "subExpression": {
                            "arguments": [
                              {
                                "id": 102,
                                "name": "role",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 96,
                                "src": "3528:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 103,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 98,
                                "src": "3534:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 101,
                              "name": "hasRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80,
                              "src": "3520:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                "typeString": "function (bytes32,address) view returns (bool)"
                              }
                            },
                            "id": 104,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3520:22:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 112,
                        "nodeType": "IfStatement",
                        "src": "3515:108:0",
                        "trueBody": {
                          "id": 111,
                          "nodeType": "Block",
                          "src": "3544:79:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "id": 107,
                                    "name": "account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 98,
                                    "src": "3598:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 108,
                                    "name": "role",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 96,
                                    "src": "3607:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 106,
                                  "name": "AccessControlUnauthorizedAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 305,
                                  "src": "3565:32:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
                                    "typeString": "function (address,bytes32) pure returns (error)"
                                  }
                                },
                                "id": 109,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3565:47:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 110,
                              "nodeType": "RevertStatement",
                              "src": "3558:54:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 94,
                    "nodeType": "StructuredDocumentation",
                    "src": "3308:119:0",
                    "text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
                  },
                  "id": 114,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkRole",
                  "nameLocation": "3441:10:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 99,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 96,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "3460:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 114,
                        "src": "3452:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 95,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3452:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 98,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "3474:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 114,
                        "src": "3466:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 97,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3466:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3451:31:0"
                  },
                  "returnParameters": {
                    "id": 100,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3505:0:0"
                  },
                  "scope": 295,
                  "src": "3432:197:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    353
                  ],
                  "body": {
                    "id": 127,
                    "nodeType": "Block",
                    "src": "3884:46:0",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 122,
                              "name": "_roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26,
                              "src": "3901:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
                                "typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
                              }
                            },
                            "id": 124,
                            "indexExpression": {
                              "id": 123,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 117,
                              "src": "3908:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3901:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RoleData_$21_storage",
                              "typeString": "struct AccessControl.RoleData storage ref"
                            }
                          },
                          "id": 125,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3914:9:0",
                          "memberName": "adminRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20,
                          "src": "3901:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 121,
                        "id": 126,
                        "nodeType": "Return",
                        "src": "3894:29:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 115,
                    "nodeType": "StructuredDocumentation",
                    "src": "3635:170:0",
                    "text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
                  },
                  "functionSelector": "248a9ca3",
                  "id": 128,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRoleAdmin",
                  "nameLocation": "3819:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 118,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 117,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "3840:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 128,
                        "src": "3832:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 116,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3832:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3831:14:0"
                  },
                  "returnParameters": {
                    "id": 121,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 120,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 128,
                        "src": "3875:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 119,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3875:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3874:9:0"
                  },
                  "scope": 295,
                  "src": "3810:120:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    361
                  ],
                  "body": {
                    "id": 146,
                    "nodeType": "Block",
                    "src": "4320:42:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 142,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 131,
                              "src": "4341:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 143,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 133,
                              "src": "4347:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 141,
                            "name": "_grantRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 256,
                            "src": "4330:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) returns (bool)"
                            }
                          },
                          "id": 144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4330:25:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 145,
                        "nodeType": "ExpressionStatement",
                        "src": "4330:25:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 129,
                    "nodeType": "StructuredDocumentation",
                    "src": "3936:285:0",
                    "text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
                  },
                  "functionSelector": "2f2ff15d",
                  "id": 147,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 137,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 131,
                              "src": "4313:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 136,
                            "name": "getRoleAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 128,
                            "src": "4300:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
                              "typeString": "function (bytes32) view returns (bytes32)"
                            }
                          },
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4300:18:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 139,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 135,
                        "name": "onlyRole",
                        "nameLocations": [
                          "4291:8:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 40,
                        "src": "4291:8:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4291:28:0"
                    }
                  ],
                  "name": "grantRole",
                  "nameLocation": "4235:9:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 134,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 131,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "4253:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 147,
                        "src": "4245:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 130,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4245:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 133,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "4267:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 147,
                        "src": "4259:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 132,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4259:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4244:31:0"
                  },
                  "returnParameters": {
                    "id": 140,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4320:0:0"
                  },
                  "scope": 295,
                  "src": "4226:136:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    369
                  ],
                  "body": {
                    "id": 165,
                    "nodeType": "Block",
                    "src": "4737:43:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 161,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 150,
                              "src": "4759:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 162,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 152,
                              "src": "4765:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 160,
                            "name": "_revokeRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 294,
                            "src": "4747:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) returns (bool)"
                            }
                          },
                          "id": 163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4747:26:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 164,
                        "nodeType": "ExpressionStatement",
                        "src": "4747:26:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 148,
                    "nodeType": "StructuredDocumentation",
                    "src": "4368:269:0",
                    "text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
                  },
                  "functionSelector": "d547741f",
                  "id": 166,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 156,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 150,
                              "src": "4730:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 155,
                            "name": "getRoleAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 128,
                            "src": "4717:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
                              "typeString": "function (bytes32) view returns (bytes32)"
                            }
                          },
                          "id": 157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4717:18:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 158,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 154,
                        "name": "onlyRole",
                        "nameLocations": [
                          "4708:8:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 40,
                        "src": "4708:8:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4708:28:0"
                    }
                  ],
                  "name": "revokeRole",
                  "nameLocation": "4651:10:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 153,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 150,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "4670:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 166,
                        "src": "4662:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 149,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4662:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 152,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "4684:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 166,
                        "src": "4676:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 151,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4676:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4661:31:0"
                  },
                  "returnParameters": {
                    "id": 159,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4737:0:0"
                  },
                  "scope": 295,
                  "src": "4642:138:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    377
                  ],
                  "body": {
                    "id": 188,
                    "nodeType": "Block",
                    "src": "5407:166:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 174,
                            "name": "callerConfirmation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 171,
                            "src": "5421:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 175,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1192,
                              "src": "5443:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 176,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5443:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5421:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 182,
                        "nodeType": "IfStatement",
                        "src": "5417:102:0",
                        "trueBody": {
                          "id": 181,
                          "nodeType": "Block",
                          "src": "5457:62:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 178,
                                  "name": "AccessControlBadConfirmation",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 308,
                                  "src": "5478:28:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 179,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5478:30:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 180,
                              "nodeType": "RevertStatement",
                              "src": "5471:37:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 184,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 169,
                              "src": "5541:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 185,
                              "name": "callerConfirmation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 171,
                              "src": "5547:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 183,
                            "name": "_revokeRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 294,
                            "src": "5529:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) returns (bool)"
                            }
                          },
                          "id": 186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5529:37:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 187,
                        "nodeType": "ExpressionStatement",
                        "src": "5529:37:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 167,
                    "nodeType": "StructuredDocumentation",
                    "src": "4786:537:0",
                    "text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
                  },
                  "functionSelector": "36568abe",
                  "id": 189,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "renounceRole",
                  "nameLocation": "5337:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 172,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 169,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "5358:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 189,
                        "src": "5350:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 168,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5350:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 171,
                        "mutability": "mutable",
                        "name": "callerConfirmation",
                        "nameLocation": "5372:18:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 189,
                        "src": "5364:26:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 170,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5364:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5349:42:0"
                  },
                  "returnParameters": {
                    "id": 173,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5407:0:0"
                  },
                  "scope": 295,
                  "src": "5328:245:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 216,
                    "nodeType": "Block",
                    "src": "5771:174:0",
                    "statements": [
                      {
                        "assignments": [
                          198
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 198,
                            "mutability": "mutable",
                            "name": "previousAdminRole",
                            "nameLocation": "5789:17:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 216,
                            "src": "5781:25:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 197,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "5781:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 202,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 200,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 192,
                              "src": "5822:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 199,
                            "name": "getRoleAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 128,
                            "src": "5809:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
                              "typeString": "function (bytes32) view returns (bytes32)"
                            }
                          },
                          "id": 201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5809:18:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5781:46:0"
                      },
                      {
                        "expression": {
                          "id": 208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 203,
                                "name": "_roles",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 26,
                                "src": "5837:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
                                  "typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
                                }
                              },
                              "id": 205,
                              "indexExpression": {
                                "id": 204,
                                "name": "role",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 192,
                                "src": "5844:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5837:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RoleData_$21_storage",
                                "typeString": "struct AccessControl.RoleData storage ref"
                              }
                            },
                            "id": 206,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "5850:9:0",
                            "memberName": "adminRole",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 20,
                            "src": "5837:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 207,
                            "name": "adminRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 194,
                            "src": "5862:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "5837:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 209,
                        "nodeType": "ExpressionStatement",
                        "src": "5837:34:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 211,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 192,
                              "src": "5903:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 212,
                              "name": "previousAdminRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 198,
                              "src": "5909:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 213,
                              "name": "adminRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 194,
                              "src": "5928:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 210,
                            "name": "RoleAdminChanged",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 317,
                            "src": "5886:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32,bytes32,bytes32)"
                            }
                          },
                          "id": 214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5886:52:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 215,
                        "nodeType": "EmitStatement",
                        "src": "5881:57:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 190,
                    "nodeType": "StructuredDocumentation",
                    "src": "5579:114:0",
                    "text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
                  },
                  "id": 217,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_setRoleAdmin",
                  "nameLocation": "5707:13:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 195,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 192,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "5729:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 217,
                        "src": "5721:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 191,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5721:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 194,
                        "mutability": "mutable",
                        "name": "adminRole",
                        "nameLocation": "5743:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 217,
                        "src": "5735:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 193,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5735:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5720:33:0"
                  },
                  "returnParameters": {
                    "id": 196,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5771:0:0"
                  },
                  "scope": 295,
                  "src": "5698:247:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 255,
                    "nodeType": "Block",
                    "src": "6262:233:0",
                    "statements": [
                      {
                        "condition": {
                          "id": 231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "6276:23:0",
                          "subExpression": {
                            "arguments": [
                              {
                                "id": 228,
                                "name": "role",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 220,
                                "src": "6285:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 229,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 222,
                                "src": "6291:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 227,
                              "name": "hasRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80,
                              "src": "6277:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                "typeString": "function (bytes32,address) view returns (bool)"
                              }
                            },
                            "id": 230,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6277:22:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 253,
                          "nodeType": "Block",
                          "src": "6452:37:0",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "66616c7365",
                                "id": 251,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6473:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "functionReturnParameters": 226,
                              "id": 252,
                              "nodeType": "Return",
                              "src": "6466:12:0"
                            }
                          ]
                        },
                        "id": 254,
                        "nodeType": "IfStatement",
                        "src": "6272:217:0",
                        "trueBody": {
                          "id": 250,
                          "nodeType": "Block",
                          "src": "6301:145:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 239,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 232,
                                        "name": "_roles",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 26,
                                        "src": "6315:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
                                          "typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
                                        }
                                      },
                                      "id": 234,
                                      "indexExpression": {
                                        "id": 233,
                                        "name": "role",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 220,
                                        "src": "6322:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6315:12:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_RoleData_$21_storage",
                                        "typeString": "struct AccessControl.RoleData storage ref"
                                      }
                                    },
                                    "id": 235,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6328:7:0",
                                    "memberName": "hasRole",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 18,
                                    "src": "6315:20:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                      "typeString": "mapping(address => bool)"
                                    }
                                  },
                                  "id": 237,
                                  "indexExpression": {
                                    "id": 236,
                                    "name": "account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 222,
                                    "src": "6336:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "6315:29:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 238,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6347:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "6315:36:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 240,
                              "nodeType": "ExpressionStatement",
                              "src": "6315:36:0"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 242,
                                    "name": "role",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 220,
                                    "src": "6382:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 243,
                                    "name": "account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 222,
                                    "src": "6388:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 244,
                                      "name": "_msgSender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1192,
                                      "src": "6397:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 245,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6397:12:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 241,
                                  "name": "RoleGranted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 326,
                                  "src": "6370:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
                                    "typeString": "function (bytes32,address,address)"
                                  }
                                },
                                "id": 246,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6370:40:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 247,
                              "nodeType": "EmitStatement",
                              "src": "6365:45:0"
                            },
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 248,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6431:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 226,
                              "id": 249,
                              "nodeType": "Return",
                              "src": "6424:11:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 218,
                    "nodeType": "StructuredDocumentation",
                    "src": "5951:223:0",
                    "text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
                  },
                  "id": 256,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_grantRole",
                  "nameLocation": "6188:10:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 223,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 220,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "6207:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 256,
                        "src": "6199:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 219,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "6199:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 222,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "6221:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 256,
                        "src": "6213:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 221,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6213:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6198:31:0"
                  },
                  "returnParameters": {
                    "id": 226,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 225,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 256,
                        "src": "6256:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 224,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "6256:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6255:6:0"
                  },
                  "scope": 295,
                  "src": "6179:316:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 293,
                    "nodeType": "Block",
                    "src": "6816:233:0",
                    "statements": [
                      {
                        "condition": {
                          "arguments": [
                            {
                              "id": 267,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 259,
                              "src": "6838:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 268,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 261,
                              "src": "6844:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 266,
                            "name": "hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80,
                            "src": "6830:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6830:22:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 291,
                          "nodeType": "Block",
                          "src": "7006:37:0",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "66616c7365",
                                "id": 289,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7027:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "functionReturnParameters": 265,
                              "id": 290,
                              "nodeType": "Return",
                              "src": "7020:12:0"
                            }
                          ]
                        },
                        "id": 292,
                        "nodeType": "IfStatement",
                        "src": "6826:217:0",
                        "trueBody": {
                          "id": 288,
                          "nodeType": "Block",
                          "src": "6854:146:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 277,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 270,
                                        "name": "_roles",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 26,
                                        "src": "6868:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
                                          "typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
                                        }
                                      },
                                      "id": 272,
                                      "indexExpression": {
                                        "id": 271,
                                        "name": "role",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 259,
                                        "src": "6875:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6868:12:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_RoleData_$21_storage",
                                        "typeString": "struct AccessControl.RoleData storage ref"
                                      }
                                    },
                                    "id": 273,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6881:7:0",
                                    "memberName": "hasRole",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 18,
                                    "src": "6868:20:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                      "typeString": "mapping(address => bool)"
                                    }
                                  },
                                  "id": 275,
                                  "indexExpression": {
                                    "id": 274,
                                    "name": "account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 261,
                                    "src": "6889:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "6868:29:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "66616c7365",
                                  "id": 276,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6900:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                },
                                "src": "6868:37:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 278,
                              "nodeType": "ExpressionStatement",
                              "src": "6868:37:0"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 280,
                                    "name": "role",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 259,
                                    "src": "6936:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 281,
                                    "name": "account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 261,
                                    "src": "6942:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 282,
                                      "name": "_msgSender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1192,
                                      "src": "6951:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 283,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6951:12:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 279,
                                  "name": "RoleRevoked",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 335,
                                  "src": "6924:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
                                    "typeString": "function (bytes32,address,address)"
                                  }
                                },
                                "id": 284,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6924:40:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 285,
                              "nodeType": "EmitStatement",
                              "src": "6919:45:0"
                            },
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 286,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6985:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 265,
                              "id": 287,
                              "nodeType": "Return",
                              "src": "6978:11:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 257,
                    "nodeType": "StructuredDocumentation",
                    "src": "6501:226:0",
                    "text": " @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
                  },
                  "id": 294,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_revokeRole",
                  "nameLocation": "6741:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 262,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 259,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "6761:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 294,
                        "src": "6753:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 258,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "6753:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 261,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "6775:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 294,
                        "src": "6767:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 260,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6767:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6752:31:0"
                  },
                  "returnParameters": {
                    "id": 265,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 264,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 294,
                        "src": "6810:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 263,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "6810:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6809:6:0"
                  },
                  "scope": 295,
                  "src": "6732:317:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 296,
              "src": "1953:5098:0",
              "usedErrors": [
                305,
                308
              ],
              "usedEvents": [
                317,
                326,
                335
              ]
            }
          ],
          "src": "108:6944:0"
        }
      },
      "@openzeppelin/contracts/access/IAccessControl.sol": {
        "id": 1,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
          "exportedSymbols": {
            "IAccessControl": [
              378
            ]
          },
          "id": 379,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 297,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "109:24:1"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IAccessControl",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 298,
                "nodeType": "StructuredDocumentation",
                "src": "135:90:1",
                "text": " @dev External interface of AccessControl declared to support ERC-165 detection."
              },
              "fullyImplemented": false,
              "id": 378,
              "linearizedBaseContracts": [
                378
              ],
              "name": "IAccessControl",
              "nameLocation": "236:14:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 299,
                    "nodeType": "StructuredDocumentation",
                    "src": "257:56:1",
                    "text": " @dev The `account` is missing a role."
                  },
                  "errorSelector": "e2517d3f",
                  "id": 305,
                  "name": "AccessControlUnauthorizedAccount",
                  "nameLocation": "324:32:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 304,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 301,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "365:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 305,
                        "src": "357:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 300,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "357:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 303,
                        "mutability": "mutable",
                        "name": "neededRole",
                        "nameLocation": "382:10:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 305,
                        "src": "374:18:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 302,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "374:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "356:37:1"
                  },
                  "src": "318:76:1"
                },
                {
                  "documentation": {
                    "id": 306,
                    "nodeType": "StructuredDocumentation",
                    "src": "400:148:1",
                    "text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
                  },
                  "errorSelector": "6697b232",
                  "id": 308,
                  "name": "AccessControlBadConfirmation",
                  "nameLocation": "559:28:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 307,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "587:2:1"
                  },
                  "src": "553:37:1"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 309,
                    "nodeType": "StructuredDocumentation",
                    "src": "596:254:1",
                    "text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."
                  },
                  "eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
                  "id": 317,
                  "name": "RoleAdminChanged",
                  "nameLocation": "861:16:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 316,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 311,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "894:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 317,
                        "src": "878:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 310,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "878:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 313,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousAdminRole",
                        "nameLocation": "916:17:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 317,
                        "src": "900:33:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 312,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "900:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 315,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newAdminRole",
                        "nameLocation": "951:12:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 317,
                        "src": "935:28:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 314,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "935:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "877:87:1"
                  },
                  "src": "855:110:1"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 318,
                    "nodeType": "StructuredDocumentation",
                    "src": "971:295:1",
                    "text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
                  },
                  "eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
                  "id": 326,
                  "name": "RoleGranted",
                  "nameLocation": "1277:11:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 325,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 320,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "1305:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 326,
                        "src": "1289:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 319,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1289:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 322,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "1327:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 326,
                        "src": "1311:23:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 321,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1311:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 324,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "1352:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 326,
                        "src": "1336:22:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 323,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1336:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1288:71:1"
                  },
                  "src": "1271:89:1"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 327,
                    "nodeType": "StructuredDocumentation",
                    "src": "1366:275:1",
                    "text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
                  },
                  "eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
                  "id": 335,
                  "name": "RoleRevoked",
                  "nameLocation": "1652:11:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 334,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 329,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "1680:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 335,
                        "src": "1664:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 328,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1664:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 331,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "1702:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 335,
                        "src": "1686:23:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 330,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1686:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 333,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "1727:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 335,
                        "src": "1711:22:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 332,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1711:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1663:71:1"
                  },
                  "src": "1646:89:1"
                },
                {
                  "documentation": {
                    "id": 336,
                    "nodeType": "StructuredDocumentation",
                    "src": "1741:76:1",
                    "text": " @dev Returns `true` if `account` has been granted `role`."
                  },
                  "functionSelector": "91d14854",
                  "id": 345,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "hasRole",
                  "nameLocation": "1831:7:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 341,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 338,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "1847:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 345,
                        "src": "1839:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 337,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1839:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 340,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "1861:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 345,
                        "src": "1853:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 339,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1853:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1838:31:1"
                  },
                  "returnParameters": {
                    "id": 344,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 343,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 345,
                        "src": "1893:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 342,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1893:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1892:6:1"
                  },
                  "scope": 378,
                  "src": "1822:77:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 346,
                    "nodeType": "StructuredDocumentation",
                    "src": "1905:184:1",
                    "text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
                  },
                  "functionSelector": "248a9ca3",
                  "id": 353,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRoleAdmin",
                  "nameLocation": "2103:12:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 349,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 348,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "2124:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 353,
                        "src": "2116:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 347,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2116:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2115:14:1"
                  },
                  "returnParameters": {
                    "id": 352,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 351,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 353,
                        "src": "2153:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 350,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2153:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2152:9:1"
                  },
                  "scope": 378,
                  "src": "2094:68:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 354,
                    "nodeType": "StructuredDocumentation",
                    "src": "2168:239:1",
                    "text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
                  },
                  "functionSelector": "2f2ff15d",
                  "id": 361,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "grantRole",
                  "nameLocation": "2421:9:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 359,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 356,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "2439:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 361,
                        "src": "2431:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 355,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2431:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 358,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "2453:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 361,
                        "src": "2445:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 357,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2445:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2430:31:1"
                  },
                  "returnParameters": {
                    "id": 360,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2470:0:1"
                  },
                  "scope": 378,
                  "src": "2412:59:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 362,
                    "nodeType": "StructuredDocumentation",
                    "src": "2477:223:1",
                    "text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
                  },
                  "functionSelector": "d547741f",
                  "id": 369,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "revokeRole",
                  "nameLocation": "2714:10:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 367,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 364,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "2733:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 369,
                        "src": "2725:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 363,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2725:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 366,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "2747:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 369,
                        "src": "2739:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 365,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2739:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2724:31:1"
                  },
                  "returnParameters": {
                    "id": 368,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2764:0:1"
                  },
                  "scope": 378,
                  "src": "2705:60:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 370,
                    "nodeType": "StructuredDocumentation",
                    "src": "2771:491:1",
                    "text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
                  },
                  "functionSelector": "36568abe",
                  "id": 377,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "renounceRole",
                  "nameLocation": "3276:12:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 375,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 372,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "3297:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 377,
                        "src": "3289:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 371,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3289:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 374,
                        "mutability": "mutable",
                        "name": "callerConfirmation",
                        "nameLocation": "3311:18:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 377,
                        "src": "3303:26:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 373,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3303:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3288:42:1"
                  },
                  "returnParameters": {
                    "id": 376,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3339:0:1"
                  },
                  "scope": 378,
                  "src": "3267:73:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 379,
              "src": "226:3116:1",
              "usedErrors": [
                305,
                308
              ],
              "usedEvents": [
                317,
                326,
                335
              ]
            }
          ],
          "src": "109:3234:1"
        }
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "id": 2,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
          "exportedSymbols": {
            "IERC1155Errors": [
              515
            ],
            "IERC20Errors": [
              420
            ],
            "IERC721Errors": [
              468
            ]
          },
          "id": 516,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 380,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "112:24:2"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 381,
                "nodeType": "StructuredDocumentation",
                "src": "138:141:2",
                "text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
              },
              "fullyImplemented": true,
              "id": 420,
              "linearizedBaseContracts": [
                420
              ],
              "name": "IERC20Errors",
              "nameLocation": "290:12:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 382,
                    "nodeType": "StructuredDocumentation",
                    "src": "309:309:2",
                    "text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
                  },
                  "errorSelector": "e450d38c",
                  "id": 390,
                  "name": "ERC20InsufficientBalance",
                  "nameLocation": "629:24:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 389,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 384,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "662:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 390,
                        "src": "654:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 383,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "654:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 386,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "678:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 390,
                        "src": "670:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 385,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "670:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 388,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "695:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 390,
                        "src": "687:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 387,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "687:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "653:49:2"
                  },
                  "src": "623:80:2"
                },
                {
                  "documentation": {
                    "id": 391,
                    "nodeType": "StructuredDocumentation",
                    "src": "709:152:2",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "96c6fd1e",
                  "id": 395,
                  "name": "ERC20InvalidSender",
                  "nameLocation": "872:18:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 394,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 393,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "899:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 395,
                        "src": "891:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 392,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "891:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "890:16:2"
                  },
                  "src": "866:41:2"
                },
                {
                  "documentation": {
                    "id": 396,
                    "nodeType": "StructuredDocumentation",
                    "src": "913:159:2",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "ec442f05",
                  "id": 400,
                  "name": "ERC20InvalidReceiver",
                  "nameLocation": "1083:20:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 399,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 398,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "1112:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 400,
                        "src": "1104:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 397,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1104:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1103:18:2"
                  },
                  "src": "1077:45:2"
                },
                {
                  "documentation": {
                    "id": 401,
                    "nodeType": "StructuredDocumentation",
                    "src": "1128:345:2",
                    "text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
                  },
                  "errorSelector": "fb8f41b2",
                  "id": 409,
                  "name": "ERC20InsufficientAllowance",
                  "nameLocation": "1484:26:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 408,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 403,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1519:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 409,
                        "src": "1511:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 402,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1511:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 405,
                        "mutability": "mutable",
                        "name": "allowance",
                        "nameLocation": "1536:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 409,
                        "src": "1528:17:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 404,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1528:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 407,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "1555:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 409,
                        "src": "1547:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 406,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1547:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1510:52:2"
                  },
                  "src": "1478:85:2"
                },
                {
                  "documentation": {
                    "id": 410,
                    "nodeType": "StructuredDocumentation",
                    "src": "1569:174:2",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "e602df05",
                  "id": 414,
                  "name": "ERC20InvalidApprover",
                  "nameLocation": "1754:20:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 413,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 412,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "1783:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 414,
                        "src": "1775:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 411,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1775:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1774:18:2"
                  },
                  "src": "1748:45:2"
                },
                {
                  "documentation": {
                    "id": 415,
                    "nodeType": "StructuredDocumentation",
                    "src": "1799:195:2",
                    "text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "94280d62",
                  "id": 419,
                  "name": "ERC20InvalidSpender",
                  "nameLocation": "2005:19:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 418,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 417,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2033:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 419,
                        "src": "2025:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 416,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2025:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2024:17:2"
                  },
                  "src": "1999:43:2"
                }
              ],
              "scope": 516,
              "src": "280:1764:2",
              "usedErrors": [
                390,
                395,
                400,
                409,
                414,
                419
              ],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC721Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 421,
                "nodeType": "StructuredDocumentation",
                "src": "2046:143:2",
                "text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
              },
              "fullyImplemented": true,
              "id": 468,
              "linearizedBaseContracts": [
                468
              ],
              "name": "IERC721Errors",
              "nameLocation": "2200:13:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 422,
                    "nodeType": "StructuredDocumentation",
                    "src": "2220:219:2",
                    "text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "89c62b64",
                  "id": 426,
                  "name": "ERC721InvalidOwner",
                  "nameLocation": "2450:18:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 425,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 424,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "2477:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 426,
                        "src": "2469:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 423,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2469:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2468:15:2"
                  },
                  "src": "2444:40:2"
                },
                {
                  "documentation": {
                    "id": 427,
                    "nodeType": "StructuredDocumentation",
                    "src": "2490:132:2",
                    "text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "7e273289",
                  "id": 431,
                  "name": "ERC721NonexistentToken",
                  "nameLocation": "2633:22:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 430,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 429,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "2664:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 431,
                        "src": "2656:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 428,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2656:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2655:17:2"
                  },
                  "src": "2627:46:2"
                },
                {
                  "documentation": {
                    "id": 432,
                    "nodeType": "StructuredDocumentation",
                    "src": "2679:289:2",
                    "text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "64283d7b",
                  "id": 440,
                  "name": "ERC721IncorrectOwner",
                  "nameLocation": "2979:20:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 439,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 434,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "3008:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 440,
                        "src": "3000:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 433,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3000:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 436,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3024:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 440,
                        "src": "3016:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 435,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3016:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 438,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3041:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 440,
                        "src": "3033:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 437,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3033:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2999:48:2"
                  },
                  "src": "2973:75:2"
                },
                {
                  "documentation": {
                    "id": 441,
                    "nodeType": "StructuredDocumentation",
                    "src": "3054:152:2",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "73c6ac6e",
                  "id": 445,
                  "name": "ERC721InvalidSender",
                  "nameLocation": "3217:19:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 444,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 443,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "3245:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 445,
                        "src": "3237:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 442,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3237:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3236:16:2"
                  },
                  "src": "3211:42:2"
                },
                {
                  "documentation": {
                    "id": 446,
                    "nodeType": "StructuredDocumentation",
                    "src": "3259:159:2",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "64a0ae92",
                  "id": 450,
                  "name": "ERC721InvalidReceiver",
                  "nameLocation": "3429:21:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 449,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 448,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "3459:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 450,
                        "src": "3451:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 447,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3451:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3450:18:2"
                  },
                  "src": "3423:46:2"
                },
                {
                  "documentation": {
                    "id": 451,
                    "nodeType": "StructuredDocumentation",
                    "src": "3475:247:2",
                    "text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "177e802f",
                  "id": 457,
                  "name": "ERC721InsufficientApproval",
                  "nameLocation": "3733:26:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 456,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 453,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "3768:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 457,
                        "src": "3760:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 452,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3760:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 455,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3786:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 457,
                        "src": "3778:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 454,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3778:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3759:35:2"
                  },
                  "src": "3727:68:2"
                },
                {
                  "documentation": {
                    "id": 458,
                    "nodeType": "StructuredDocumentation",
                    "src": "3801:174:2",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "a9fbf51f",
                  "id": 462,
                  "name": "ERC721InvalidApprover",
                  "nameLocation": "3986:21:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 461,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 460,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "4016:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 462,
                        "src": "4008:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 459,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4008:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4007:18:2"
                  },
                  "src": "3980:46:2"
                },
                {
                  "documentation": {
                    "id": 463,
                    "nodeType": "StructuredDocumentation",
                    "src": "4032:197:2",
                    "text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "5b08ba18",
                  "id": 467,
                  "name": "ERC721InvalidOperator",
                  "nameLocation": "4240:21:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 466,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 465,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "4270:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 467,
                        "src": "4262:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 464,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4262:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4261:18:2"
                  },
                  "src": "4234:46:2"
                }
              ],
              "scope": 516,
              "src": "2190:2092:2",
              "usedErrors": [
                426,
                431,
                440,
                445,
                450,
                457,
                462,
                467
              ],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC1155Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 469,
                "nodeType": "StructuredDocumentation",
                "src": "4284:145:2",
                "text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
              },
              "fullyImplemented": true,
              "id": 515,
              "linearizedBaseContracts": [
                515
              ],
              "name": "IERC1155Errors",
              "nameLocation": "4440:14:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 470,
                    "nodeType": "StructuredDocumentation",
                    "src": "4461:361:2",
                    "text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "03dee4c5",
                  "id": 480,
                  "name": "ERC1155InsufficientBalance",
                  "nameLocation": "4833:26:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 479,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 472,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "4868:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 480,
                        "src": "4860:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 471,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4860:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 474,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "4884:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 480,
                        "src": "4876:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 473,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4876:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 476,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "4901:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 480,
                        "src": "4893:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 475,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4893:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 478,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "4917:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 480,
                        "src": "4909:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 477,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4909:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4859:66:2"
                  },
                  "src": "4827:99:2"
                },
                {
                  "documentation": {
                    "id": 481,
                    "nodeType": "StructuredDocumentation",
                    "src": "4932:152:2",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "01a83514",
                  "id": 485,
                  "name": "ERC1155InvalidSender",
                  "nameLocation": "5095:20:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 484,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 483,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "5124:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 485,
                        "src": "5116:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 482,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5116:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5115:16:2"
                  },
                  "src": "5089:43:2"
                },
                {
                  "documentation": {
                    "id": 486,
                    "nodeType": "StructuredDocumentation",
                    "src": "5138:159:2",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "57f447ce",
                  "id": 490,
                  "name": "ERC1155InvalidReceiver",
                  "nameLocation": "5308:22:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 489,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 488,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "5339:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 490,
                        "src": "5331:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 487,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5331:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5330:18:2"
                  },
                  "src": "5302:47:2"
                },
                {
                  "documentation": {
                    "id": 491,
                    "nodeType": "StructuredDocumentation",
                    "src": "5355:256:2",
                    "text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "e237d922",
                  "id": 497,
                  "name": "ERC1155MissingApprovalForAll",
                  "nameLocation": "5622:28:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 496,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 493,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "5659:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 497,
                        "src": "5651:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 492,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5651:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 495,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "5677:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 497,
                        "src": "5669:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 494,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5669:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5650:33:2"
                  },
                  "src": "5616:68:2"
                },
                {
                  "documentation": {
                    "id": 498,
                    "nodeType": "StructuredDocumentation",
                    "src": "5690:174:2",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "3e31884e",
                  "id": 502,
                  "name": "ERC1155InvalidApprover",
                  "nameLocation": "5875:22:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 501,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 500,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "5906:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 502,
                        "src": "5898:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 499,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5898:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5897:18:2"
                  },
                  "src": "5869:47:2"
                },
                {
                  "documentation": {
                    "id": 503,
                    "nodeType": "StructuredDocumentation",
                    "src": "5922:197:2",
                    "text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "ced3e100",
                  "id": 507,
                  "name": "ERC1155InvalidOperator",
                  "nameLocation": "6130:22:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 506,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 505,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "6161:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 507,
                        "src": "6153:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 504,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6153:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6152:18:2"
                  },
                  "src": "6124:47:2"
                },
                {
                  "documentation": {
                    "id": 508,
                    "nodeType": "StructuredDocumentation",
                    "src": "6177:280:2",
                    "text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
                  },
                  "errorSelector": "5b059991",
                  "id": 514,
                  "name": "ERC1155InvalidArrayLength",
                  "nameLocation": "6468:25:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 513,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 510,
                        "mutability": "mutable",
                        "name": "idsLength",
                        "nameLocation": "6502:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 514,
                        "src": "6494:17:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 509,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6494:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 512,
                        "mutability": "mutable",
                        "name": "valuesLength",
                        "nameLocation": "6521:12:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 514,
                        "src": "6513:20:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 511,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6513:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6493:41:2"
                  },
                  "src": "6462:73:2"
                }
              ],
              "scope": 516,
              "src": "4430:2107:2",
              "usedErrors": [
                480,
                485,
                490,
                497,
                502,
                507,
                514
              ],
              "usedEvents": []
            }
          ],
          "src": "112:6426:2"
        }
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "id": 3,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
          "exportedSymbols": {
            "Context": [
              1210
            ],
            "ERC20": [
              1030
            ],
            "IERC20": [
              1108
            ],
            "IERC20Errors": [
              420
            ],
            "IERC20Metadata": [
              1180
            ]
          },
          "id": 1031,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 517,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "105:24:3"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "./IERC20.sol",
              "id": 519,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1031,
              "sourceUnit": 1109,
              "src": "131:36:3",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 518,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1108,
                    "src": "139:6:3",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
              "file": "./extensions/IERC20Metadata.sol",
              "id": 521,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1031,
              "sourceUnit": 1181,
              "src": "168:63:3",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 520,
                    "name": "IERC20Metadata",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1180,
                    "src": "176:14:3",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../../utils/Context.sol",
              "id": 523,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1031,
              "sourceUnit": 1211,
              "src": "232:48:3",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 522,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1210,
                    "src": "240:7:3",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
              "file": "../../interfaces/draft-IERC6093.sol",
              "id": 525,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1031,
              "sourceUnit": 516,
              "src": "281:65:3",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 524,
                    "name": "IERC20Errors",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 420,
                    "src": "289:12:3",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 527,
                    "name": "Context",
                    "nameLocations": [
                      "1133:7:3"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1210,
                    "src": "1133:7:3"
                  },
                  "id": 528,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1133:7:3"
                },
                {
                  "baseName": {
                    "id": 529,
                    "name": "IERC20",
                    "nameLocations": [
                      "1142:6:3"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1108,
                    "src": "1142:6:3"
                  },
                  "id": 530,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1142:6:3"
                },
                {
                  "baseName": {
                    "id": 531,
                    "name": "IERC20Metadata",
                    "nameLocations": [
                      "1150:14:3"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1180,
                    "src": "1150:14:3"
                  },
                  "id": 532,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1150:14:3"
                },
                {
                  "baseName": {
                    "id": 533,
                    "name": "IERC20Errors",
                    "nameLocations": [
                      "1166:12:3"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 420,
                    "src": "1166:12:3"
                  },
                  "id": 534,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1166:12:3"
                }
              ],
              "canonicalName": "ERC20",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 526,
                "nodeType": "StructuredDocumentation",
                "src": "348:757:3",
                "text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
              },
              "fullyImplemented": true,
              "id": 1030,
              "linearizedBaseContracts": [
                1030,
                420,
                1180,
                1108,
                1210
              ],
              "name": "ERC20",
              "nameLocation": "1124:5:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 538,
                  "mutability": "mutable",
                  "name": "_balances",
                  "nameLocation": "1229:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1030,
                  "src": "1185:53:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 537,
                    "keyName": "account",
                    "keyNameLocation": "1201:7:3",
                    "keyType": {
                      "id": 535,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1193:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1185:35:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 536,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1212:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 544,
                  "mutability": "mutable",
                  "name": "_allowances",
                  "nameLocation": "1317:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1030,
                  "src": "1245:83:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                    "typeString": "mapping(address => mapping(address => uint256))"
                  },
                  "typeName": {
                    "id": 543,
                    "keyName": "account",
                    "keyNameLocation": "1261:7:3",
                    "keyType": {
                      "id": 539,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1253:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1245:63:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                      "typeString": "mapping(address => mapping(address => uint256))"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 542,
                      "keyName": "spender",
                      "keyNameLocation": "1288:7:3",
                      "keyType": {
                        "id": 540,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1280:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "1272:35:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      },
                      "valueName": "",
                      "valueNameLocation": "-1:-1:-1",
                      "valueType": {
                        "id": 541,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1299:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 546,
                  "mutability": "mutable",
                  "name": "_totalSupply",
                  "nameLocation": "1351:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1030,
                  "src": "1335:28:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 545,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1335:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 548,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1385:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1030,
                  "src": "1370:20:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 547,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1370:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 550,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1411:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1030,
                  "src": "1396:22:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 549,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1396:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 566,
                    "nodeType": "Block",
                    "src": "1638:57:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 560,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 558,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 548,
                            "src": "1648:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 559,
                            "name": "name_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 553,
                            "src": "1656:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1648:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 561,
                        "nodeType": "ExpressionStatement",
                        "src": "1648:13:3"
                      },
                      {
                        "expression": {
                          "id": 564,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 562,
                            "name": "_symbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 550,
                            "src": "1671:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 563,
                            "name": "symbol_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 555,
                            "src": "1681:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1671:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 565,
                        "nodeType": "ExpressionStatement",
                        "src": "1671:17:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 551,
                    "nodeType": "StructuredDocumentation",
                    "src": "1425:152:3",
                    "text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
                  },
                  "id": 567,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 556,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 553,
                        "mutability": "mutable",
                        "name": "name_",
                        "nameLocation": "1608:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 567,
                        "src": "1594:19:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 552,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1594:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 555,
                        "mutability": "mutable",
                        "name": "symbol_",
                        "nameLocation": "1629:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 567,
                        "src": "1615:21:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 554,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1615:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1593:44:3"
                  },
                  "returnParameters": {
                    "id": 557,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1638:0:3"
                  },
                  "scope": 1030,
                  "src": "1582:113:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    1167
                  ],
                  "body": {
                    "id": 575,
                    "nodeType": "Block",
                    "src": "1820:29:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 573,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 548,
                          "src": "1837:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 572,
                        "id": 574,
                        "nodeType": "Return",
                        "src": "1830:12:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 568,
                    "nodeType": "StructuredDocumentation",
                    "src": "1701:54:3",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 576,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "1769:4:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 569,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1773:2:3"
                  },
                  "returnParameters": {
                    "id": 572,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 571,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 576,
                        "src": "1805:13:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 570,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1805:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1804:15:3"
                  },
                  "scope": 1030,
                  "src": "1760:89:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1173
                  ],
                  "body": {
                    "id": 584,
                    "nodeType": "Block",
                    "src": "2024:31:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 582,
                          "name": "_symbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 550,
                          "src": "2041:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 581,
                        "id": 583,
                        "nodeType": "Return",
                        "src": "2034:14:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 577,
                    "nodeType": "StructuredDocumentation",
                    "src": "1855:102:3",
                    "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
                  },
                  "functionSelector": "95d89b41",
                  "id": 585,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "1971:6:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 578,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1977:2:3"
                  },
                  "returnParameters": {
                    "id": 581,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 580,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 585,
                        "src": "2009:13:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 579,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2009:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2008:15:3"
                  },
                  "scope": 1030,
                  "src": "1962:93:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1179
                  ],
                  "body": {
                    "id": 593,
                    "nodeType": "Block",
                    "src": "2744:26:3",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "3138",
                          "id": 591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2761:2:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        },
                        "functionReturnParameters": 590,
                        "id": 592,
                        "nodeType": "Return",
                        "src": "2754:9:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 586,
                    "nodeType": "StructuredDocumentation",
                    "src": "2061:622:3",
                    "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
                  },
                  "functionSelector": "313ce567",
                  "id": 594,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "2697:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 587,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2705:2:3"
                  },
                  "returnParameters": {
                    "id": 590,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 589,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 594,
                        "src": "2737:5:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 588,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "2737:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2736:7:3"
                  },
                  "scope": 1030,
                  "src": "2688:82:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1057
                  ],
                  "body": {
                    "id": 602,
                    "nodeType": "Block",
                    "src": "2891:36:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 600,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 546,
                          "src": "2908:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 599,
                        "id": 601,
                        "nodeType": "Return",
                        "src": "2901:19:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 595,
                    "nodeType": "StructuredDocumentation",
                    "src": "2776:49:3",
                    "text": " @dev See {IERC20-totalSupply}."
                  },
                  "functionSelector": "18160ddd",
                  "id": 603,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "2839:11:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 596,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2850:2:3"
                  },
                  "returnParameters": {
                    "id": 599,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 598,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 603,
                        "src": "2882:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 597,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2882:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2881:9:3"
                  },
                  "scope": 1030,
                  "src": "2830:97:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1065
                  ],
                  "body": {
                    "id": 615,
                    "nodeType": "Block",
                    "src": "3059:42:3",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 611,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 538,
                            "src": "3076:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 613,
                          "indexExpression": {
                            "id": 612,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 606,
                            "src": "3086:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3076:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 610,
                        "id": 614,
                        "nodeType": "Return",
                        "src": "3069:25:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 604,
                    "nodeType": "StructuredDocumentation",
                    "src": "2933:47:3",
                    "text": " @dev See {IERC20-balanceOf}."
                  },
                  "functionSelector": "70a08231",
                  "id": 616,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "2994:9:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 607,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 606,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "3012:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 616,
                        "src": "3004:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 605,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3004:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3003:17:3"
                  },
                  "returnParameters": {
                    "id": 610,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 609,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 616,
                        "src": "3050:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 608,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3050:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3049:9:3"
                  },
                  "scope": 1030,
                  "src": "2985:116:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1075
                  ],
                  "body": {
                    "id": 639,
                    "nodeType": "Block",
                    "src": "3371:103:3",
                    "statements": [
                      {
                        "assignments": [
                          627
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 627,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "3389:5:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 639,
                            "src": "3381:13:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 626,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3381:7:3",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 630,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 628,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1192,
                            "src": "3397:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 629,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3397:12:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3381:28:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 632,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 627,
                              "src": "3429:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 633,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 619,
                              "src": "3436:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 634,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 621,
                              "src": "3440:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 631,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 760,
                            "src": "3419:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3419:27:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 636,
                        "nodeType": "ExpressionStatement",
                        "src": "3419:27:3"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3463:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 625,
                        "id": 638,
                        "nodeType": "Return",
                        "src": "3456:11:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 617,
                    "nodeType": "StructuredDocumentation",
                    "src": "3107:184:3",
                    "text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 640,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "3305:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 622,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 619,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "3322:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 640,
                        "src": "3314:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 618,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3314:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 621,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "3334:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 640,
                        "src": "3326:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 620,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3326:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3313:27:3"
                  },
                  "returnParameters": {
                    "id": 625,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 624,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 640,
                        "src": "3365:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 623,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3365:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3364:6:3"
                  },
                  "scope": 1030,
                  "src": "3296:178:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1085
                  ],
                  "body": {
                    "id": 656,
                    "nodeType": "Block",
                    "src": "3621:51:3",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 650,
                              "name": "_allowances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 544,
                              "src": "3638:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 652,
                            "indexExpression": {
                              "id": 651,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 643,
                              "src": "3650:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3638:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 654,
                          "indexExpression": {
                            "id": 653,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 645,
                            "src": "3657:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3638:27:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 649,
                        "id": 655,
                        "nodeType": "Return",
                        "src": "3631:34:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 641,
                    "nodeType": "StructuredDocumentation",
                    "src": "3480:47:3",
                    "text": " @dev See {IERC20-allowance}."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 657,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "3541:9:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 646,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 643,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3559:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 657,
                        "src": "3551:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 642,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3551:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 645,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "3574:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 657,
                        "src": "3566:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 644,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3566:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3550:32:3"
                  },
                  "returnParameters": {
                    "id": 649,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 648,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 657,
                        "src": "3612:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 647,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3612:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3611:9:3"
                  },
                  "scope": 1030,
                  "src": "3532:140:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1095
                  ],
                  "body": {
                    "id": 680,
                    "nodeType": "Block",
                    "src": "4058:107:3",
                    "statements": [
                      {
                        "assignments": [
                          668
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 668,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "4076:5:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 680,
                            "src": "4068:13:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 667,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4068:7:3",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 671,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 669,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1192,
                            "src": "4084:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4084:12:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4068:28:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 673,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 668,
                              "src": "4115:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 674,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 660,
                              "src": "4122:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 675,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 662,
                              "src": "4131:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 672,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              921,
                              981
                            ],
                            "referencedDeclaration": 921,
                            "src": "4106:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 676,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4106:31:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 677,
                        "nodeType": "ExpressionStatement",
                        "src": "4106:31:3"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4154:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 666,
                        "id": 679,
                        "nodeType": "Return",
                        "src": "4147:11:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 658,
                    "nodeType": "StructuredDocumentation",
                    "src": "3678:296:3",
                    "text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 681,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "3988:7:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 663,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 660,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "4004:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 681,
                        "src": "3996:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 659,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3996:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 662,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4021:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 681,
                        "src": "4013:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 661,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4013:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3995:32:3"
                  },
                  "returnParameters": {
                    "id": 666,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 665,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 681,
                        "src": "4052:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 664,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4052:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4051:6:3"
                  },
                  "scope": 1030,
                  "src": "3979:186:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1107
                  ],
                  "body": {
                    "id": 712,
                    "nodeType": "Block",
                    "src": "4850:151:3",
                    "statements": [
                      {
                        "assignments": [
                          694
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 694,
                            "mutability": "mutable",
                            "name": "spender",
                            "nameLocation": "4868:7:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 712,
                            "src": "4860:15:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 693,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4860:7:3",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 697,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 695,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1192,
                            "src": "4878:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 696,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4878:12:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4860:30:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 699,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 684,
                              "src": "4916:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 700,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 694,
                              "src": "4922:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 701,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 688,
                              "src": "4931:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 698,
                            "name": "_spendAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1029,
                            "src": "4900:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 702,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4900:37:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 703,
                        "nodeType": "ExpressionStatement",
                        "src": "4900:37:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 705,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 684,
                              "src": "4957:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 706,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 686,
                              "src": "4963:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 707,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 688,
                              "src": "4967:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 704,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 760,
                            "src": "4947:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 708,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4947:26:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 709,
                        "nodeType": "ExpressionStatement",
                        "src": "4947:26:3"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 710,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4990:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 692,
                        "id": 711,
                        "nodeType": "Return",
                        "src": "4983:11:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 682,
                    "nodeType": "StructuredDocumentation",
                    "src": "4171:581:3",
                    "text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
                  },
                  "functionSelector": "23b872dd",
                  "id": 713,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "4766:12:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 689,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 684,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "4787:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 713,
                        "src": "4779:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 683,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4779:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 686,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "4801:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 713,
                        "src": "4793:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 685,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4793:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 688,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4813:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 713,
                        "src": "4805:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 687,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4805:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4778:41:3"
                  },
                  "returnParameters": {
                    "id": 692,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 691,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 713,
                        "src": "4844:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 690,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4844:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4843:6:3"
                  },
                  "scope": 1030,
                  "src": "4757:244:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 759,
                    "nodeType": "Block",
                    "src": "5443:231:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 728,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 723,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 716,
                            "src": "5457:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 726,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5473:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 725,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5465:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 724,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5465:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 727,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5465:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5457:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 737,
                        "nodeType": "IfStatement",
                        "src": "5453:86:3",
                        "trueBody": {
                          "id": 736,
                          "nodeType": "Block",
                          "src": "5477:62:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 732,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5525:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 731,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5517:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 730,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5517:7:3",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 733,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5517:10:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 729,
                                  "name": "ERC20InvalidSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 395,
                                  "src": "5498:18:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 734,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5498:30:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 735,
                              "nodeType": "RevertStatement",
                              "src": "5491:37:3"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 738,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 718,
                            "src": "5552:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 741,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5566:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 740,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5558:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 739,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5558:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 742,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5558:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5552:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 752,
                        "nodeType": "IfStatement",
                        "src": "5548:86:3",
                        "trueBody": {
                          "id": 751,
                          "nodeType": "Block",
                          "src": "5570:64:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 747,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5620:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 746,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5612:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 745,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5612:7:3",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 748,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5612:10:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 744,
                                  "name": "ERC20InvalidReceiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 400,
                                  "src": "5591:20:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 749,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5591:32:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 750,
                              "nodeType": "RevertStatement",
                              "src": "5584:39:3"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 754,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 716,
                              "src": "5651:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 755,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 718,
                              "src": "5657:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 756,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 720,
                              "src": "5661:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 753,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 837,
                            "src": "5643:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 757,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5643:24:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 758,
                        "nodeType": "ExpressionStatement",
                        "src": "5643:24:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 714,
                    "nodeType": "StructuredDocumentation",
                    "src": "5007:362:3",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
                  },
                  "id": 760,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transfer",
                  "nameLocation": "5383:9:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 721,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 716,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "5401:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 760,
                        "src": "5393:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 715,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5393:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 718,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "5415:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 760,
                        "src": "5407:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 717,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5407:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 720,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "5427:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 760,
                        "src": "5419:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 719,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5419:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5392:41:3"
                  },
                  "returnParameters": {
                    "id": 722,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5443:0:3"
                  },
                  "scope": 1030,
                  "src": "5374:300:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 836,
                    "nodeType": "Block",
                    "src": "6064:1032:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 775,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 770,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 763,
                            "src": "6078:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 773,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6094:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 772,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6086:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 771,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6086:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 774,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6086:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6078:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 807,
                          "nodeType": "Block",
                          "src": "6252:362:3",
                          "statements": [
                            {
                              "assignments": [
                                782
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 782,
                                  "mutability": "mutable",
                                  "name": "fromBalance",
                                  "nameLocation": "6274:11:3",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 807,
                                  "src": "6266:19:3",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 781,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6266:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 786,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 783,
                                  "name": "_balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 538,
                                  "src": "6288:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 785,
                                "indexExpression": {
                                  "id": 784,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 763,
                                  "src": "6298:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6288:15:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "6266:37:3"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 789,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 787,
                                  "name": "fromBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 782,
                                  "src": "6321:11:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 788,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 767,
                                  "src": "6335:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6321:19:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 797,
                              "nodeType": "IfStatement",
                              "src": "6317:115:3",
                              "trueBody": {
                                "id": 796,
                                "nodeType": "Block",
                                "src": "6342:90:3",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "id": 791,
                                          "name": "from",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 763,
                                          "src": "6392:4:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 792,
                                          "name": "fromBalance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 782,
                                          "src": "6398:11:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 793,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 767,
                                          "src": "6411:5:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 790,
                                        "name": "ERC20InsufficientBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 390,
                                        "src": "6367:24:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                          "typeString": "function (address,uint256,uint256) pure returns (error)"
                                        }
                                      },
                                      "id": 794,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6367:50:3",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_error",
                                        "typeString": "error"
                                      }
                                    },
                                    "id": 795,
                                    "nodeType": "RevertStatement",
                                    "src": "6360:57:3"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 806,
                              "nodeType": "UncheckedBlock",
                              "src": "6445:159:3",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 804,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "id": 798,
                                        "name": "_balances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 538,
                                        "src": "6552:9:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 800,
                                      "indexExpression": {
                                        "id": 799,
                                        "name": "from",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 763,
                                        "src": "6562:4:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "6552:15:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 803,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 801,
                                        "name": "fromBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 782,
                                        "src": "6570:11:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 802,
                                        "name": "value",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 767,
                                        "src": "6584:5:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "6570:19:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6552:37:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 805,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6552:37:3"
                                }
                              ]
                            }
                          ]
                        },
                        "id": 808,
                        "nodeType": "IfStatement",
                        "src": "6074:540:3",
                        "trueBody": {
                          "id": 780,
                          "nodeType": "Block",
                          "src": "6098:148:3",
                          "statements": [
                            {
                              "expression": {
                                "id": 778,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 776,
                                  "name": "_totalSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 546,
                                  "src": "6214:12:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "id": 777,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 767,
                                  "src": "6230:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6214:21:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 779,
                              "nodeType": "ExpressionStatement",
                              "src": "6214:21:3"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 809,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 765,
                            "src": "6628:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 812,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6642:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 811,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6634:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 810,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6634:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 813,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6634:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6628:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 828,
                          "nodeType": "Block",
                          "src": "6843:206:3",
                          "statements": [
                            {
                              "id": 827,
                              "nodeType": "UncheckedBlock",
                              "src": "6857:182:3",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 825,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "id": 821,
                                        "name": "_balances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 538,
                                        "src": "7002:9:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 823,
                                      "indexExpression": {
                                        "id": 822,
                                        "name": "to",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 765,
                                        "src": "7012:2:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "7002:13:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "+=",
                                    "rightHandSide": {
                                      "id": 824,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 767,
                                      "src": "7019:5:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "7002:22:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 826,
                                  "nodeType": "ExpressionStatement",
                                  "src": "7002:22:3"
                                }
                              ]
                            }
                          ]
                        },
                        "id": 829,
                        "nodeType": "IfStatement",
                        "src": "6624:425:3",
                        "trueBody": {
                          "id": 820,
                          "nodeType": "Block",
                          "src": "6646:191:3",
                          "statements": [
                            {
                              "id": 819,
                              "nodeType": "UncheckedBlock",
                              "src": "6660:167:3",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 817,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 815,
                                      "name": "_totalSupply",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 546,
                                      "src": "6791:12:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "-=",
                                    "rightHandSide": {
                                      "id": 816,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 767,
                                      "src": "6807:5:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6791:21:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 818,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6791:21:3"
                                }
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 831,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 763,
                              "src": "7073:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 832,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 765,
                              "src": "7079:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 833,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 767,
                              "src": "7083:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 830,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1042,
                            "src": "7064:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 834,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7064:25:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 835,
                        "nodeType": "EmitStatement",
                        "src": "7059:30:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 761,
                    "nodeType": "StructuredDocumentation",
                    "src": "5680:304:3",
                    "text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
                  },
                  "id": 837,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_update",
                  "nameLocation": "5998:7:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 768,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 763,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "6014:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 837,
                        "src": "6006:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 762,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6006:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 765,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "6028:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 837,
                        "src": "6020:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 764,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6020:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 767,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "6040:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 837,
                        "src": "6032:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 766,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6032:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6005:41:3"
                  },
                  "returnParameters": {
                    "id": 769,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6064:0:3"
                  },
                  "scope": 1030,
                  "src": "5989:1107:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 869,
                    "nodeType": "Block",
                    "src": "7495:152:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 850,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 845,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 840,
                            "src": "7509:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 848,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7528:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 847,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7520:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 846,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7520:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 849,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7520:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7509:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 859,
                        "nodeType": "IfStatement",
                        "src": "7505:91:3",
                        "trueBody": {
                          "id": 858,
                          "nodeType": "Block",
                          "src": "7532:64:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 854,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7582:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 853,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "7574:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 852,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7574:7:3",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 855,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7574:10:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 851,
                                  "name": "ERC20InvalidReceiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 400,
                                  "src": "7553:20:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 856,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7553:32:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 857,
                              "nodeType": "RevertStatement",
                              "src": "7546:39:3"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 863,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7621:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 862,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7613:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 861,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7613:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 864,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7613:10:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 865,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 840,
                              "src": "7625:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 866,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 842,
                              "src": "7634:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 860,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 837,
                            "src": "7605:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 867,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7605:35:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 868,
                        "nodeType": "ExpressionStatement",
                        "src": "7605:35:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 838,
                    "nodeType": "StructuredDocumentation",
                    "src": "7102:332:3",
                    "text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
                  },
                  "id": 870,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_mint",
                  "nameLocation": "7448:5:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 843,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 840,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "7462:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 870,
                        "src": "7454:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 839,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7454:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 842,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "7479:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 870,
                        "src": "7471:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 841,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7471:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7453:32:3"
                  },
                  "returnParameters": {
                    "id": 844,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7495:0:3"
                  },
                  "scope": 1030,
                  "src": "7439:208:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 902,
                    "nodeType": "Block",
                    "src": "8021:150:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 883,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 878,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 873,
                            "src": "8035:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 881,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8054:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 880,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8046:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 879,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8046:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 882,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8046:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8035:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 892,
                        "nodeType": "IfStatement",
                        "src": "8031:89:3",
                        "trueBody": {
                          "id": 891,
                          "nodeType": "Block",
                          "src": "8058:62:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 887,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "8106:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 886,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "8098:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 885,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "8098:7:3",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 888,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8098:10:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 884,
                                  "name": "ERC20InvalidSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 395,
                                  "src": "8079:18:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 889,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8079:30:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 890,
                              "nodeType": "RevertStatement",
                              "src": "8072:37:3"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 894,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 873,
                              "src": "8137:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 897,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8154:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 896,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8146:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 895,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8146:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 898,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8146:10:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 899,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 875,
                              "src": "8158:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 893,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 837,
                            "src": "8129:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 900,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8129:35:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 901,
                        "nodeType": "ExpressionStatement",
                        "src": "8129:35:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 871,
                    "nodeType": "StructuredDocumentation",
                    "src": "7653:307:3",
                    "text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
                  },
                  "id": 903,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_burn",
                  "nameLocation": "7974:5:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 876,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 873,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "7988:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 903,
                        "src": "7980:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 872,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7980:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 875,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "8005:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 903,
                        "src": "7997:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 874,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7997:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7979:32:3"
                  },
                  "returnParameters": {
                    "id": 877,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8021:0:3"
                  },
                  "scope": 1030,
                  "src": "7965:206:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 920,
                    "nodeType": "Block",
                    "src": "8781:54:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 914,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 906,
                              "src": "8800:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 915,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 908,
                              "src": "8807:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 916,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 910,
                              "src": "8816:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 917,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8823:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 913,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              921,
                              981
                            ],
                            "referencedDeclaration": 981,
                            "src": "8791:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                              "typeString": "function (address,address,uint256,bool)"
                            }
                          },
                          "id": 918,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8791:37:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 919,
                        "nodeType": "ExpressionStatement",
                        "src": "8791:37:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 904,
                    "nodeType": "StructuredDocumentation",
                    "src": "8177:525:3",
                    "text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
                  },
                  "id": 921,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_approve",
                  "nameLocation": "8716:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 911,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 906,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "8733:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 921,
                        "src": "8725:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 905,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8725:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 908,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "8748:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 921,
                        "src": "8740:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 907,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8740:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 910,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "8765:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 921,
                        "src": "8757:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 909,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8757:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8724:47:3"
                  },
                  "returnParameters": {
                    "id": 912,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8781:0:3"
                  },
                  "scope": 1030,
                  "src": "8707:128:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 980,
                    "nodeType": "Block",
                    "src": "9780:334:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 938,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 933,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 924,
                            "src": "9794:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 936,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9811:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 935,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9803:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 934,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9803:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 937,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9803:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9794:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 947,
                        "nodeType": "IfStatement",
                        "src": "9790:89:3",
                        "trueBody": {
                          "id": 946,
                          "nodeType": "Block",
                          "src": "9815:64:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 942,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9865:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 941,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9857:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 940,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9857:7:3",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 943,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9857:10:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 939,
                                  "name": "ERC20InvalidApprover",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 414,
                                  "src": "9836:20:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 944,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9836:32:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 945,
                              "nodeType": "RevertStatement",
                              "src": "9829:39:3"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 953,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 948,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 926,
                            "src": "9892:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 951,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9911:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 950,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9903:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 949,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9903:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 952,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9903:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9892:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 962,
                        "nodeType": "IfStatement",
                        "src": "9888:90:3",
                        "trueBody": {
                          "id": 961,
                          "nodeType": "Block",
                          "src": "9915:63:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 957,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9964:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 956,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9956:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 955,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9956:7:3",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 958,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9956:10:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 954,
                                  "name": "ERC20InvalidSpender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 419,
                                  "src": "9936:19:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 959,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9936:31:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 960,
                              "nodeType": "RevertStatement",
                              "src": "9929:38:3"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 963,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 544,
                                "src": "9987:11:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 966,
                              "indexExpression": {
                                "id": 964,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 924,
                                "src": "9999:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9987:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 967,
                            "indexExpression": {
                              "id": 965,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 926,
                              "src": "10006:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9987:27:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 968,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 928,
                            "src": "10017:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9987:35:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 970,
                        "nodeType": "ExpressionStatement",
                        "src": "9987:35:3"
                      },
                      {
                        "condition": {
                          "id": 971,
                          "name": "emitEvent",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 930,
                          "src": "10036:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 979,
                        "nodeType": "IfStatement",
                        "src": "10032:76:3",
                        "trueBody": {
                          "id": 978,
                          "nodeType": "Block",
                          "src": "10047:61:3",
                          "statements": [
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 973,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 924,
                                    "src": "10075:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 974,
                                    "name": "spender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 926,
                                    "src": "10082:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 975,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 928,
                                    "src": "10091:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 972,
                                  "name": "Approval",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1051,
                                  "src": "10066:8:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256)"
                                  }
                                },
                                "id": 976,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10066:31:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 977,
                              "nodeType": "EmitStatement",
                              "src": "10061:36:3"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 922,
                    "nodeType": "StructuredDocumentation",
                    "src": "8841:836:3",
                    "text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
                  },
                  "id": 981,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_approve",
                  "nameLocation": "9691:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 931,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 924,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "9708:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 981,
                        "src": "9700:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 923,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9700:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 926,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "9723:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 981,
                        "src": "9715:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 925,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9715:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 928,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "9740:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 981,
                        "src": "9732:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 927,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9732:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 930,
                        "mutability": "mutable",
                        "name": "emitEvent",
                        "nameLocation": "9752:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 981,
                        "src": "9747:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 929,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "9747:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9699:63:3"
                  },
                  "returnParameters": {
                    "id": 932,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9780:0:3"
                  },
                  "scope": 1030,
                  "src": "9682:432:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1028,
                    "nodeType": "Block",
                    "src": "10485:387:3",
                    "statements": [
                      {
                        "assignments": [
                          992
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 992,
                            "mutability": "mutable",
                            "name": "currentAllowance",
                            "nameLocation": "10503:16:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 1028,
                            "src": "10495:24:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 991,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10495:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 997,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 994,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 984,
                              "src": "10532:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 995,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 986,
                              "src": "10539:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 993,
                            "name": "allowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 657,
                            "src": "10522:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view returns (uint256)"
                            }
                          },
                          "id": 996,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10522:25:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10495:52:3"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1004,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 998,
                            "name": "currentAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 992,
                            "src": "10561:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1001,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "10585:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 1000,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10585:7:3",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  }
                                ],
                                "id": 999,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967269,
                                "src": "10580:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 1002,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10580:13:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint256",
                                "typeString": "type(uint256)"
                              }
                            },
                            "id": 1003,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "10594:3:3",
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "10580:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10561:36:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1027,
                        "nodeType": "IfStatement",
                        "src": "10557:309:3",
                        "trueBody": {
                          "id": 1026,
                          "nodeType": "Block",
                          "src": "10599:267:3",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1007,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1005,
                                  "name": "currentAllowance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 992,
                                  "src": "10617:16:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 1006,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 988,
                                  "src": "10636:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10617:24:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1015,
                              "nodeType": "IfStatement",
                              "src": "10613:130:3",
                              "trueBody": {
                                "id": 1014,
                                "nodeType": "Block",
                                "src": "10643:100:3",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "id": 1009,
                                          "name": "spender",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 986,
                                          "src": "10695:7:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 1010,
                                          "name": "currentAllowance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 992,
                                          "src": "10704:16:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 1011,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 988,
                                          "src": "10722:5:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 1008,
                                        "name": "ERC20InsufficientAllowance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 409,
                                        "src": "10668:26:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                          "typeString": "function (address,uint256,uint256) pure returns (error)"
                                        }
                                      },
                                      "id": 1012,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "10668:60:3",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_error",
                                        "typeString": "error"
                                      }
                                    },
                                    "id": 1013,
                                    "nodeType": "RevertStatement",
                                    "src": "10661:67:3"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 1025,
                              "nodeType": "UncheckedBlock",
                              "src": "10756:100:3",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 1017,
                                        "name": "owner",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 984,
                                        "src": "10793:5:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 1018,
                                        "name": "spender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 986,
                                        "src": "10800:7:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1021,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1019,
                                          "name": "currentAllowance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 992,
                                          "src": "10809:16:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "id": 1020,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 988,
                                          "src": "10828:5:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "10809:24:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "hexValue": "66616c7365",
                                        "id": 1022,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "10835:5:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "false"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      ],
                                      "id": 1016,
                                      "name": "_approve",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        921,
                                        981
                                      ],
                                      "referencedDeclaration": 981,
                                      "src": "10784:8:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                                        "typeString": "function (address,address,uint256,bool)"
                                      }
                                    },
                                    "id": 1023,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10784:57:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 1024,
                                  "nodeType": "ExpressionStatement",
                                  "src": "10784:57:3"
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 982,
                    "nodeType": "StructuredDocumentation",
                    "src": "10120:271:3",
                    "text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
                  },
                  "id": 1029,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_spendAllowance",
                  "nameLocation": "10405:15:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 989,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 984,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "10429:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1029,
                        "src": "10421:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 983,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10421:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 986,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "10444:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1029,
                        "src": "10436:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 985,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10436:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 988,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "10461:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1029,
                        "src": "10453:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 987,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10453:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10420:47:3"
                  },
                  "returnParameters": {
                    "id": 990,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10485:0:3"
                  },
                  "scope": 1030,
                  "src": "10396:476:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 1031,
              "src": "1106:9768:3",
              "usedErrors": [
                390,
                395,
                400,
                409,
                414,
                419
              ],
              "usedEvents": [
                1042,
                1051
              ]
            }
          ],
          "src": "105:10770:3"
        }
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "id": 4,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              1108
            ]
          },
          "id": 1109,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1032,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "106:24:4"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1033,
                "nodeType": "StructuredDocumentation",
                "src": "132:71:4",
                "text": " @dev Interface of the ERC-20 standard as defined in the ERC."
              },
              "fullyImplemented": false,
              "id": 1108,
              "linearizedBaseContracts": [
                1108
              ],
              "name": "IERC20",
              "nameLocation": "214:6:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1034,
                    "nodeType": "StructuredDocumentation",
                    "src": "227:158:4",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                  "id": 1042,
                  "name": "Transfer",
                  "nameLocation": "396:8:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1041,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1036,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "421:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1042,
                        "src": "405:20:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1035,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "405:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1038,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "443:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1042,
                        "src": "427:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1037,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "427:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1040,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "455:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1042,
                        "src": "447:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1039,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "447:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "404:57:4"
                  },
                  "src": "390:72:4"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1043,
                    "nodeType": "StructuredDocumentation",
                    "src": "468:148:4",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
                  "id": 1051,
                  "name": "Approval",
                  "nameLocation": "627:8:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1050,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1045,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "652:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1051,
                        "src": "636:21:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1044,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "636:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1047,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "675:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1051,
                        "src": "659:23:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1046,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "659:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1049,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "692:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1051,
                        "src": "684:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1048,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "684:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "635:63:4"
                  },
                  "src": "621:78:4"
                },
                {
                  "documentation": {
                    "id": 1052,
                    "nodeType": "StructuredDocumentation",
                    "src": "705:65:4",
                    "text": " @dev Returns the value of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 1057,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "784:11:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1053,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "795:2:4"
                  },
                  "returnParameters": {
                    "id": 1056,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1055,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1057,
                        "src": "821:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1054,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "821:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "820:9:4"
                  },
                  "scope": 1108,
                  "src": "775:55:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1058,
                    "nodeType": "StructuredDocumentation",
                    "src": "836:71:4",
                    "text": " @dev Returns the value of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 1065,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "921:9:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1061,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1060,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "939:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1065,
                        "src": "931:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1059,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "931:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "930:17:4"
                  },
                  "returnParameters": {
                    "id": 1064,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1063,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1065,
                        "src": "971:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1062,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "971:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "970:9:4"
                  },
                  "scope": 1108,
                  "src": "912:68:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1066,
                    "nodeType": "StructuredDocumentation",
                    "src": "986:213:4",
                    "text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 1075,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "1213:8:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1071,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1068,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1230:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1075,
                        "src": "1222:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1067,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1222:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1070,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1242:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1075,
                        "src": "1234:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1069,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1234:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1221:27:4"
                  },
                  "returnParameters": {
                    "id": 1074,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1073,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1075,
                        "src": "1267:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1072,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1267:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1266:6:4"
                  },
                  "scope": 1108,
                  "src": "1204:69:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1076,
                    "nodeType": "StructuredDocumentation",
                    "src": "1279:264:4",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 1085,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "1557:9:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1081,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1078,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1575:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1085,
                        "src": "1567:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1077,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1567:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1080,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1590:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1085,
                        "src": "1582:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1079,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1582:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1566:32:4"
                  },
                  "returnParameters": {
                    "id": 1084,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1083,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1085,
                        "src": "1622:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1082,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1622:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1621:9:4"
                  },
                  "scope": 1108,
                  "src": "1548:83:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1086,
                    "nodeType": "StructuredDocumentation",
                    "src": "1637:667:4",
                    "text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 1095,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "2318:7:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1091,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1088,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2334:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1095,
                        "src": "2326:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1087,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2326:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1090,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2351:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1095,
                        "src": "2343:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1089,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2343:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2325:32:4"
                  },
                  "returnParameters": {
                    "id": 1094,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1093,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1095,
                        "src": "2376:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1092,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2376:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2375:6:4"
                  },
                  "scope": 1108,
                  "src": "2309:73:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1096,
                    "nodeType": "StructuredDocumentation",
                    "src": "2388:297:4",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 1107,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "2699:12:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1103,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1098,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2720:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1107,
                        "src": "2712:12:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1097,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2712:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1100,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2734:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1107,
                        "src": "2726:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1099,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2726:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1102,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2746:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1107,
                        "src": "2738:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1101,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2738:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2711:41:4"
                  },
                  "returnParameters": {
                    "id": 1106,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1105,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1107,
                        "src": "2771:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1104,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2771:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2770:6:4"
                  },
                  "scope": 1108,
                  "src": "2690:87:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1109,
              "src": "204:2575:4",
              "usedErrors": [],
              "usedEvents": [
                1042,
                1051
              ]
            }
          ],
          "src": "106:2674:4"
        }
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
        "id": 5,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
          "exportedSymbols": {
            "Context": [
              1210
            ],
            "ERC20": [
              1030
            ],
            "ERC20Burnable": [
              1154
            ]
          },
          "id": 1155,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1110,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "124:24:5"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "file": "../ERC20.sol",
              "id": 1112,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1155,
              "sourceUnit": 1031,
              "src": "150:35:5",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1111,
                    "name": "ERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1030,
                    "src": "158:5:5",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../../../utils/Context.sol",
              "id": 1114,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1155,
              "sourceUnit": 1211,
              "src": "186:51:5",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1113,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1210,
                    "src": "194:7:5",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1116,
                    "name": "Context",
                    "nameLocations": [
                      "483:7:5"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1210,
                    "src": "483:7:5"
                  },
                  "id": 1117,
                  "nodeType": "InheritanceSpecifier",
                  "src": "483:7:5"
                },
                {
                  "baseName": {
                    "id": 1118,
                    "name": "ERC20",
                    "nameLocations": [
                      "492:5:5"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1030,
                    "src": "492:5:5"
                  },
                  "id": 1119,
                  "nodeType": "InheritanceSpecifier",
                  "src": "492:5:5"
                }
              ],
              "canonicalName": "ERC20Burnable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1115,
                "nodeType": "StructuredDocumentation",
                "src": "239:208:5",
                "text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
              },
              "fullyImplemented": true,
              "id": 1154,
              "linearizedBaseContracts": [
                1154,
                1030,
                420,
                1180,
                1108,
                1210
              ],
              "name": "ERC20Burnable",
              "nameLocation": "466:13:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 1131,
                    "nodeType": "Block",
                    "src": "662:43:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1126,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1192,
                                "src": "678:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1127,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "678:12:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1128,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1122,
                              "src": "692:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1125,
                            "name": "_burn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 903,
                            "src": "672:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "672:26:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1130,
                        "nodeType": "ExpressionStatement",
                        "src": "672:26:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1120,
                    "nodeType": "StructuredDocumentation",
                    "src": "504:109:5",
                    "text": " @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."
                  },
                  "functionSelector": "42966c68",
                  "id": 1132,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "burn",
                  "nameLocation": "627:4:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1123,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1122,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "640:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1132,
                        "src": "632:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1121,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "632:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "631:15:5"
                  },
                  "returnParameters": {
                    "id": 1124,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "662:0:5"
                  },
                  "scope": 1154,
                  "src": "618:87:5",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1152,
                    "nodeType": "Block",
                    "src": "1086:93:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1141,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1135,
                              "src": "1112:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1142,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1192,
                                "src": "1121:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1143,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1121:12:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1144,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1137,
                              "src": "1135:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1140,
                            "name": "_spendAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1029,
                            "src": "1096:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1096:45:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1146,
                        "nodeType": "ExpressionStatement",
                        "src": "1096:45:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1148,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1135,
                              "src": "1157:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1149,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1137,
                              "src": "1166:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1147,
                            "name": "_burn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 903,
                            "src": "1151:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1151:21:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1151,
                        "nodeType": "ExpressionStatement",
                        "src": "1151:21:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1133,
                    "nodeType": "StructuredDocumentation",
                    "src": "711:305:5",
                    "text": " @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."
                  },
                  "functionSelector": "79cc6790",
                  "id": 1153,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "burnFrom",
                  "nameLocation": "1030:8:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1138,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1135,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "1047:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1153,
                        "src": "1039:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1134,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1039:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1137,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1064:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1153,
                        "src": "1056:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1136,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1056:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1038:32:5"
                  },
                  "returnParameters": {
                    "id": 1139,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1086:0:5"
                  },
                  "scope": 1154,
                  "src": "1021:158:5",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                }
              ],
              "scope": 1155,
              "src": "448:733:5",
              "usedErrors": [
                390,
                395,
                400,
                409,
                414,
                419
              ],
              "usedEvents": [
                1042,
                1051
              ]
            }
          ],
          "src": "124:1058:5"
        }
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "id": 6,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
          "exportedSymbols": {
            "IERC20": [
              1108
            ],
            "IERC20Metadata": [
              1180
            ]
          },
          "id": 1181,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1156,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "125:24:6"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "../IERC20.sol",
              "id": 1158,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1181,
              "sourceUnit": 1109,
              "src": "151:37:6",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1157,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1108,
                    "src": "159:6:6",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1160,
                    "name": "IERC20",
                    "nameLocations": [
                      "306:6:6"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1108,
                    "src": "306:6:6"
                  },
                  "id": 1161,
                  "nodeType": "InheritanceSpecifier",
                  "src": "306:6:6"
                }
              ],
              "canonicalName": "IERC20Metadata",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1159,
                "nodeType": "StructuredDocumentation",
                "src": "190:87:6",
                "text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
              },
              "fullyImplemented": false,
              "id": 1180,
              "linearizedBaseContracts": [
                1180,
                1108
              ],
              "name": "IERC20Metadata",
              "nameLocation": "288:14:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1162,
                    "nodeType": "StructuredDocumentation",
                    "src": "319:54:6",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 1167,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "387:4:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1163,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "391:2:6"
                  },
                  "returnParameters": {
                    "id": 1166,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1165,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1167,
                        "src": "417:13:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1164,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "417:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "416:15:6"
                  },
                  "scope": 1180,
                  "src": "378:54:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1168,
                    "nodeType": "StructuredDocumentation",
                    "src": "438:56:6",
                    "text": " @dev Returns the symbol of the token."
                  },
                  "functionSelector": "95d89b41",
                  "id": 1173,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "508:6:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1169,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "514:2:6"
                  },
                  "returnParameters": {
                    "id": 1172,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1171,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1173,
                        "src": "540:13:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1170,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "540:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "539:15:6"
                  },
                  "scope": 1180,
                  "src": "499:56:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1174,
                    "nodeType": "StructuredDocumentation",
                    "src": "561:65:6",
                    "text": " @dev Returns the decimals places of the token."
                  },
                  "functionSelector": "313ce567",
                  "id": 1179,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "640:8:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1175,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "648:2:6"
                  },
                  "returnParameters": {
                    "id": 1178,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1177,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1179,
                        "src": "674:5:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1176,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "674:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "673:7:6"
                  },
                  "scope": 1180,
                  "src": "631:50:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1181,
              "src": "278:405:6",
              "usedErrors": [],
              "usedEvents": [
                1042,
                1051
              ]
            }
          ],
          "src": "125:559:6"
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "id": 7,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
          "exportedSymbols": {
            "Context": [
              1210
            ]
          },
          "id": 1211,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1182,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "101:24:7"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "Context",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1183,
                "nodeType": "StructuredDocumentation",
                "src": "127:496:7",
                "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
              },
              "fullyImplemented": true,
              "id": 1210,
              "linearizedBaseContracts": [
                1210
              ],
              "name": "Context",
              "nameLocation": "642:7:7",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 1191,
                    "nodeType": "Block",
                    "src": "718:34:7",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 1188,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "735:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "739:6:7",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "735:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1187,
                        "id": 1190,
                        "nodeType": "Return",
                        "src": "728:17:7"
                      }
                    ]
                  },
                  "id": 1192,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nameLocation": "665:10:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1184,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "675:2:7"
                  },
                  "returnParameters": {
                    "id": 1187,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1186,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1192,
                        "src": "709:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1185,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "709:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "708:9:7"
                  },
                  "scope": 1210,
                  "src": "656:96:7",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1200,
                    "nodeType": "Block",
                    "src": "825:32:7",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 1197,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "842:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "846:4:7",
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "842:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 1196,
                        "id": 1199,
                        "nodeType": "Return",
                        "src": "835:15:7"
                      }
                    ]
                  },
                  "id": 1201,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nameLocation": "767:8:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1193,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "775:2:7"
                  },
                  "returnParameters": {
                    "id": 1196,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1195,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1201,
                        "src": "809:14:7",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1194,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "809:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "808:16:7"
                  },
                  "scope": 1210,
                  "src": "758:99:7",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1208,
                    "nodeType": "Block",
                    "src": "935:25:7",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 1206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "952:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 1205,
                        "id": 1207,
                        "nodeType": "Return",
                        "src": "945:8:7"
                      }
                    ]
                  },
                  "id": 1209,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_contextSuffixLength",
                  "nameLocation": "872:20:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1202,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "892:2:7"
                  },
                  "returnParameters": {
                    "id": 1205,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1204,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1209,
                        "src": "926:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1203,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "926:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "925:9:7"
                  },
                  "scope": 1210,
                  "src": "863:97:7",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 1211,
              "src": "624:338:7",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "101:862:7"
        }
      },
      "@openzeppelin/contracts/utils/Pausable.sol": {
        "id": 8,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
          "exportedSymbols": {
            "Context": [
              1210
            ],
            "Pausable": [
              1318
            ]
          },
          "id": 1319,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1212,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "102:24:8"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 1214,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1319,
              "sourceUnit": 1211,
              "src": "128:45:8",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1213,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1210,
                    "src": "136:7:8",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1216,
                    "name": "Context",
                    "nameLocations": [
                      "645:7:8"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1210,
                    "src": "645:7:8"
                  },
                  "id": 1217,
                  "nodeType": "InheritanceSpecifier",
                  "src": "645:7:8"
                }
              ],
              "canonicalName": "Pausable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1215,
                "nodeType": "StructuredDocumentation",
                "src": "175:439:8",
                "text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
              },
              "fullyImplemented": true,
              "id": 1318,
              "linearizedBaseContracts": [
                1318,
                1210
              ],
              "name": "Pausable",
              "nameLocation": "633:8:8",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 1219,
                  "mutability": "mutable",
                  "name": "_paused",
                  "nameLocation": "672:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1318,
                  "src": "659:20:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1218,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "659:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1220,
                    "nodeType": "StructuredDocumentation",
                    "src": "686:73:8",
                    "text": " @dev Emitted when the pause is triggered by `account`."
                  },
                  "eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
                  "id": 1224,
                  "name": "Paused",
                  "nameLocation": "770:6:8",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1223,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1222,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "785:7:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1224,
                        "src": "777:15:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1221,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "777:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "776:17:8"
                  },
                  "src": "764:30:8"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1225,
                    "nodeType": "StructuredDocumentation",
                    "src": "800:70:8",
                    "text": " @dev Emitted when the pause is lifted by `account`."
                  },
                  "eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
                  "id": 1229,
                  "name": "Unpaused",
                  "nameLocation": "881:8:8",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1228,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1227,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "898:7:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1229,
                        "src": "890:15:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1226,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "890:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "889:17:8"
                  },
                  "src": "875:32:8"
                },
                {
                  "documentation": {
                    "id": 1230,
                    "nodeType": "StructuredDocumentation",
                    "src": "913:76:8",
                    "text": " @dev The operation failed because the contract is paused."
                  },
                  "errorSelector": "d93c0665",
                  "id": 1232,
                  "name": "EnforcedPause",
                  "nameLocation": "1000:13:8",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1231,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1013:2:8"
                  },
                  "src": "994:22:8"
                },
                {
                  "documentation": {
                    "id": 1233,
                    "nodeType": "StructuredDocumentation",
                    "src": "1022:80:8",
                    "text": " @dev The operation failed because the contract is not paused."
                  },
                  "errorSelector": "8dfc202b",
                  "id": 1235,
                  "name": "ExpectedPause",
                  "nameLocation": "1113:13:8",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1234,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1126:2:8"
                  },
                  "src": "1107:22:8"
                },
                {
                  "body": {
                    "id": 1242,
                    "nodeType": "Block",
                    "src": "1340:47:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1238,
                            "name": "_requireNotPaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1272,
                            "src": "1350:17:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 1239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1350:19:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1240,
                        "nodeType": "ExpressionStatement",
                        "src": "1350:19:8"
                      },
                      {
                        "id": 1241,
                        "nodeType": "PlaceholderStatement",
                        "src": "1379:1:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1236,
                    "nodeType": "StructuredDocumentation",
                    "src": "1135:175:8",
                    "text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
                  },
                  "id": 1243,
                  "name": "whenNotPaused",
                  "nameLocation": "1324:13:8",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1237,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1337:2:8"
                  },
                  "src": "1315:72:8",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1250,
                    "nodeType": "Block",
                    "src": "1587:44:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1246,
                            "name": "_requirePaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1285,
                            "src": "1597:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 1247,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1597:16:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1248,
                        "nodeType": "ExpressionStatement",
                        "src": "1597:16:8"
                      },
                      {
                        "id": 1249,
                        "nodeType": "PlaceholderStatement",
                        "src": "1623:1:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1244,
                    "nodeType": "StructuredDocumentation",
                    "src": "1393:167:8",
                    "text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
                  },
                  "id": 1251,
                  "name": "whenPaused",
                  "nameLocation": "1574:10:8",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1245,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1584:2:8"
                  },
                  "src": "1565:66:8",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1259,
                    "nodeType": "Block",
                    "src": "1779:31:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 1257,
                          "name": "_paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1219,
                          "src": "1796:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1256,
                        "id": 1258,
                        "nodeType": "Return",
                        "src": "1789:14:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1252,
                    "nodeType": "StructuredDocumentation",
                    "src": "1637:84:8",
                    "text": " @dev Returns true if the contract is paused, and false otherwise."
                  },
                  "functionSelector": "5c975abb",
                  "id": 1260,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "paused",
                  "nameLocation": "1735:6:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1253,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1741:2:8"
                  },
                  "returnParameters": {
                    "id": 1256,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1255,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1260,
                        "src": "1773:4:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1254,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1773:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1772:6:8"
                  },
                  "scope": 1318,
                  "src": "1726:84:8",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1271,
                    "nodeType": "Block",
                    "src": "1929:77:8",
                    "statements": [
                      {
                        "condition": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1264,
                            "name": "paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1260,
                            "src": "1943:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 1265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1943:8:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1270,
                        "nodeType": "IfStatement",
                        "src": "1939:61:8",
                        "trueBody": {
                          "id": 1269,
                          "nodeType": "Block",
                          "src": "1953:47:8",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1266,
                                  "name": "EnforcedPause",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1232,
                                  "src": "1974:13:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 1267,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1974:15:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1268,
                              "nodeType": "RevertStatement",
                              "src": "1967:22:8"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1261,
                    "nodeType": "StructuredDocumentation",
                    "src": "1816:57:8",
                    "text": " @dev Throws if the contract is paused."
                  },
                  "id": 1272,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_requireNotPaused",
                  "nameLocation": "1887:17:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1262,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1904:2:8"
                  },
                  "returnParameters": {
                    "id": 1263,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1929:0:8"
                  },
                  "scope": 1318,
                  "src": "1878:128:8",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1284,
                    "nodeType": "Block",
                    "src": "2126:78:8",
                    "statements": [
                      {
                        "condition": {
                          "id": 1278,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "2140:9:8",
                          "subExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1276,
                              "name": "paused",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1260,
                              "src": "2141:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                "typeString": "function () view returns (bool)"
                              }
                            },
                            "id": 1277,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2141:8:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1283,
                        "nodeType": "IfStatement",
                        "src": "2136:62:8",
                        "trueBody": {
                          "id": 1282,
                          "nodeType": "Block",
                          "src": "2151:47:8",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1279,
                                  "name": "ExpectedPause",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1235,
                                  "src": "2172:13:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 1280,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2172:15:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1281,
                              "nodeType": "RevertStatement",
                              "src": "2165:22:8"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1273,
                    "nodeType": "StructuredDocumentation",
                    "src": "2012:61:8",
                    "text": " @dev Throws if the contract is not paused."
                  },
                  "id": 1285,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_requirePaused",
                  "nameLocation": "2087:14:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1274,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2101:2:8"
                  },
                  "returnParameters": {
                    "id": 1275,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2126:0:8"
                  },
                  "scope": 1318,
                  "src": "2078:126:8",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1300,
                    "nodeType": "Block",
                    "src": "2388:66:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 1293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1291,
                            "name": "_paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1219,
                            "src": "2398:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1292,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2408:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2398:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1294,
                        "nodeType": "ExpressionStatement",
                        "src": "2398:14:8"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1296,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1192,
                                "src": "2434:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1297,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2434:12:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1295,
                            "name": "Paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1224,
                            "src": "2427:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2427:20:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1299,
                        "nodeType": "EmitStatement",
                        "src": "2422:25:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1286,
                    "nodeType": "StructuredDocumentation",
                    "src": "2210:124:8",
                    "text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
                  },
                  "id": 1301,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1289,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1288,
                        "name": "whenNotPaused",
                        "nameLocations": [
                          "2374:13:8"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1243,
                        "src": "2374:13:8"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2374:13:8"
                    }
                  ],
                  "name": "_pause",
                  "nameLocation": "2348:6:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1287,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2354:2:8"
                  },
                  "returnParameters": {
                    "id": 1290,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2388:0:8"
                  },
                  "scope": 1318,
                  "src": "2339:115:8",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1316,
                    "nodeType": "Block",
                    "src": "2634:69:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 1309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1307,
                            "name": "_paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1219,
                            "src": "2644:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 1308,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2654:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2644:15:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1310,
                        "nodeType": "ExpressionStatement",
                        "src": "2644:15:8"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1312,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1192,
                                "src": "2683:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1313,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2683:12:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1311,
                            "name": "Unpaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1229,
                            "src": "2674:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1314,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2674:22:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1315,
                        "nodeType": "EmitStatement",
                        "src": "2669:27:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1302,
                    "nodeType": "StructuredDocumentation",
                    "src": "2460:121:8",
                    "text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
                  },
                  "id": 1317,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1305,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1304,
                        "name": "whenPaused",
                        "nameLocations": [
                          "2623:10:8"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1251,
                        "src": "2623:10:8"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2623:10:8"
                    }
                  ],
                  "name": "_unpause",
                  "nameLocation": "2595:8:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1303,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2603:2:8"
                  },
                  "returnParameters": {
                    "id": 1306,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2634:0:8"
                  },
                  "scope": 1318,
                  "src": "2586:117:8",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 1319,
              "src": "615:2090:8",
              "usedErrors": [
                1232,
                1235
              ],
              "usedEvents": [
                1224,
                1229
              ]
            }
          ],
          "src": "102:2604:8"
        }
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "id": 9,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
          "exportedSymbols": {
            "ERC165": [
              1342
            ],
            "IERC165": [
              1354
            ]
          },
          "id": 1343,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1320,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "114:24:9"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
              "file": "./IERC165.sol",
              "id": 1322,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1343,
              "sourceUnit": 1355,
              "src": "140:38:9",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1321,
                    "name": "IERC165",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1354,
                    "src": "148:7:9",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1324,
                    "name": "IERC165",
                    "nameLocations": [
                      "688:7:9"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1354,
                    "src": "688:7:9"
                  },
                  "id": 1325,
                  "nodeType": "InheritanceSpecifier",
                  "src": "688:7:9"
                }
              ],
              "canonicalName": "ERC165",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1323,
                "nodeType": "StructuredDocumentation",
                "src": "180:479:9",
                "text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
              },
              "fullyImplemented": true,
              "id": 1342,
              "linearizedBaseContracts": [
                1342,
                1354
              ],
              "name": "ERC165",
              "nameLocation": "678:6:9",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "baseFunctions": [
                    1353
                  ],
                  "body": {
                    "id": 1340,
                    "nodeType": "Block",
                    "src": "845:64:9",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "id": 1338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1333,
                            "name": "interfaceId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1328,
                            "src": "862:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1335,
                                  "name": "IERC165",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1354,
                                  "src": "882:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC165_$1354_$",
                                    "typeString": "type(contract IERC165)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_contract$_IERC165_$1354_$",
                                    "typeString": "type(contract IERC165)"
                                  }
                                ],
                                "id": 1334,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967269,
                                "src": "877:4:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 1336,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "877:13:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1354",
                                "typeString": "type(contract IERC165)"
                              }
                            },
                            "id": 1337,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "891:11:9",
                            "memberName": "interfaceId",
                            "nodeType": "MemberAccess",
                            "src": "877:25:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "src": "862:40:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1332,
                        "id": 1339,
                        "nodeType": "Return",
                        "src": "855:47:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1326,
                    "nodeType": "StructuredDocumentation",
                    "src": "702:56:9",
                    "text": " @dev See {IERC165-supportsInterface}."
                  },
                  "functionSelector": "01ffc9a7",
                  "id": 1341,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "supportsInterface",
                  "nameLocation": "772:17:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1329,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1328,
                        "mutability": "mutable",
                        "name": "interfaceId",
                        "nameLocation": "797:11:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1341,
                        "src": "790:18:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 1327,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "790:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "789:20:9"
                  },
                  "returnParameters": {
                    "id": 1332,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1331,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1341,
                        "src": "839:4:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1330,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "839:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "838:6:9"
                  },
                  "scope": 1342,
                  "src": "763:146:9",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                }
              ],
              "scope": 1343,
              "src": "660:251:9",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "114:798:9"
        }
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "id": 10,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
          "exportedSymbols": {
            "IERC165": [
              1354
            ]
          },
          "id": 1355,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1344,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "115:24:10"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC165",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1345,
                "nodeType": "StructuredDocumentation",
                "src": "141:280:10",
                "text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
              },
              "fullyImplemented": false,
              "id": 1354,
              "linearizedBaseContracts": [
                1354
              ],
              "name": "IERC165",
              "nameLocation": "432:7:10",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1346,
                    "nodeType": "StructuredDocumentation",
                    "src": "446:340:10",
                    "text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
                  },
                  "functionSelector": "01ffc9a7",
                  "id": 1353,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "supportsInterface",
                  "nameLocation": "800:17:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1349,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1348,
                        "mutability": "mutable",
                        "name": "interfaceId",
                        "nameLocation": "825:11:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1353,
                        "src": "818:18:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 1347,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "818:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "817:20:10"
                  },
                  "returnParameters": {
                    "id": 1352,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1351,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1353,
                        "src": "861:4:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1350,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "861:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "860:6:10"
                  },
                  "scope": 1354,
                  "src": "791:76:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1355,
              "src": "422:447:10",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "115:755:10"
        }
      },
      "contracts/MyToken.sol": {
        "id": 11,
        "ast": {
          "absolutePath": "contracts/MyToken.sol",
          "exportedSymbols": {
            "AccessControl": [
              295
            ],
            "Context": [
              1210
            ],
            "ERC165": [
              1342
            ],
            "ERC20": [
              1030
            ],
            "ERC20Burnable": [
              1154
            ],
            "IAccessControl": [
              378
            ],
            "IERC20": [
              1108
            ],
            "IERC20Errors": [
              420
            ],
            "IERC20Metadata": [
              1180
            ],
            "MyToken": [
              1478
            ],
            "Pausable": [
              1318
            ]
          },
          "id": 1479,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1356,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:11"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "id": 1357,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1479,
              "sourceUnit": 1031,
              "src": "58:55:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
              "file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
              "id": 1358,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1479,
              "sourceUnit": 1155,
              "src": "114:74:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
              "file": "@openzeppelin/contracts/utils/Pausable.sol",
              "id": 1359,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1479,
              "sourceUnit": 1319,
              "src": "189:52:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
              "file": "@openzeppelin/contracts/access/AccessControl.sol",
              "id": 1360,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1479,
              "sourceUnit": 296,
              "src": "242:58:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
              "file": "@openzeppelin/contracts/access/IAccessControl.sol",
              "id": 1361,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1479,
              "sourceUnit": 379,
              "src": "301:59:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1362,
                    "name": "ERC20",
                    "nameLocations": [
                      "383:5:11"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1030,
                    "src": "383:5:11"
                  },
                  "id": 1363,
                  "nodeType": "InheritanceSpecifier",
                  "src": "383:5:11"
                },
                {
                  "baseName": {
                    "id": 1364,
                    "name": "ERC20Burnable",
                    "nameLocations": [
                      "390:13:11"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1154,
                    "src": "390:13:11"
                  },
                  "id": 1365,
                  "nodeType": "InheritanceSpecifier",
                  "src": "390:13:11"
                },
                {
                  "baseName": {
                    "id": 1366,
                    "name": "Pausable",
                    "nameLocations": [
                      "405:8:11"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1318,
                    "src": "405:8:11"
                  },
                  "id": 1367,
                  "nodeType": "InheritanceSpecifier",
                  "src": "405:8:11"
                },
                {
                  "baseName": {
                    "id": 1368,
                    "name": "AccessControl",
                    "nameLocations": [
                      "415:13:11"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 295,
                    "src": "415:13:11"
                  },
                  "id": 1369,
                  "nodeType": "InheritanceSpecifier",
                  "src": "415:13:11"
                }
              ],
              "canonicalName": "MyToken",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 1478,
              "linearizedBaseContracts": [
                1478,
                295,
                1342,
                1354,
                378,
                1318,
                1154,
                1030,
                420,
                1180,
                1108,
                1210
              ],
              "name": "MyToken",
              "nameLocation": "372:7:11",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "functionSelector": "e63ab1e9",
                  "id": 1374,
                  "mutability": "constant",
                  "name": "PAUSER_ROLE",
                  "nameLocation": "457:11:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1478,
                  "src": "433:62:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1370,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "433:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "arguments": [
                      {
                        "hexValue": "5041555345525f524f4c45",
                        "id": 1372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "481:13:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
                          "typeString": "literal_string \"PAUSER_ROLE\""
                        },
                        "value": "PAUSER_ROLE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
                          "typeString": "literal_string \"PAUSER_ROLE\""
                        }
                      ],
                      "id": 1371,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "471:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "471:24:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "d5391393",
                  "id": 1379,
                  "mutability": "constant",
                  "name": "MINTER_ROLE",
                  "nameLocation": "523:11:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1478,
                  "src": "499:62:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1375,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "499:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "arguments": [
                      {
                        "hexValue": "4d494e5445525f524f4c45",
                        "id": 1377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "547:13:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                          "typeString": "literal_string \"MINTER_ROLE\""
                        },
                        "value": "MINTER_ROLE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                          "typeString": "literal_string \"MINTER_ROLE\""
                        }
                      ],
                      "id": 1376,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "537:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "537:24:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "07546172",
                  "id": 1381,
                  "mutability": "mutable",
                  "name": "minter",
                  "nameLocation": "580:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1478,
                  "src": "565:21:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1380,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "565:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1419,
                    "nodeType": "Block",
                    "src": "650:199:11",
                    "statements": [
                      {
                        "expression": {
                          "id": 1393,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1390,
                            "name": "minter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1381,
                            "src": "656:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1391,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "665:3:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1392,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "669:6:11",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "665:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "656:19:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1394,
                        "nodeType": "ExpressionStatement",
                        "src": "656:19:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1396,
                              "name": "DEFAULT_ADMIN_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29,
                              "src": "692:18:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 1397,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "712:3:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1398,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "716:6:11",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "712:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1395,
                            "name": "_grantRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 256,
                            "src": "681:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) returns (bool)"
                            }
                          },
                          "id": 1399,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "681:42:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1400,
                        "nodeType": "ExpressionStatement",
                        "src": "681:42:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1402,
                              "name": "PAUSER_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1374,
                              "src": "740:11:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 1403,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "753:3:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1404,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "757:6:11",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "753:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1401,
                            "name": "_grantRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 256,
                            "src": "729:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) returns (bool)"
                            }
                          },
                          "id": 1405,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "729:35:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1406,
                        "nodeType": "ExpressionStatement",
                        "src": "729:35:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1408,
                              "name": "MINTER_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1379,
                              "src": "781:11:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 1409,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "794:3:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1410,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "798:6:11",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "794:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1407,
                            "name": "_grantRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 256,
                            "src": "770:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) returns (bool)"
                            }
                          },
                          "id": 1411,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "770:35:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1412,
                        "nodeType": "ExpressionStatement",
                        "src": "770:35:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1414,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "818:3:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1415,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "822:6:11",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "818:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1416,
                              "name": "initialSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1383,
                              "src": "830:13:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1413,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 870,
                            "src": "812:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "812:32:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1418,
                        "nodeType": "ExpressionStatement",
                        "src": "812:32:11"
                      }
                    ]
                  },
                  "id": 1420,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "hexValue": "4d79546f6b656e",
                          "id": 1386,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "632:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_245c734e6d4ec044daf7beffa09d54d4bafba490113c199734d790b04a7390e5",
                            "typeString": "literal_string \"MyToken\""
                          },
                          "value": "MyToken"
                        },
                        {
                          "hexValue": "4d544b",
                          "id": 1387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "643:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_793539e36336d70961c91bdb898dff4b065dbb5ef5ac709025f5b68be91dd01e",
                            "typeString": "literal_string \"MTK\""
                          },
                          "value": "MTK"
                        }
                      ],
                      "id": 1388,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 1385,
                        "name": "ERC20",
                        "nameLocations": [
                          "626:5:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1030,
                        "src": "626:5:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "626:23:11"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1384,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1383,
                        "mutability": "mutable",
                        "name": "initialSupply",
                        "nameLocation": "611:13:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1420,
                        "src": "603:21:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1382,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "603:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "602:23:11"
                  },
                  "returnParameters": {
                    "id": 1389,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "650:0:11"
                  },
                  "scope": 1478,
                  "src": "591:258:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1429,
                    "nodeType": "Block",
                    "src": "899:19:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1426,
                            "name": "_pause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1301,
                            "src": "905:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 1427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "905:8:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1428,
                        "nodeType": "ExpressionStatement",
                        "src": "905:8:11"
                      }
                    ]
                  },
                  "functionSelector": "8456cb59",
                  "id": 1430,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 1423,
                          "name": "PAUSER_ROLE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1374,
                          "src": "886:11:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 1424,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1422,
                        "name": "onlyRole",
                        "nameLocations": [
                          "877:8:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 40,
                        "src": "877:8:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "877:21:11"
                    }
                  ],
                  "name": "pause",
                  "nameLocation": "862:5:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1421,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "867:2:11"
                  },
                  "returnParameters": {
                    "id": 1425,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "899:0:11"
                  },
                  "scope": 1478,
                  "src": "853:65:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1439,
                    "nodeType": "Block",
                    "src": "970:21:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1436,
                            "name": "_unpause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1317,
                            "src": "976:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 1437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "976:10:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1438,
                        "nodeType": "ExpressionStatement",
                        "src": "976:10:11"
                      }
                    ]
                  },
                  "functionSelector": "3f4ba83a",
                  "id": 1440,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 1433,
                          "name": "PAUSER_ROLE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1374,
                          "src": "957:11:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 1434,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1432,
                        "name": "onlyRole",
                        "nameLocations": [
                          "948:8:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 40,
                        "src": "948:8:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "948:21:11"
                    }
                  ],
                  "name": "unpause",
                  "nameLocation": "931:7:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1431,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "938:2:11"
                  },
                  "returnParameters": {
                    "id": 1435,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "970:0:11"
                  },
                  "scope": 1478,
                  "src": "922:69:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1455,
                    "nodeType": "Block",
                    "src": "1066:28:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1451,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1442,
                              "src": "1078:2:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1452,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1444,
                              "src": "1082:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1450,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 870,
                            "src": "1072:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1453,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1072:17:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1454,
                        "nodeType": "ExpressionStatement",
                        "src": "1072:17:11"
                      }
                    ]
                  },
                  "functionSelector": "40c10f19",
                  "id": 1456,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 1447,
                          "name": "MINTER_ROLE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1379,
                          "src": "1053:11:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 1448,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1446,
                        "name": "onlyRole",
                        "nameLocations": [
                          "1044:8:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 40,
                        "src": "1044:8:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1044:21:11"
                    }
                  ],
                  "name": "mint",
                  "nameLocation": "1004:4:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1445,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1442,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1017:2:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1456,
                        "src": "1009:10:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1441,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1009:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1444,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1029:6:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1456,
                        "src": "1021:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1443,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1021:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1008:28:11"
                  },
                  "returnParameters": {
                    "id": 1449,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1066:0:11"
                  },
                  "scope": 1478,
                  "src": "995:99:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    837
                  ],
                  "body": {
                    "id": 1476,
                    "nodeType": "Block",
                    "src": "1197:42:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1471,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1458,
                              "src": "1217:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1472,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1460,
                              "src": "1223:2:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1473,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1462,
                              "src": "1227:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1468,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "1203:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_MyToken_$1478_$",
                                "typeString": "type(contract super MyToken)"
                              }
                            },
                            "id": 1470,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1209:7:11",
                            "memberName": "_update",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 837,
                            "src": "1203:13:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1474,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1203:31:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1475,
                        "nodeType": "ExpressionStatement",
                        "src": "1203:31:11"
                      }
                    ]
                  },
                  "id": 1477,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1466,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1465,
                        "name": "whenNotPaused",
                        "nameLocations": [
                          "1181:13:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1243,
                        "src": "1181:13:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1181:13:11"
                    }
                  ],
                  "name": "_update",
                  "nameLocation": "1107:7:11",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1464,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "1170:8:11"
                  },
                  "parameters": {
                    "id": 1463,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1458,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "1123:4:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1477,
                        "src": "1115:12:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1457,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1115:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1460,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1137:2:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1477,
                        "src": "1129:10:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1459,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1129:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1462,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1149:6:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1477,
                        "src": "1141:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1461,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1141:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1114:42:11"
                  },
                  "returnParameters": {
                    "id": 1467,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1197:0:11"
                  },
                  "scope": 1478,
                  "src": "1098:141:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 1479,
              "src": "363:878:11",
              "usedErrors": [
                305,
                308,
                390,
                395,
                400,
                409,
                414,
                419,
                1232,
                1235
              ],
              "usedEvents": [
                317,
                326,
                335,
                1042,
                1051,
                1224,
                1229
              ]
            }
          ],
          "src": "32:1210:11"
        }
      }
    },
    "contracts": {
      "@openzeppelin/contracts/access/AccessControl.sol": {
        "AccessControl": {
          "abi": [
            {
              "inputs": [],
              "name": "AccessControlBadConfirmation",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "neededRole",
                  "type": "bytes32"
                }
              ],
              "name": "AccessControlUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "previousAdminRole",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "newAdminRole",
                  "type": "bytes32"
                }
              ],
              "name": "RoleAdminChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "RoleGranted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "RoleRevoked",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "DEFAULT_ADMIN_ROLE",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                }
              ],
              "name": "getRoleAdmin",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "grantRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "hasRole",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "callerConfirmation",
                  "type": "address"
                }
              ],
              "name": "renounceRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "revokeRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://928cf2f0042c606f3dcb21bd8a272573f462a215cd65285d2d6b407f31e9bd67\",\"dweb:/ipfs/QmWGxjckno6sfjHPX5naPnsfsyisgy4PJDf46eLw9umfpx\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
          "evm": {
            "methodIdentifiers": {
              "DEFAULT_ADMIN_ROLE()": "a217fddf",
              "getRoleAdmin(bytes32)": "248a9ca3",
              "grantRole(bytes32,address)": "2f2ff15d",
              "hasRole(bytes32,address)": "91d14854",
              "renounceRole(bytes32,address)": "36568abe",
              "revokeRole(bytes32,address)": "d547741f",
              "supportsInterface(bytes4)": "01ffc9a7"
            }
          },
          "irOptimized": ""
        }
      },
      "@openzeppelin/contracts/access/IAccessControl.sol": {
        "IAccessControl": {
          "abi": [
            {
              "inputs": [],
              "name": "AccessControlBadConfirmation",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "neededRole",
                  "type": "bytes32"
                }
              ],
              "name": "AccessControlUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "previousAdminRole",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "newAdminRole",
                  "type": "bytes32"
                }
              ],
              "name": "RoleAdminChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "RoleGranted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "RoleRevoked",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                }
              ],
              "name": "getRoleAdmin",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "grantRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "hasRole",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "callerConfirmation",
                  "type": "address"
                }
              ],
              "name": "renounceRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "revokeRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]}},\"version\":1}",
          "evm": {
            "methodIdentifiers": {
              "getRoleAdmin(bytes32)": "248a9ca3",
              "grantRole(bytes32,address)": "2f2ff15d",
              "hasRole(bytes32,address)": "91d14854",
              "renounceRole(bytes32,address)": "36568abe",
              "revokeRole(bytes32,address)": "d547741f"
            }
          },
          "irOptimized": ""
        }
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "IERC1155Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC1155InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "idsLength",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "valuesLength",
                  "type": "uint256"
                }
              ],
              "name": "ERC1155InvalidArrayLength",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidOperator",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC1155MissingApprovalForAll",
              "type": "error"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
          "evm": {
            "methodIdentifiers": {}
          },
          "irOptimized": ""
        },
        "IERC20Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
          "evm": {
            "methodIdentifiers": {}
          },
          "irOptimized": ""
        },
        "IERC721Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC721IncorrectOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC721InsufficientApproval",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidOperator",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC721NonexistentToken",
              "type": "error"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
          "evm": {
            "methodIdentifiers": {}
          },
          "irOptimized": ""
        }
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "ERC20": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
          "evm": {
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "irOptimized": ""
        }
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
          "evm": {
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "irOptimized": ""
        }
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
        "ERC20Burnable": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "burn",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "burnFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
          "evm": {
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "burn(uint256)": "42966c68",
              "burnFrom(address,uint256)": "79cc6790",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "irOptimized": ""
        }
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "IERC20Metadata": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
          "evm": {
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "irOptimized": ""
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "Context": {
          "abi": [],
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
          "evm": {
            "methodIdentifiers": {}
          },
          "irOptimized": ""
        }
      },
      "@openzeppelin/contracts/utils/Pausable.sol": {
        "Pausable": {
          "abi": [
            {
              "inputs": [],
              "name": "EnforcedPause",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ExpectedPause",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]}},\"version\":1}",
          "evm": {
            "methodIdentifiers": {
              "paused()": "5c975abb"
            }
          },
          "irOptimized": ""
        }
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "ERC165": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
          "evm": {
            "methodIdentifiers": {
              "supportsInterface(bytes4)": "01ffc9a7"
            }
          },
          "irOptimized": ""
        }
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "IERC165": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
          "evm": {
            "methodIdentifiers": {
              "supportsInterface(bytes4)": "01ffc9a7"
            }
          },
          "irOptimized": ""
        }
      },
      "contracts/MyToken.sol": {
        "MyToken": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "initialSupply",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [],
              "name": "AccessControlBadConfirmation",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "neededRole",
                  "type": "bytes32"
                }
              ],
              "name": "AccessControlUnauthorizedAccount",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "EnforcedPause",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ExpectedPause",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "previousAdminRole",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "newAdminRole",
                  "type": "bytes32"
                }
              ],
              "name": "RoleAdminChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "RoleGranted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "RoleRevoked",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "DEFAULT_ADMIN_ROLE",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "MINTER_ROLE",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "PAUSER_ROLE",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "burn",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "burnFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                }
              ],
              "name": "getRoleAdmin",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "grantRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "hasRole",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "mint",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "minter",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "pause",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "callerConfirmation",
                  "type": "address"
                }
              ],
              "name": "renounceRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "revokeRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "unpause",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": {
            "llvm_arguments": [],
            "optimizer_settings": {
              "is_debug_logging_enabled": false,
              "is_fallback_to_size_enabled": false,
              "is_verify_each_enabled": false,
              "level_back_end": "Aggressive",
              "level_middle_end": "Default",
              "level_middle_end_size": "Z"
            },
            "revive_pallet_version": null,
            "revive_version": "0.2.0+commit.e94432e.llvm-18.1.8",
            "solc_metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyToken.sol\":\"MyToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://928cf2f0042c606f3dcb21bd8a272573f462a215cd65285d2d6b407f31e9bd67\",\"dweb:/ipfs/QmWGxjckno6sfjHPX5naPnsfsyisgy4PJDf46eLw9umfpx\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/MyToken.sol\":{\"keccak256\":\"0x6a804a958000c21510c8ca8fb881f900b0624fe10ad80b4a3b5b6cc98bb57fb8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acd09e947b8b41cf3cd686785553943e78f312a8a6ba757e39d6de29614939cc\",\"dweb:/ipfs/QmP4pLw53idKpWxHFg8PAsNPu76RqDNkGvumeTSJH2rU9z\"]}},\"version\":1}",
            "solc_version": "0.8.28+commit.7893614a.Emscripten.clang"
          },
          "evm": {
            "assembly": "// RO data = 0/0 bytes\n// RW data = 616/66208 bytes\n// Stack size = 32768 bytes\n\n// Instructions = 10027\n// Code size = 35182 bytes\n\n      : @0 (gas: 1)\n     0: jump @14 if a0 == a1\n      : @1 (gas: 9)\n     3: a3 = a1 << 0x20\n     6: a3 = a3 >> 0x20\n     9: a4 = a0 << 0x20\n    12: a4 = a4 >> 0x20\n    15: a4 = a4 + a2\n    18: a3 = a3 - a4\n    21: a4 = a2 << 0x1\n    24: a4 = -a4\n    26: jump @7 if a4 >=u a3\n      : @2 (gas: 1)\n    29: jump @11 if a0 >=u a1\n      : @3 (gas: 1)\n    32: jump @14 if a2 == 0\n      : @4 (gas: 3)\n    35: a2 = a2 + a0\n    38: a3 = a0\n    40: fallthrough\n      : @5 (gas: 6)\n    41: a4 = u8 [a1]\n    43: a1 = a1 + 0x1\n    46: a5 = a3 + 0x1\n    49: u8 [a3] = a4\n    51: a3 = a5\n    53: jump @5 if a5 != a2\n      : @6 (gas: 1)\n    56: jump @14\n      : @7 (gas: 1)\n    58: jump @14 if a2 == 0\n      : @8 (gas: 3)\n    61: a2 = a2 + a0\n    64: a3 = a0\n    66: fallthrough\n      : @9 (gas: 6)\n    67: a4 = u8 [a1]\n    69: a1 = a1 + 0x1\n    72: a5 = a3 + 0x1\n    75: u8 [a3] = a4\n    77: a3 = a5\n    79: jump @9 if a5 != a2\n      : @10 (gas: 1)\n    82: jump @14\n      : @11 (gas: 1)\n    84: jump @14 if a2 == 0\n      : @12 (gas: 2)\n    87: i32 a3 = a2 + 0xffffffffffffffff\n    90: fallthrough\n      : @13 (gas: 7)\n    91: a4 = a1 + a3\n    94: a4 = u8 [a4]\n    96: a2 = a2 + 0xffffffffffffffff\n    99: a5 = a0 + a3\n   102: u8 [a5] = a4\n   104: i32 a3 = a3 + 0xffffffffffffffff\n   107: jump @13 if a2 != 0\n      : @14 (gas: 1)\n   110: ret\n      : @15 (gas: 2)\n   112: a1 = i32 [0x20270]\n   117: jump @263 if a1 == 0\n      : @16 (gas: 4)\n   121: a0 = 0x302a0\n   126: i32 a0 = a0 + 0\n   128: ecalli 8 // 'set_immutable_data'\n   130: jump @263\n      : @17 (gas: 8)\n   133: sp = sp + 0xfffffffffffffff0\n   136: u64 [sp + 0x8] = ra\n   139: u64 [sp] = s0\n   141: a2 = a1\n   143: s0 = a0\n   145: a1 = 0x20\n   148: a0 = a2\n   150: ra = 2, jump @33\n      : @18 [@dyn 1] (gas: 100)\n   155: a1 = u8 [a0 + 0x1]\n   158: a2 = u8 [a0]\n   160: a3 = u8 [a0 + 0x2]\n   163: a4 = u8 [a0 + 0x3]\n   166: a1 = a1 << 0x8\n   169: a1 = a1 | a2\n   172: a3 = a3 << 0x10\n   175: a4 = a4 << 0x18\n   178: a3 = a3 | a4\n   181: a1 = a1 | a3\n   184: a2 = u8 [a0 + 0x5]\n   187: a3 = u8 [a0 + 0x4]\n   190: a4 = u8 [a0 + 0x6]\n   193: a5 = u8 [a0 + 0x7]\n   196: a2 = a2 << 0x8\n   199: a2 = a2 | a3\n   202: a4 = a4 << 0x10\n   205: a5 = a5 << 0x18\n   208: a4 = a4 | a5\n   211: a2 = a2 | a4\n   214: a2 = a2 << 0x20\n   217: t0 = a2 | a1\n   220: a2 = u8 [a0 + 0x9]\n   223: a3 = u8 [a0 + 0x8]\n   226: a4 = u8 [a0 + 0xa]\n   229: a5 = u8 [a0 + 0xb]\n   232: a2 = a2 << 0x8\n   235: a2 = a2 | a3\n   238: a4 = a4 << 0x10\n   241: a5 = a5 << 0x18\n   244: a4 = a4 | a5\n   247: a2 = a2 | a4\n   250: a3 = u8 [a0 + 0xd]\n   253: a4 = u8 [a0 + 0xc]\n   256: a5 = u8 [a0 + 0xe]\n   259: a1 = u8 [a0 + 0xf]\n   262: a3 = a3 << 0x8\n   265: a3 = a3 | a4\n   268: a5 = a5 << 0x10\n   271: a1 = a1 << 0x18\n   274: a1 = a1 | a5\n   277: a1 = a1 | a3\n   280: a1 = a1 << 0x20\n   283: t1 = a1 | a2\n   286: a1 = u8 [a0 + 0x11]\n   289: a3 = u8 [a0 + 0x10]\n   292: a4 = u8 [a0 + 0x12]\n   295: a5 = u8 [a0 + 0x13]\n   298: a1 = a1 << 0x8\n   301: a1 = a1 | a3\n   304: a4 = a4 << 0x10\n   307: a5 = a5 << 0x18\n   310: a4 = a4 | a5\n   313: a1 = a1 | a4\n   316: a3 = u8 [a0 + 0x15]\n   319: a4 = u8 [a0 + 0x14]\n   322: a5 = u8 [a0 + 0x16]\n   325: a2 = u8 [a0 + 0x17]\n   328: a3 = a3 << 0x8\n   331: a3 = a3 | a4\n   334: a5 = a5 << 0x10\n   337: a2 = a2 << 0x18\n   340: a2 = a2 | a5\n   343: a2 = a2 | a3\n   346: a2 = a2 << 0x20\n   349: a3 = a2 | a1\n   352: a1 = u8 [a0 + 0x19]\n   355: a2 = u8 [a0 + 0x18]\n   358: a4 = u8 [a0 + 0x1a]\n   361: a5 = u8 [a0 + 0x1b]\n   364: a1 = a1 << 0x8\n   367: a1 = a1 | a2\n   370: a4 = a4 << 0x10\n   373: a5 = a5 << 0x18\n   376: a4 = a4 | a5\n   379: a1 = a1 | a4\n   382: a2 = u8 [a0 + 0x1d]\n   385: a4 = u8 [a0 + 0x1c]\n   388: a5 = u8 [a0 + 0x1e]\n   391: a0 = u8 [a0 + 0x1f]\n   394: a2 = a2 << 0x8\n   397: a2 = a2 | a4\n   400: a5 = a5 << 0x10\n   403: a0 = a0 << 0x18\n   406: a0 = a0 | a5\n   409: a0 = a0 | a2\n   412: a0 = a0 << 0x20\n   415: a0 = a0 | a1\n   418: a0 = reverse a0\n   420: a1 = reverse a3\n   422: a2 = reverse t1\n   424: a3 = reverse t0\n   426: u64 [s0 + 0x18] = a3\n   429: u64 [s0 + 0x10] = a2\n   432: u64 [s0 + 0x8] = a1\n   435: u64 [s0] = a0\n   437: ra = u64 [sp + 0x8]\n   440: s0 = u64 [sp]\n   442: sp = sp + 0x10\n   445: ret\n      : @19 (gas: 12)\n   447: sp = sp + 0xffffffffffffffd8\n   450: u64 [sp + 0x20] = ra\n   453: u64 [sp + 0x18] = s0\n   456: u64 [sp + 0x10] = s1\n   459: a2 = u64 [a1]\n   461: u64 [sp + 0x8] = a2\n   464: a2 = u64 [a1 + 0x8]\n   467: u64 [sp] = a2\n   469: s0 = u64 [a1 + 0x10]\n   472: s1 = u64 [a1 + 0x18]\n   475: a1 = 0x20\n   478: ra = 4, jump @33\n      : @20 [@dyn 2] (gas: 71)\n   483: a1 = reverse s1\n   485: a2 = reverse s0\n   487: a3 = u64 [sp]\n   489: a3 = reverse a3\n   491: a4 = u64 [sp + 0x8]\n   494: a4 = reverse a4\n   496: u8 [a0 + 0x18] = a4\n   499: u8 [a0 + 0x10] = a3\n   502: u8 [a0 + 0x8] = a2\n   505: u8 [a0] = a1\n   507: a5 = a4 >> 0x38\n   510: u8 [a0 + 0x1f] = a5\n   513: a5 = a4 >> 0x30\n   516: u8 [a0 + 0x1e] = a5\n   519: a5 = a4 >> 0x28\n   522: u8 [a0 + 0x1d] = a5\n   525: a5 = a4 >> 0x20\n   528: u8 [a0 + 0x1c] = a5\n   531: a5 = a4 >> 0x18\n   534: u8 [a0 + 0x1b] = a5\n   537: a5 = a4 >> 0x10\n   540: u8 [a0 + 0x1a] = a5\n   543: a4 = a4 >> 0x8\n   546: u8 [a0 + 0x19] = a4\n   549: a4 = a3 >> 0x38\n   552: u8 [a0 + 0x17] = a4\n   555: a4 = a3 >> 0x30\n   558: u8 [a0 + 0x16] = a4\n   561: a4 = a3 >> 0x28\n   564: u8 [a0 + 0x15] = a4\n   567: a4 = a3 >> 0x20\n   570: u8 [a0 + 0x14] = a4\n   573: a4 = a3 >> 0x18\n   576: u8 [a0 + 0x13] = a4\n   579: a4 = a3 >> 0x10\n   582: u8 [a0 + 0x12] = a4\n   585: a3 = a3 >> 0x8\n   588: u8 [a0 + 0x11] = a3\n   591: a3 = a2 >> 0x38\n   594: u8 [a0 + 0xf] = a3\n   597: a3 = a2 >> 0x30\n   600: u8 [a0 + 0xe] = a3\n   603: a3 = a2 >> 0x28\n   606: u8 [a0 + 0xd] = a3\n   609: a3 = a2 >> 0x20\n   612: u8 [a0 + 0xc] = a3\n   615: a3 = a2 >> 0x18\n   618: u8 [a0 + 0xb] = a3\n   621: a3 = a2 >> 0x10\n   624: u8 [a0 + 0xa] = a3\n   627: a2 = a2 >> 0x8\n   630: u8 [a0 + 0x9] = a2\n   633: a2 = a1 >> 0x38\n   636: u8 [a0 + 0x7] = a2\n   639: a2 = a1 >> 0x30\n   642: u8 [a0 + 0x6] = a2\n   645: a2 = a1 >> 0x28\n   648: u8 [a0 + 0x5] = a2\n   651: a2 = a1 >> 0x20\n   654: u8 [a0 + 0x4] = a2\n   657: a2 = a1 >> 0x18\n   660: u8 [a0 + 0x3] = a2\n   663: a2 = a1 >> 0x10\n   666: u8 [a0 + 0x2] = a2\n   669: a1 = a1 >> 0x8\n   672: u8 [a0 + 0x1] = a1\n   675: ra = u64 [sp + 0x20]\n   678: s0 = u64 [sp + 0x18]\n   681: s1 = u64 [sp + 0x10]\n   684: sp = sp + 0x28\n   687: ret\n      : @21 (gas: 32)\n   689: sp = sp + 0xffffffffffffffa0\n   692: u64 [sp + 0x58] = ra\n   695: u64 [sp + 0x50] = s0\n   698: u64 [sp + 0x48] = s1\n   701: s0 = sp + 0x60\n   704: sp = sp & 0xffffffffffffffe0\n   707: s1 = a0\n   709: a0 = u64 [a1 + 0x18]\n   712: a2 = u64 [a1 + 0x10]\n   715: a3 = u64 [a1 + 0x8]\n   718: a1 = u64 [a1]\n   720: a0 = reverse a0\n   722: a2 = reverse a2\n   724: a3 = reverse a3\n   726: a1 = reverse a1\n   728: u64 [sp + 0x18] = a1\n   731: u64 [sp + 0x10] = a3\n   734: u64 [sp + 0x8] = a2\n   737: u64 [sp] = a0\n   739: u64 [sp + 56] = 0\n   742: u64 [sp + 48] = 0\n   745: u64 [sp + 40] = 0\n   748: u64 [sp + 32] = 0\n   751: u32 [sp + 64] = 0x20\n   755: i32 a1 = sp + 0\n   757: i32 a3 = sp + 0x20\n   760: i32 a4 = sp + 0x40\n   763: a2 = 0xffffffffffffffff\n   766: a0 = 0\n   768: ra = 0x6\n   771: ecalli 5 // 'get_storage'\n   773: fallthrough\n      : @22 [@dyn 3] (gas: 5)\n   774: a0 = u64 [sp + 0x38]\n   777: a1 = u64 [sp + 0x30]\n   780: a2 = u64 [sp + 0x28]\n   783: a3 = u64 [sp + 0x20]\n   786: t0 = 8, jump @1373\n      : @23 [@dyn 4] (gas: 10)\n   792: u64 [s1 + 0x18] = a3\n   795: u64 [s1 + 0x10] = a2\n   798: u64 [s1 + 0x8] = a1\n   801: u64 [s1] = a0\n   803: sp = s0 + 0xffffffffffffffa0\n   806: ra = u64 [sp + 0x58]\n   809: s0 = u64 [sp + 0x50]\n   812: s1 = u64 [sp + 0x48]\n   815: sp = sp + 0x60\n   818: ret\n      : @24 (gas: 40)\n   820: sp = sp + 0xffffffffffffffa0\n   823: u64 [sp + 0x58] = ra\n   826: u64 [sp + 0x50] = s0\n   829: s0 = sp + 0x60\n   832: sp = sp & 0xffffffffffffffe0\n   835: t0 = u64 [a0]\n   837: a3 = u64 [a0 + 0x8]\n   840: a4 = u64 [a0 + 0x10]\n   843: a0 = u64 [a0 + 0x18]\n   846: t1 = u64 [a1]\n   848: a2 = u64 [a1 + 0x8]\n   851: a5 = u64 [a1 + 0x10]\n   854: a1 = u64 [a1 + 0x18]\n   857: t2 = reverse a0\n   859: a4 = reverse a4\n   861: a3 = reverse a3\n   863: a0 = reverse t0\n   865: t0 = reverse a1\n   867: a5 = reverse a5\n   869: a2 = reverse a2\n   871: a1 = reverse t1\n   873: u64 [sp + 0x18] = a0\n   876: u64 [sp + 0x10] = a3\n   879: u64 [sp + 0x8] = a4\n   882: u64 [sp] = t2\n   884: u64 [sp + 0x38] = a1\n   887: u64 [sp + 0x30] = a2\n   890: u64 [sp + 0x28] = a5\n   893: u64 [sp + 0x20] = t0\n   896: i32 a1 = sp + 0\n   898: i32 a3 = sp + 0x20\n   901: a2 = 0xffffffffffffffff\n   904: a4 = 0x20\n   907: a0 = 0\n   909: ecalli 9 // 'set_storage'\n   911: sp = s0 + 0xffffffffffffffa0\n   914: ra = u64 [sp + 0x58]\n   917: s0 = u64 [sp + 0x50]\n   920: sp = sp + 0x60\n   923: ret\n      : @25 (gas: 16)\n   925: sp = sp + 0xffffffffffffffa0\n   928: u64 [sp + 0x58] = ra\n   931: u64 [sp + 0x50] = s0\n   934: u64 [sp + 0x48] = s1\n   937: s0 = sp + 0x60\n   940: sp = sp & 0xffffffffffffffe0\n   943: a3 = u64 [a2]\n   945: u64 [sp + 0x18] = a3\n   948: a3 = u64 [a2 + 0x8]\n   951: u64 [sp + 0x10] = a3\n   954: a3 = u64 [a2 + 0x10]\n   957: u64 [sp + 0x8] = a3\n   960: a2 = u64 [a2 + 0x18]\n   963: u64 [sp] = a2\n   965: s1 = a1\n   967: ra = 10, jump @33\n      : @26 [@dyn 5] (gas: 23)\n   972: a1 = u64 [sp]\n   974: a1 = reverse a1\n   976: a2 = u64 [sp + 0x8]\n   979: a2 = reverse a2\n   981: a3 = u64 [sp + 0x10]\n   984: a3 = reverse a3\n   986: a4 = u64 [sp + 0x18]\n   989: a4 = reverse a4\n   991: u64 [sp + 0x38] = a4\n   994: u64 [sp + 0x30] = a3\n   997: u64 [sp + 0x28] = a2\n  1000: u64 [sp + 0x20] = a1\n  1003: i32 a2 = a0 + 0\n  1005: i32 a3 = s1 + 0\n  1007: i32 a0 = sp + 0x20\n  1010: a1 = 0x1\n  1013: ecalli 4 // 'deposit_event'\n  1015: sp = s0 + 0xffffffffffffffa0\n  1018: ra = u64 [sp + 0x58]\n  1021: s0 = u64 [sp + 0x50]\n  1024: s1 = u64 [sp + 0x48]\n  1027: sp = sp + 0x60\n  1030: ret\n      : @27 (gas: 15)\n  1032: sp = sp + 0xffffffffffffff20\n  1036: u64 [sp + 0xd8] = ra\n  1040: u64 [sp + 0xd0] = s0\n  1044: u64 [sp + 0xc8] = s1\n  1048: s0 = sp + 0xe0\n  1052: sp = sp & 0xffffffffffffffe0\n  1055: a5 = u64 [a4]\n  1057: u64 [sp + 0x40] = a5\n  1060: a5 = u64 [a4 + 0x8]\n  1063: u64 [sp + 0x48] = a5\n  1066: a5 = u64 [a4 + 0x10]\n  1069: u64 [sp + 0x50] = a5\n  1072: a4 = u64 [a4 + 0x18]\n  1075: u64 [sp + 0x58] = a4\n  1078: t0 = 12, jump @1389\n      : @28 [@dyn 6] (gas: 2)\n  1084: u64 [sp + 0x38] = a1\n  1087: ra = 14, jump @33\n      : @29 [@dyn 7] (gas: 46)\n  1092: a1 = reverse s1\n  1094: u64 [sp + 0x78] = a1\n  1097: a1 = u64 [sp]\n  1099: a1 = reverse a1\n  1101: u64 [sp + 0x70] = a1\n  1104: a1 = u64 [sp + 0x8]\n  1107: a1 = reverse a1\n  1109: u64 [sp + 0x68] = a1\n  1112: a1 = u64 [sp + 0x10]\n  1115: a1 = reverse a1\n  1117: u64 [sp + 0x60] = a1\n  1120: a1 = u64 [sp + 0x18]\n  1123: a1 = reverse a1\n  1125: u64 [sp + 0x98] = a1\n  1129: a1 = u64 [sp + 0x20]\n  1132: a1 = reverse a1\n  1134: u64 [sp + 0x90] = a1\n  1138: a1 = u64 [sp + 0x28]\n  1141: a1 = reverse a1\n  1143: u64 [sp + 0x88] = a1\n  1147: a1 = u64 [sp + 0x30]\n  1150: a1 = reverse a1\n  1152: u64 [sp + 0x80] = a1\n  1156: a1 = u64 [sp + 0x40]\n  1159: a1 = reverse a1\n  1161: u64 [sp + 0xb8] = a1\n  1165: a1 = u64 [sp + 0x48]\n  1168: a1 = reverse a1\n  1170: u64 [sp + 0xb0] = a1\n  1174: a1 = u64 [sp + 0x50]\n  1177: a1 = reverse a1\n  1179: u64 [sp + 0xa8] = a1\n  1183: a1 = u64 [sp + 0x58]\n  1186: a1 = reverse a1\n  1188: u64 [sp + 0xa0] = a1\n  1192: i32 a2 = a0 + 0\n  1194: a3 = i32 [sp + 0x38]\n  1197: i32 a0 = sp + 0x60\n  1200: a1 = 0x3\n  1203: ecalli 4 // 'deposit_event'\n  1205: sp = s0 + 0xffffffffffffff20\n  1209: ra = u64 [sp + 0xd8]\n  1213: s0 = u64 [sp + 0xd0]\n  1217: s1 = u64 [sp + 0xc8]\n  1221: sp = sp + 0xe0\n  1225: ret\n      : @30 (gas: 23)\n  1227: sp = sp + 0xfffffffffffffee0\n  1231: u64 [sp + 0x118] = ra\n  1235: u64 [sp + 0x110] = s0\n  1239: u64 [sp + 0x108] = s1\n  1243: s0 = sp + 0x120\n  1247: sp = sp & 0xffffffffffffffe0\n  1250: s1 = u64 [a5]\n  1252: u64 [sp + 0x60] = s1\n  1255: s1 = u64 [a5 + 0x8]\n  1258: u64 [sp + 0x68] = s1\n  1261: s1 = u64 [a5 + 0x10]\n  1264: u64 [sp + 0x70] = s1\n  1267: a5 = u64 [a5 + 0x18]\n  1270: u64 [sp + 0x78] = a5\n  1273: a5 = u64 [a4]\n  1275: u64 [sp + 0x38] = a5\n  1278: a5 = u64 [a4 + 0x8]\n  1281: u64 [sp + 0x40] = a5\n  1284: a5 = u64 [a4 + 0x10]\n  1287: u64 [sp + 0x48] = a5\n  1290: a4 = u64 [a4 + 0x18]\n  1293: u64 [sp + 0x50] = a4\n  1296: t0 = 16, jump @1389\n      : @31 [@dyn 8] (gas: 2)\n  1302: u64 [sp + 0x58] = a1\n  1305: ra = 18, jump @33\n      : @32 [@dyn 9] (gas: 58)\n  1310: a1 = reverse s1\n  1312: u64 [sp + 0x98] = a1\n  1316: a1 = u64 [sp]\n  1318: a1 = reverse a1\n  1320: u64 [sp + 0x90] = a1\n  1324: a1 = u64 [sp + 0x8]\n  1327: a1 = reverse a1\n  1329: u64 [sp + 0x88] = a1\n  1333: a1 = u64 [sp + 0x10]\n  1336: a1 = reverse a1\n  1338: u64 [sp + 0x80] = a1\n  1342: a1 = u64 [sp + 0x18]\n  1345: a1 = reverse a1\n  1347: u64 [sp + 0xb8] = a1\n  1351: a1 = u64 [sp + 0x20]\n  1354: a1 = reverse a1\n  1356: u64 [sp + 0xb0] = a1\n  1360: a1 = u64 [sp + 0x28]\n  1363: a1 = reverse a1\n  1365: u64 [sp + 0xa8] = a1\n  1369: a1 = u64 [sp + 0x30]\n  1372: a1 = reverse a1\n  1374: u64 [sp + 0xa0] = a1\n  1378: a1 = u64 [sp + 0x38]\n  1381: a1 = reverse a1\n  1383: u64 [sp + 0xd8] = a1\n  1387: a1 = u64 [sp + 0x40]\n  1390: a1 = reverse a1\n  1392: u64 [sp + 0xd0] = a1\n  1396: a1 = u64 [sp + 0x48]\n  1399: a1 = reverse a1\n  1401: u64 [sp + 0xc8] = a1\n  1405: a1 = u64 [sp + 0x50]\n  1408: a1 = reverse a1\n  1410: u64 [sp + 0xc0] = a1\n  1414: a1 = u64 [sp + 0x60]\n  1417: a1 = reverse a1\n  1419: u64 [sp + 0xf8] = a1\n  1423: a1 = u64 [sp + 0x68]\n  1426: a1 = reverse a1\n  1428: u64 [sp + 0xf0] = a1\n  1432: a1 = u64 [sp + 0x70]\n  1435: a1 = reverse a1\n  1437: u64 [sp + 0xe8] = a1\n  1441: a1 = u64 [sp + 0x78]\n  1444: a1 = reverse a1\n  1446: u64 [sp + 0xe0] = a1\n  1450: i32 a2 = a0 + 0\n  1452: a3 = i32 [sp + 0x58]\n  1455: i32 a0 = sp + 0x80\n  1459: a1 = 0x4\n  1462: ecalli 4 // 'deposit_event'\n  1464: sp = s0 + 0xfffffffffffffee0\n  1468: ra = u64 [sp + 0x118]\n  1472: s0 = u64 [sp + 0x110]\n  1476: s1 = u64 [sp + 0x108]\n  1480: sp = sp + 0x120\n  1484: ret\n      : @33 (gas: 2)\n  1486: i32 a2 = a0 >> 0x10\n  1489: jump @38 if a2 != 0\n      : @34 (gas: 4)\n  1492: a1 = a1 + a0\n  1495: i32 a1 = a1 + 0x1f\n  1498: a1 = a1 & 0xffffffffffffffe0\n  1501: jump @38 if a1 >u 65536\n      : @35 (gas: 3)\n  1507: a2 = 0x2026c\n  1512: a3 = i32 [0x2026c]\n  1517: jump @37 if a3 >=u a1\n      : @36 (gas: 2)\n  1520: u32 [0x2026c] = a1\n  1525: fallthrough\n      : @37 (gas: 4)\n  1526: a1 = 0x20280\n  1531: i32 a0 = a0 + 0\n  1533: a0 = a0 + a1\n  1536: ret\n      : @38 (gas: 1)\n  1538: trap\n      : @39 (gas: 6)\n  1539: sp = sp + 0xfffffffffffffff0\n  1542: u64 [sp + 0x8] = ra\n  1545: u64 [sp] = s0\n  1547: s0 = a0 & 0x1\n  1550: ecalli 2 // 'call_data_size'\n  1552: fallthrough\n      : @40 (gas: 2)\n  1553: u32 [0x20268] = a0\n  1558: jump @42 if s0 == 0\n      : @41 (gas: 1)\n  1561: ra = 20, jump @43\n      : @42 [@dyn 10] (gas: 18)\n  1565: ra = 0x16\n  1568: sp = sp + 0xfffffffffffffe10\n  1572: u64 [sp + 0x1e8] = ra\n  1576: u64 [sp + 0x1e0] = s0\n  1580: u64 [sp + 0x1d8] = s1\n  1584: s0 = sp + 0x1f0\n  1588: sp = sp + 0xffffffffffffe5b0\n  1592: sp = sp & 0xffffffffffffffe0\n  1595: s1 = sp\n  1597: a2 = s1 + 0x1038\n  1601: u64 [a2 + 1344] = 0\n  1605: u64 [a2 + 1336] = 0\n  1609: u64 [a2 + 1320] = 0x80\n  1615: a0 = 0x40\n  1618: a1 = s1 + 0x1560\n  1622: u64 [a2 + 1328] = 0\n  1626: ra = 0x116\n  1630: jump @19\n      : @43 [@dyn 11] (gas: 21)\n  1633: sp = sp + 0xfffffffffffff808\n  1637: a0 = sp + 0x700\n  1641: u64 [a0 + 0xf0] = ra\n  1645: u64 [a0 + 0xe8] = s0\n  1649: u64 [a0 + 0xe0] = s1\n  1653: s0 = sp + 0x7f8\n  1657: sp = sp + 0xfffffffffffffc78\n  1661: sp = sp & 0xffffffffffffffe0\n  1664: s1 = sp\n  1666: a0 = s1 + 0x1000\n  1670: u64 [a0 + 4294965336] = 0\n  1674: a0 = s1 + 0x1000\n  1678: u64 [a0 + 4294965328] = 0\n  1682: a1 = s1 + 0x1000\n  1686: u64 [a1 + 4294965312] = 0x80\n  1692: a0 = 0x40\n  1695: a1 = s1 + 0x7ff\n  1699: a1 = a1 + 0x41\n  1702: a2 = s1 + 0x1000\n  1706: u64 [a2 + 4294965320] = 0\n  1710: ra = 24, jump @19\n      : @44 [@dyn 12] (gas: 12)\n  1715: a0 = s1 + 0x1000\n  1719: u64 [a0 + 4294965368] = 0\n  1723: a0 = s1 + 0x1000\n  1727: u64 [a0 + 4294965360] = 0\n  1731: a0 = s1 + 0x1000\n  1735: u64 [a0 + 4294965352] = 0\n  1739: a0 = s1 + 0x1000\n  1743: u64 [a0 + 4294965344] = 0\n  1747: a0 = s1 + 0x1000\n  1751: i32 a0 = a0 + 0xfffffffffffff860\n  1755: ecalli 10 // 'value_transferred'\n  1757: fallthrough\n      : @45 (gas: 12)\n  1758: a0 = s1 + 0x1000\n  1762: a0 = u64 [a0 + 0xfffffffffffff870]\n  1766: a1 = s1 + 0x1000\n  1770: a1 = u64 [a1 + 0xfffffffffffff878]\n  1774: a2 = s1 + 0x1000\n  1778: a2 = u64 [a2 + 0xfffffffffffff868]\n  1782: a3 = s1 + 0x1000\n  1786: a3 = u64 [a3 + 0xfffffffffffff860]\n  1790: a1 = a1 | a2\n  1793: a0 = a0 | a3\n  1796: a0 = a0 | a1\n  1799: jump @47 if a0 == 0\n      : @46 (gas: 1)\n  1802: jump @219\n      : @47 (gas: 15)\n  1805: a2 = u32 [0x20268]\n  1810: a0 = s1 + 0x1000\n  1814: u64 [a0 + 4294965272] = 0\n  1818: a0 = s1 + 0x1000\n  1822: u64 [a0 + 4294965264] = 0\n  1826: a0 = s1 + 0x1000\n  1830: u64 [a0 + 4294965256] = 0\n  1834: a0 = s1 + 0x7ff\n  1838: a0 = a0 + 0x21\n  1841: a1 = s1 + 0x7ff\n  1845: a1 = a1 + 0x1\n  1848: u64 [s1 + 0x138] = a2\n  1852: a3 = s1 + 0x1000\n  1856: u64 [a3 + 0xfffffffffffff800] = a2\n  1860: ra = 26, jump @879\n      : @48 [@dyn 13] (gas: 9)\n  1865: a0 = s1 + 0x1000\n  1869: a3 = u64 [a0 + 0xfffffffffffff838]\n  1873: a0 = s1 + 0x1000\n  1877: a1 = u64 [a0 + 0xfffffffffffff830]\n  1881: a0 = s1 + 0x1000\n  1885: a2 = u64 [a0 + 0xfffffffffffff828]\n  1889: a0 = s1 + 0x1000\n  1893: a0 = u64 [a0 + 0xfffffffffffff820]\n  1897: t0 = 28, jump @1356\n      : @49 [@dyn 14] (gas: 1)\n  1902: jump @51 if a1 == 0\n      : @50 (gas: 1)\n  1905: jump @218\n      : @51 (gas: 3)\n  1908: u64 [s1 + 0x130] = a0\n  1912: a1 = u64 [s1 + 0x138]\n  1916: ra = 30, jump @33\n      : @52 [@dyn 15] (gas: 5)\n  1921: i32 a0 = a0 + 0\n  1923: a1 = i32 [s1 + 0x138]\n  1927: a2 = 0\n  1929: ecalli 0 // 'call_data_copy'\n  1930: fallthrough\n      : @53 (gas: 2)\n  1931: a1 = u64 [s1 + 0x138]\n  1935: jump @55 if a1 >u 31\n      : @54 (gas: 1)\n  1939: jump @220\n      : @55 (gas: 3)\n  1942: a0 = s1 + 0x7e0\n  1946: a1 = u64 [s1 + 0x130]\n  1950: ra = 32, jump @17\n      : @56 [@dyn 16] (gas: 15)\n  1955: a0 = u64 [s1 + 0x7f8]\n  1959: u64 [s1 + 0x80] = a0\n  1963: a0 = u64 [s1 + 0x7f0]\n  1967: u64 [s1 + 0x78] = a0\n  1970: a0 = u64 [s1 + 0x7e8]\n  1974: u64 [s1 + 0x70] = a0\n  1977: a0 = u64 [s1 + 0x7e0]\n  1981: u64 [s1 + 0x68] = a0\n  1984: u64 [s1 + 1976] = 0\n  1988: u64 [s1 + 1968] = 0\n  1992: u64 [s1 + 1952] = 0x40\n  1997: a0 = s1 + 0x7c0\n  2001: a1 = s1 + 0x7a0\n  2005: u64 [s1 + 1960] = 0\n  2009: ra = 34, jump @879\n      : @57 [@dyn 17] (gas: 13)\n  2014: a1 = s1 + 0x700\n  2018: a2 = u64 [a1 + 0xd8]\n  2022: a3 = u64 [a1 + 0xd0]\n  2026: a4 = u64 [a1 + 0xc8]\n  2030: a0 = u64 [a1 + 0xc0]\n  2034: a5 = a4 | a2\n  2037: a1 = a0 | a3\n  2040: a1 = a1 | a5\n  2043: a1 = a1 >> 0x20\n  2046: a5 = a5 | a3\n  2049: a5 = a5 << 0x20\n  2052: a1 = a1 | a5\n  2055: jump @59 if a1 == 0\n      : @58 (gas: 1)\n  2058: jump @218\n      : @59 (gas: 11)\n  2061: u64 [s1 + 1944] = 0\n  2065: u64 [s1 + 1936] = 0\n  2069: u64 [s1 + 1928] = 0\n  2073: a5 = 0x7\n  2076: a1 = s1 + 0x780\n  2080: u64 [s1 + 0x780] = a5\n  2084: u64 [s1 + 0xc8] = a2\n  2088: u64 [s1 + 0xc0] = a3\n  2092: u64 [s1 + 0xb8] = a4\n  2096: u64 [s1 + 0xd0] = a0\n  2100: ra = 36, jump @19\n      : @60 [@dyn 18] (gas: 10)\n  2105: a3 = u64 [s1 + 0xd0]\n  2109: a0 = u64 [s1 + 0xc8]\n  2113: a1 = u64 [s1 + 0xc0]\n  2117: a0 = a0 | a1\n  2120: a1 = 0xffffffe0\n  2130: a1 = a3 <u a1\n  2133: a2 = u64 [s1 + 0xb8]\n  2137: a1 = 0 if a2 != 0\n  2139: a1 = 0 if a0 != 0\n  2141: jump @62 if a1 != 0\n      : @61 (gas: 1)\n  2144: jump @218\n      : @62 (gas: 9)\n  2147: i32 a0 = a3 + 0x20\n  2150: u64 [s1 + 1904] = 0\n  2154: a2 = u64 [0x20000]\n  2159: u64 [s1 + 1896] = 0\n  2163: u64 [s1 + 1888] = 0\n  2167: a1 = s1 + 0x760\n  2171: u64 [s1 + 0x778] = a2\n  2175: u64 [s1 + 0xf0] = a0\n  2179: ra = 38, jump @19\n      : @63 [@dyn 19] (gas: 7)\n  2184: u64 [s1 + 1848] = 0\n  2188: u64 [s1 + 1840] = 0\n  2192: u64 [s1 + 1824] = 0x40\n  2197: a0 = s1 + 0x740\n  2201: a1 = s1 + 0x720\n  2205: u64 [s1 + 1832] = 0\n  2209: ra = 40, jump @879\n      : @64 [@dyn 20] (gas: 13)\n  2214: a1 = s1 + 0x700\n  2218: a5 = u64 [a1 + 0x58]\n  2221: a2 = u64 [a1 + 0x50]\n  2224: a3 = u64 [a1 + 0x48]\n  2227: a0 = u64 [a1 + 0x40]\n  2230: a4 = a3 | a5\n  2233: a1 = a0 | a2\n  2236: a1 = a1 | a4\n  2239: a1 = a1 >> 0x20\n  2242: a4 = a4 | a2\n  2245: a4 = a4 << 0x20\n  2248: a1 = a1 | a4\n  2251: jump @66 if a1 == 0\n      : @65 (gas: 1)\n  2254: jump @218\n      : @66 (gas: 11)\n  2257: u64 [s1 + 1816] = 0\n  2261: u64 [s1 + 1808] = 0\n  2265: u64 [s1 + 1800] = 0\n  2269: a4 = 0x3\n  2272: a1 = s1 + 0x700\n  2276: u64 [s1 + 0x700] = a4\n  2280: u64 [s1 + 0x98] = a2\n  2284: u64 [s1 + 0x90] = a3\n  2288: u64 [s1 + 0xa0] = a0\n  2292: u64 [s1 + 0x88] = a5\n  2296: ra = 42, jump @19\n      : @67 [@dyn 21] (gas: 10)\n  2301: a3 = u64 [s1 + 0xa0]\n  2305: a0 = u64 [s1 + 0x98]\n  2309: a1 = u64 [s1 + 0x88]\n  2313: a0 = a0 | a1\n  2316: a1 = 0xffffffe0\n  2326: a1 = a3 <u a1\n  2329: a2 = u64 [s1 + 0x90]\n  2333: a1 = 0 if a2 != 0\n  2335: a1 = 0 if a0 != 0\n  2337: jump @69 if a1 != 0\n      : @68 (gas: 1)\n  2340: jump @218\n      : @69 (gas: 9)\n  2343: i32 a0 = a3 + 0x20\n  2346: u64 [s1 + 1776] = 0\n  2350: u64 [s1 + 1768] = 0\n  2354: u64 [s1 + 1760] = 0\n  2358: a2 = 0x4d544b0000000000\n  2368: a1 = s1 + 0x6e0\n  2372: u64 [s1 + 0x6f8] = a2\n  2376: u64 [s1 + 0x18] = a0\n  2379: ra = 44, jump @19\n      : @70 [@dyn 22] (gas: 3)\n  2384: a0 = s1 + 0x6c0\n  2388: a1 = u64 [s1 + 0xd0]\n  2392: ra = 46, jump @17\n      : @71 [@dyn 23] (gas: 17)\n  2397: a0 = s1 + 0x600\n  2401: a3 = u64 [a0 + 0xd8]\n  2405: a1 = u64 [a0 + 0xd0]\n  2409: a2 = u64 [a0 + 0xc8]\n  2413: a0 = a3 >u 0\n  2415: a4 = a1 >u 0\n  2417: a4 = a0 if a3 != 0\n  2420: u64 [s1 + 0xe8] = a2\n  2424: a0 = a2 >u 0\n  2426: u64 [s1 + 0x58] = a1\n  2429: u64 [s1 + 0xe0] = a3\n  2433: a1 = a1 | a3\n  2436: u64 [s1 + 0x50] = a0\n  2439: u64 [s1 + 0xa8] = a4\n  2443: u64 [s1 + 0xd8] = a1\n  2447: a0 = a4 if a1 != 0\n  2450: jump @73 if a0 == 0\n      : @72 (gas: 1)\n  2453: jump @221\n      : @73 (gas: 14)\n  2456: a0 = u64 [s1 + 0x6c0]\n  2460: u64 [s1 + 0x60] = a0\n  2463: a0 = s1 + 0x1000\n  2467: u64 [a0 + 4294965400] = 0\n  2471: a0 = s1 + 0x1000\n  2475: u64 [a0 + 4294965392] = 0\n  2479: a0 = s1 + 0x1000\n  2483: u64 [a0 + 4294965384] = 0\n  2487: a1 = s1 + 0x1000\n  2491: u64 [a1 + 4294965376] = 0x3\n  2496: a0 = s1 + 0x6a0\n  2500: a1 = s1 + 0x7ff\n  2504: a1 = a1 + 0x81\n  2508: ra = 48, jump @21\n      : @74 [@dyn 24] (gas: 6)\n  2513: a4 = s1 + 0x600\n  2517: a0 = u64 [a4 + 0xb0]\n  2521: a1 = u64 [a4 + 0xa8]\n  2525: a2 = u64 [a4 + 0xa0]\n  2529: a3 = u64 [a4 + 0xb8]\n  2533: t0 = 50, jump @1378\n      : @75 [@dyn 25] (gas: 12)\n  2538: t0 = a2 <u 0x1\n  2541: ra = a1 & 0x7f\n  2544: t2 = a5 & a0\n  2547: a4 = a5 & t1\n  2550: ra = a1 if a2 != 0\n  2553: a1 = ra <u 0x20\n  2556: a5 = a5 & a3\n  2559: a2 = a1\n  2561: a2 = 0 if a4 != 0\n  2563: a0 = t2 | a5\n  2566: a2 = 0 if a0 != 0\n  2568: jump @77 if t0 == a2\n      : @76 (gas: 1)\n  2571: jump @227\n      : @77 (gas: 1)\n  2574: t0 = 52, jump @1392\n      : @78 [@dyn 26] (gas: 4)\n  2579: a0 = u64 [s1 + 0x60]\n  2582: a0 = a0 <u 0x20\n  2585: u64 [s1 + 0xb0] = a0\n  2589: jump @90 if a3 == 0\n      : @79 (gas: 11)\n  2593: u64 [s1 + 0x110] = a4\n  2597: u64 [s1 + 0x118] = ra\n  2601: u64 [s1 + 0x120] = a5\n  2605: u64 [s1 + 0x130] = t2\n  2609: u64 [s1 + 1688] = 0\n  2613: u64 [s1 + 1680] = 0\n  2617: u64 [s1 + 1672] = 0\n  2621: a1 = s1 + 0x680\n  2625: u64 [s1 + 1664] = 0x3\n  2630: a0 = 0\n  2632: ra = 54, jump @19\n      : @80 [@dyn 27] (gas: 2)\n  2637: a1 = i32 [0x2026c]\n  2642: jump @82 if a1 >u 31\n      : @81 (gas: 2)\n  2646: u32 [0x2026c] = 0x20\n  2652: fallthrough\n      : @82 (gas: 11)\n  2653: a0 = sp + 0xffffffffffffffe0\n  2656: a2 = a0 & 0xffffffffffffffe0\n  2659: u64 [s1 + 0x128] = a2\n  2663: sp = a2\n  2665: a0 = 0x20280\n  2670: i32 a0 = a0 + 0\n  2672: i32 a2 = a2 + 0\n  2674: a1 = 0x20\n  2677: ra = 0x38\n  2680: ecalli 6 // 'hash_keccak_256'\n  2682: fallthrough\n      : @83 [@dyn 28] (gas: 9)\n  2683: a0 = u64 [s1 + 0x60]\n  2686: a1 = a0 + 0x1f\n  2689: a0 = a1 <u a0\n  2692: a5 = u64 [s1 + 0xe8]\n  2696: a2 = a5 + a0\n  2699: a3 = a2 <u a5\n  2702: a3 = a0 if a0 == 0\n  2705: a4 = u64 [s1 + 0x58]\n  2708: t0 = 58, jump @1374\n      : @84 [@dyn 29] (gas: 35)\n  2713: a1 = u64 [s1 + 0xb0]\n  2717: a1 = 0 if a5 != 0\n  2719: a3 = u64 [s1 + 0xd8]\n  2723: a1 = 0 if a3 != 0\n  2725: a4 = 0 if a1 != 0\n  2727: a0 = 0 if a1 != 0\n  2729: t0 = t2 + a0\n  2732: a0 = t0 <u t2\n  2735: a5 = a2 + a0\n  2738: a4 = a4 + a5\n  2741: u64 [s1 + 0x138] = a4\n  2745: a5 = a4 ^ a2\n  2748: a3 = a4 <u a2\n  2751: a3 = a0 if a5 == 0\n  2754: u64 [s1 + 0x100] = a3\n  2758: a0 = u64 [s1 + 0x118]\n  2762: ra = a0 + 0x1f\n  2765: a4 = ra <u a0\n  2768: a3 = u64 [s1 + 0x110]\n  2772: a0 = a3 + a4\n  2775: a5 = a0 <u a3\n  2778: a5 = a4 if a4 == 0\n  2781: t1 = u64 [s1 + 0x130]\n  2785: t1 = t1 + a5\n  2788: a4 = t1 << 0x3b\n  2791: a3 = a0 >> 0x5\n  2794: a3 = a3 | a4\n  2797: a0 = a0 << 0x3b\n  2800: a4 = ra >> 0x5\n  2803: a0 = a0 | a4\n  2806: a0 = a0 + t2\n  2809: u64 [s1 + 0x118] = a0\n  2813: a0 = a0 <u t2\n  2816: t2 = t0\n  2818: t0 = 60, jump @1397\n      : @85 [@dyn 30] (gas: 16)\n  2823: a0 = u64 [s1 + 0x58]\n  2826: a0 = a4 <u a0\n  2829: a3 = u64 [s1 + 0xe0]\n  2833: a0 = a0 + a3\n  2836: a3 = a4 >> 0x5\n  2839: a4 = a0 << 0x3b\n  2842: a3 = a3 | a4\n  2845: a4 = u64 [s1 + 0x128]\n  2849: t0 = u64 [a4]\n  2851: a4 = u64 [a4 + 0x8]\n  2854: a0 = a0 >> 0x5\n  2857: a3 = 0 if a1 != 0\n  2859: a0 = 0 if a1 != 0\n  2861: a1 = reverse a4\n  2863: a4 = reverse t0\n  2865: t0 = 62, jump @1416\n      : @86 [@dyn 31] (gas: 25)\n  2870: t0 = a0 + a3\n  2873: a0 = u64 [s1 + 0x130]\n  2877: a0 = t1 <u a0\n  2880: a3 = u64 [s1 + 0x120]\n  2884: a0 = a0 + a3\n  2887: a3 = t1 >> 0x5\n  2890: a5 = a0 << 0x3b\n  2893: a3 = a3 | a5\n  2896: a0 = a0 >> 0x5\n  2899: a0 = a0 + a4\n  2902: a5 = s1 + 0x100\n  2906: a4 = u64 [a5 + 0x38]\n  2909: a3 = a3 + a1\n  2912: a1 = a3 <u a1\n  2915: a0 = a0 + a1\n  2918: a2 = a2 + a3\n  2921: u64 [a5 + 0x8] = a2\n  2924: a1 = a2 <u a3\n  2927: a0 = a0 + a1\n  2930: u64 [a5] = a0\n  2932: a0 = sp + 0xffffffffffffffe0\n  2935: t1 = a0 & 0xffffffffffffffe0\n  2938: sp = t1\n  2940: u64 [s1 + 0xf8] = t1\n  2944: fallthrough\n      : @87 (gas: 22)\n  2945: a0 = u64 [s1 + 0x118]\n  2949: a0 = t2 <u a0\n  2952: a2 = u64 [s1 + 0x110]\n  2956: a1 = a4 ^ a2\n  2959: a2 = a4 <u a2\n  2962: a2 = a0 if a1 == 0\n  2965: a5 = u64 [s1 + 0x108]\n  2969: a0 = ra <u a5\n  2972: a3 = u64 [s1 + 0x100]\n  2976: a1 = t0 ^ a3\n  2979: a3 = t0 <u a3\n  2982: a3 = a0 if a1 == 0\n  2985: a0 = ra ^ a5\n  2988: a0 = a0 | a1\n  2991: a3 = a2 if a0 == 0\n  2994: u64 [t1] = t2\n  2996: u64 [t1 + 0x8] = a4\n  2999: u64 [t1 + 0x10] = ra\n  3002: u64 [t1 + 0x18] = t0\n  3005: a0 = s1 + 0x7ff\n  3009: a0 = a0 + 0xb9\n  3013: jump @90 if a3 == 0\n      : @88 (gas: 14)\n  3016: u64 [a0 + 0] = 0\n  3018: u64 [a0 + 4294967288] = 0\n  3021: a0 = s1 + 0x1000\n  3025: u64 [a0 + 4294965416] = 0\n  3029: a0 = s1 + 0x1000\n  3033: u64 [a0 + 4294965408] = 0\n  3037: a1 = s1 + 0x7ff\n  3041: a1 = a1 + 0xa1\n  3045: a0 = t1\n  3047: u64 [s1 + 0x130] = t2\n  3051: u64 [s1 + 0x138] = a4\n  3055: u64 [s1 + 0x128] = t0\n  3059: u64 [s1 + 0x120] = ra\n  3063: ra = 64, jump @24\n      : @89 [@dyn 32] (gas: 15)\n  3068: t1 = u64 [s1 + 0xf8]\n  3072: t0 = u64 [s1 + 0x128]\n  3076: a4 = u64 [s1 + 0x138]\n  3080: t2 = u64 [s1 + 0x130]\n  3084: t2 = t2 + 0x1\n  3087: a0 = t2 <u 0x1\n  3090: a4 = a4 + a0\n  3093: a0 = t2 | a4\n  3096: a0 = a0 <u 0x1\n  3099: a1 = u64 [s1 + 0x120]\n  3103: a0 = a0 + a1\n  3106: a1 = a0 <u a1\n  3109: t0 = t0 + a1\n  3112: ra = a0\n  3114: jump @87\n      : @90 (gas: 26)\n  3117: a0 = u64 [s1 + 0xb0]\n  3121: a0 = a0 ^ 0x1\n  3124: a4 = u64 [s1 + 0xe8]\n  3128: a1 = u64 [s1 + 0x50]\n  3131: a0 = a1 if a4 != 0\n  3134: a1 = u64 [s1 + 0xa8]\n  3138: a2 = u64 [s1 + 0xd8]\n  3142: a0 = a1 if a2 != 0\n  3145: t1 = u64 [s1 + 0xe0]\n  3149: a1 = a4 | t1\n  3152: u64 [s1 + 0xb0] = a1\n  3156: a1 = u64 [s1 + 0x58]\n  3159: t2 = a1 >> 0x3f\n  3162: t1 = t1 << 0x1\n  3165: a5 = a4 >> 0x3f\n  3168: t0 = a1 << 0x1\n  3171: a3 = u64 [s1 + 0x60]\n  3174: ra = a3 >> 0x3f\n  3177: a4 = a4 << 0x1\n  3180: a2 = a3 << 0x1\n  3183: u64 [s1 + 0x48] = a2\n  3186: u64 [s1 + 0x40] = t1\n  3189: u64 [s1 + 0x38] = ra\n  3192: u64 [s1 + 0x30] = a5\n  3195: u64 [s1 + 0x50] = t0\n  3198: jump @101 if a0 == 0\n      : @91 (gas: 11)\n  3202: u64 [s1 + 0x28] = a4\n  3205: u64 [s1 + 0x20] = t2\n  3208: a3 = a3 & 0xffffffffffffffe0\n  3211: u64 [s1 + 0xa8] = a3\n  3215: u64 [s1 + 1624] = 0\n  3219: u64 [s1 + 1616] = 0\n  3223: u64 [s1 + 1608] = 0\n  3227: a1 = s1 + 0x640\n  3231: u64 [s1 + 1600] = 0x3\n  3236: a0 = 0\n  3238: ra = 66, jump @19\n      : @92 [@dyn 33] (gas: 7)\n  3243: a0 = sp + 0xffffffffffffffe0\n  3246: a0 = a0 & 0xffffffffffffffe0\n  3249: u64 [s1 + 0x118] = a0\n  3253: sp = a0\n  3255: a1 = 0x20\n  3258: a0 = 0\n  3260: ra = 68, jump @33\n      : @93 [@dyn 34] (gas: 35)\n  3265: a1 = sp + 0xffffffffffffffe0\n  3268: a1 = a1 & 0xffffffffffffffe0\n  3271: u64 [s1 + 0x110] = a1\n  3275: sp = a1\n  3277: i32 a0 = a0 + 0\n  3279: i32 a2 = a1 + 0\n  3281: a1 = 0x20\n  3284: ecalli 6 // 'hash_keccak_256'\n  3286: u64 [s1 + 312] = 0x20\n  3291: t0 = 0\n  3293: u64 [s1 + 304] = 0\n  3297: u64 [s1 + 296] = 0\n  3301: a4 = 0\n  3303: a5 = 0\n  3305: ra = 0\n  3307: u64 [s1 + 288] = 0\n  3311: a3 = u64 [s1 + 0x110]\n  3315: a0 = u64 [a3 + 0x18]\n  3318: a1 = u64 [a3 + 0x10]\n  3321: a2 = u64 [a3 + 0x8]\n  3324: t1 = u64 [a3]\n  3326: a0 = reverse a0\n  3328: a1 = reverse a1\n  3330: a3 = reverse a2\n  3332: t1 = reverse t1\n  3334: t2 = t1\n  3336: a2 = u64 [s1 + 0x118]\n  3340: u64 [a2 + 0x18] = t1\n  3343: u64 [s1 + 0xf0] = a3\n  3347: u64 [a2 + 0x10] = a3\n  3350: u64 [s1 + 0x110] = a1\n  3354: u64 [a2 + 0x8] = a1\n  3357: a3 = a0\n  3359: u64 [a2] = a0\n  3361: fallthrough\n      : @94 (gas: 25)\n  3362: u64 [s1 + 0x108] = t2\n  3366: t1 = a3\n  3368: a0 = u64 [s1 + 0xa8]\n  3372: u64 [s1 + 0x100] = a4\n  3376: a0 = a4 <u a0\n  3379: a4 = a0 ^ 0x1\n  3382: u64 [s1 + 0xf8] = a5\n  3386: a4 = 0x1 if a5 != 0\n  3389: a5 = s1 + 0x100\n  3393: a0 = u64 [a5 + 0x20]\n  3396: a0 = ra | a0\n  3399: a4 = 0x1 if a0 != 0\n  3402: a1 = u64 [s1 + 0xd0]\n  3406: a0 = u64 [a5 + 0x38]\n  3409: a1 = a1 + a0\n  3412: a3 = u64 [s1 + 0xb8]\n  3416: a3 = a3 + t0\n  3419: a2 = u64 [s1 + 0xc0]\n  3423: a0 = u64 [a5 + 0x30]\n  3426: a2 = a2 + a0\n  3429: a0 = u64 [s1 + 0xc8]\n  3433: t2 = u64 [s1 + 0x128]\n  3437: t2 = t2 + a0\n  3440: a0 = u64 [s1 + 0xb0]\n  3444: jump @103 if a4 != 0\n      : @95 (gas: 9)\n  3448: a0 = u64 [s1 + 0x138]\n  3452: a4 = a1 <u a0\n  3455: a3 = a3 + a4\n  3458: a0 = t0\n  3460: t0 = a3 ^ t0\n  3463: u64 [s1 + 0xe0] = a0\n  3467: a5 = a3 <u a0\n  3470: a5 = a4 if t0 == 0\n  3473: t0 = 70, jump @1376\n      : @96 [@dyn 35] (gas: 2)\n  3478: u64 [s1 + 0xe8] = t1\n  3482: jump @98 if a0 == 0\n      : @97 (gas: 1)\n  3485: jump @218\n      : @98 (gas: 3)\n  3488: a0 = s1 + 0x1c0\n  3492: u64 [s1 + 0xd8] = ra\n  3496: ra = 72, jump @17\n      : @99 [@dyn 36] (gas: 14)\n  3501: a0 = u64 [s1 + 0x1d8]\n  3505: a1 = u64 [s1 + 0x1d0]\n  3509: a2 = u64 [s1 + 0x1c8]\n  3513: a3 = u64 [s1 + 0x1c0]\n  3517: a4 = s1 + 0x7ff\n  3521: a4 = a4 + 0xb9\n  3525: u64 [a4 + 0x20] = a0\n  3528: u64 [a4 + 0x18] = a1\n  3531: u64 [a4 + 0x10] = a2\n  3534: u64 [a4 + 0x8] = a3\n  3537: a1 = s1 + 0x7ff\n  3541: a1 = a1 + 0xc1\n  3545: a0 = u64 [s1 + 0x118]\n  3549: ra = 74, jump @24\n      : @100 [@dyn 37] (gas: 56)\n  3554: t2 = u64 [s1 + 0xe8]\n  3558: t2 = t2 + 0x1\n  3561: a0 = t2 <u 0x1\n  3564: t0 = u64 [s1 + 0x110]\n  3568: t0 = t0 + a0\n  3571: a0 = t2 | t0\n  3574: a0 = a0 <u 0x1\n  3577: a1 = u64 [s1 + 0xf0]\n  3581: t1 = a1 + a0\n  3584: a1 = t1 <u a1\n  3587: a0 = u64 [s1 + 0x108]\n  3591: a0 = a0 + a1\n  3594: a1 = u64 [s1 + 0x138]\n  3598: a2 = a1 + 0x20\n  3601: u64 [s1 + 0x108] = a2\n  3605: a3 = a2 <u a1\n  3608: a1 = u64 [s1 + 0xe0]\n  3612: a2 = a1 + a3\n  3615: u64 [s1 + 0xe8] = a2\n  3619: a4 = a2 <u a1\n  3622: a4 = a3 if a3 == 0\n  3625: a1 = u64 [s1 + 0x130]\n  3629: ra = a1 + a4\n  3632: a4 = ra <u a1\n  3635: a1 = u64 [s1 + 0x128]\n  3639: a1 = a1 + a4\n  3642: u64 [s1 + 0x128] = a1\n  3646: a1 = u64 [s1 + 0x100]\n  3650: a4 = a1 + 0x20\n  3653: a5 = a4 <u a1\n  3656: a2 = u64 [s1 + 0xf8]\n  3660: a1 = a2 + a5\n  3663: a2 = a1 <u a2\n  3666: a2 = a5 if a5 == 0\n  3669: a3 = u64 [s1 + 0xd8]\n  3673: a2 = a2 + a3\n  3676: a5 = a2 <u a3\n  3679: a3 = u64 [s1 + 0x120]\n  3683: a3 = a3 + a5\n  3686: u64 [s1 + 0x120] = a3\n  3690: u64 [s1 + 0x110] = t0\n  3694: a5 = u64 [s1 + 0x118]\n  3698: u64 [a5 + 0x8] = t0\n  3701: a3 = t2\n  3703: u64 [a5] = t2\n  3705: u64 [a5 + 0x10] = t1\n  3708: t2 = a0\n  3710: u64 [a5 + 0x18] = a0\n  3713: u64 [s1 + 0xf0] = t1\n  3717: a0 = u64 [s1 + 0x108]\n  3721: u64 [s1 + 0x138] = a0\n  3725: t0 = u64 [s1 + 0xe8]\n  3729: u64 [s1 + 0x130] = ra\n  3733: a5 = a1\n  3735: ra = a2\n  3737: jump @94\n      : @101 (gas: 4)\n  3740: a0 = a3 | a1\n  3743: a1 = u64 [s1 + 0xb0]\n  3747: a0 = a0 | a1\n  3750: jump @118 if a0 != 0\n      : @102 (gas: 9)\n  3754: u64 [s1 + 288] = 0\n  3758: u64 [s1 + 280] = 0\n  3762: u64 [s1 + 296] = 0\n  3766: u64 [s1 + 304] = 0\n  3770: t1 = u64 [s1 + 0x40]\n  3773: t0 = u64 [s1 + 0x38]\n  3776: a1 = u64 [s1 + 0x30]\n  3779: a5 = u64 [s1 + 0x50]\n  3782: jump @120\n      : @103 (gas: 10)\n  3785: ra = t0\n  3787: t1 = u64 [s1 + 0x60]\n  3790: a4 = u64 [s1 + 0xa8]\n  3794: a4 = a4 ^ t1\n  3797: a5 = u64 [s1 + 0x58]\n  3800: a4 = a4 | a5\n  3803: a4 = a4 | a0\n  3806: t0 = u64 [s1 + 0x28]\n  3809: a5 = u64 [s1 + 0x50]\n  3812: jump @117 if a4 == 0\n      : @104 (gas: 7)\n  3816: a0 = u64 [s1 + 0x138]\n  3820: a4 = a1 <u a0\n  3823: a3 = a3 + a4\n  3826: t0 = a3 ^ ra\n  3829: a5 = a3 <u ra\n  3832: a5 = a4 if t0 == 0\n  3835: t0 = 76, jump @1376\n      : @105 [@dyn 38] (gas: 1)\n  3840: jump @107 if a0 == 0\n      : @106 (gas: 1)\n  3843: jump @218\n      : @107 (gas: 2)\n  3846: a0 = s1 + 0x620\n  3850: ra = 78, jump @17\n      : @108 [@dyn 39] (gas: 11)\n  3855: a1 = s1 + 0x600\n  3859: a0 = u64 [a1 + 0x38]\n  3862: u64 [s1 + 0x130] = a0\n  3866: a0 = u64 [a1 + 0x30]\n  3869: u64 [s1 + 0x128] = a0\n  3873: a0 = u64 [a1 + 0x28]\n  3876: u64 [s1 + 0x120] = a0\n  3880: a0 = u64 [a1 + 0x20]\n  3883: u64 [s1 + 0x110] = a0\n  3887: a0 = u64 [s1 + 0x60]\n  3890: t0 = 80, jump @1410\n      : @109 [@dyn 40] (gas: 1)\n  3895: ra = 82, jump @1427\n      : @110 [@dyn 41] (gas: 6)\n  3900: u64 [s1 + 0x108] = a0\n  3904: u64 [s1 + 0xf0] = a1\n  3908: a0 = 0xffffffffffffffff\n  3911: a1 = 0xffffffffffffffff\n  3914: a2 = u64 [s1 + 0x138]\n  3918: ra = 84, jump @1422\n      : @111 [@dyn 42] (gas: 1)\n  3923: t0 = 86, jump @1402\n      : @112 [@dyn 43] (gas: 1)\n  3928: ra = 88, jump @1422\n      : @113 [@dyn 44] (gas: 1)\n  3933: t0 = 90, jump @1364\n      : @114 [@dyn 45] (gas: 2)\n  3938: a2 = u64 [s1 + 0x120]\n  3942: t0 = 92, jump @1395\n      : @115 [@dyn 46] (gas: 8)\n  3947: u64 [a4 + 0x40] = a3\n  3950: u64 [a4 + 0x38] = a2\n  3953: u64 [a4 + 0x30] = a1\n  3956: u64 [a4 + 0x28] = a0\n  3959: a1 = s1 + 0x7ff\n  3963: a1 = a1 + 0xe1\n  3967: a0 = u64 [s1 + 0x118]\n  3971: ra = 94, jump @24\n      : @116 [@dyn 47] (gas: 3)\n  3976: a5 = u64 [s1 + 0x50]\n  3979: t0 = u64 [s1 + 0x28]\n  3982: fallthrough\n      : @117 (gas: 25)\n  3983: a0 = u64 [s1 + 0x20]\n  3986: a1 = u64 [s1 + 0x40]\n  3989: a0 = a0 | a1\n  3992: a1 = u64 [s1 + 0x30]\n  3995: a1 = a1 | a5\n  3998: a2 = u64 [s1 + 0x38]\n  4001: a2 = t0 | a2\n  4004: a3 = u64 [s1 + 0x48]\n  4007: a3 = a3 + 0x1\n  4010: a5 = s1 + 0x7ff\n  4014: a5 = a5 + 0xb9\n  4018: u64 [a5 + 96] = 0\n  4021: u64 [a5 + 88] = 0\n  4024: u64 [a5 + 80] = 0\n  4027: u64 [a5 + 72] = 0x3\n  4031: u64 [a5 + 0x68] = a3\n  4034: u64 [a5 + 0x70] = a2\n  4037: u64 [a5 + 0x78] = a1\n  4040: u64 [a5 + 0x80] = a0\n  4044: a0 = s1 + 0x7ff\n  4048: a0 = a0 + 0x101\n  4052: a1 = s1 + 0x7ff\n  4056: a1 = a1 + 0x121\n  4060: ra = 0x6e\n  4063: jump @24\n      : @118 (gas: 5)\n  4066: a0 = s1 + 0x660\n  4070: a1 = u64 [s1 + 0xf0]\n  4074: u64 [s1 + 0x20] = t2\n  4077: u64 [s1 + 0x28] = a4\n  4080: ra = 96, jump @17\n      : @119 [@dyn 48] (gas: 17)\n  4085: a5 = u64 [s1 + 0x50]\n  4088: a4 = u64 [s1 + 0x28]\n  4091: a1 = u64 [s1 + 0x30]\n  4094: t0 = u64 [s1 + 0x38]\n  4097: t1 = u64 [s1 + 0x40]\n  4100: t2 = u64 [s1 + 0x20]\n  4103: a3 = u64 [s1 + 0x60]\n  4106: a2 = s1 + 0x600\n  4110: a0 = u64 [a2 + 0x78]\n  4113: u64 [s1 + 0x130] = a0\n  4117: a0 = u64 [a2 + 0x70]\n  4120: u64 [s1 + 0x128] = a0\n  4124: a0 = u64 [a2 + 0x68]\n  4127: u64 [s1 + 0x118] = a0\n  4131: a0 = u64 [a2 + 0x60]\n  4134: u64 [s1 + 0x120] = a0\n  4138: fallthrough\n      : @120 (gas: 7)\n  4139: a0 = a5 | a1\n  4142: u64 [s1 + 0x110] = a0\n  4146: a0 = t1 | t2\n  4149: u64 [s1 + 0x108] = a0\n  4153: a0 = a4 | t0\n  4156: u64 [s1 + 0x100] = a0\n  4160: t0 = 98, jump @1418\n      : @121 [@dyn 49] (gas: 1)\n  4165: ra = 100, jump @1427\n      : @122 [@dyn 50] (gas: 7)\n  4170: u64 [s1 + 0xe0] = a0\n  4174: u64 [s1 + 0xf8] = a1\n  4178: a0 = u64 [s1 + 0x60]\n  4181: i32 a2 = a0 << 0x3\n  4184: a0 = 0xffffffffffffffff\n  4187: a1 = 0xffffffffffffffff\n  4190: ra = 102, jump @1422\n      : @123 [@dyn 51] (gas: 10)\n  4195: u64 [s1 + 0xf0] = a0\n  4199: u64 [s1 + 0xe8] = a1\n  4203: a1 = u64 [s1 + 0xe0]\n  4207: a0 = a0 | a1\n  4210: u64 [s1 + 0xe0] = a0\n  4214: a0 = u64 [s1 + 0x138]\n  4218: i32 a2 = a0 + 0xffffffffffffff80\n  4221: a0 = 0xffffffffffffffff\n  4224: a1 = 0xffffffffffffffff\n  4227: ra = 104, jump @1422\n      : @124 [@dyn 52] (gas: 7)\n  4232: a4 = u64 [s1 + 0x138]\n  4236: a2 = a4 <u 0x80\n  4240: a3 = u64 [s1 + 0xe0]\n  4244: a0 = a3 if a2 != 0\n  4247: a5 = u64 [s1 + 0xe8]\n  4251: a3 = u64 [s1 + 0xf8]\n  4255: t0 = 106, jump @1420\n      : @125 [@dyn 53] (gas: 2)\n  4260: a4 = u64 [s1 + 0xf0]\n  4264: t0 = 108, jump @1377\n      : @126 [@dyn 54] (gas: 24)\n  4269: a4 = u64 [s1 + 0x48]\n  4272: a0 = a0 | a4\n  4275: a5 = s1 + 0x100\n  4279: a4 = u64 [a5]\n  4281: a1 = a1 | a4\n  4284: a4 = u64 [a5 + 0x8]\n  4287: a3 = a3 | a4\n  4290: a4 = u64 [a5 + 0x10]\n  4293: a2 = a2 | a4\n  4296: a5 = s1 + 0x7ff\n  4300: a5 = a5 + 0xb9\n  4304: u64 [a5 + 136] = 0x3\n  4309: u64 [a5 + 0xb8] = a2\n  4313: u64 [a5 + 0xc0] = a3\n  4317: u64 [a5 + 0xb0] = a1\n  4321: u64 [a5 + 0xa8] = a0\n  4325: u64 [a5 + 160] = 0\n  4329: u64 [a5 + 152] = 0\n  4333: u64 [a5 + 144] = 0\n  4337: a0 = s1 + 0x7ff\n  4341: a0 = a0 + 0x141\n  4345: a1 = s1 + 0x7ff\n  4349: a1 = a1 + 0x161\n  4353: ra = 110, jump @24\n      : @127 [@dyn 55] (gas: 3)\n  4358: a0 = s1 + 0x600\n  4362: a1 = u64 [s1 + 0xa0]\n  4366: ra = 112, jump @17\n      : @128 [@dyn 56] (gas: 17)\n  4371: a0 = s1 + 0x600\n  4375: a3 = u64 [a0 + 0x18]\n  4378: a2 = u64 [a0 + 0x10]\n  4381: a1 = u64 [a0 + 0x8]\n  4384: a0 = a3 >u 0\n  4386: a4 = a2 >u 0\n  4388: a4 = a0 if a3 != 0\n  4391: u64 [s1 + 0xb8] = a1\n  4395: a0 = a1 >u 0\n  4397: u64 [s1 + 0xb0] = a2\n  4401: u64 [s1 + 0xa8] = a3\n  4405: a2 = a2 | a3\n  4408: u64 [s1 + 0xd8] = a0\n  4412: u64 [s1 + 0xe0] = a4\n  4416: u64 [s1 + 0xf0] = a2\n  4420: a0 = a4 if a2 != 0\n  4423: jump @233 if a0 != 0\n      : @129 (gas: 12)\n  4427: a0 = u64 [s1 + 0x600]\n  4431: u64 [s1 + 0xc0] = a0\n  4435: a1 = s1 + 0x7ff\n  4439: a1 = a1 + 0xb9\n  4443: u64 [a1 + 224] = 0\n  4447: u64 [a1 + 216] = 0\n  4451: u64 [a1 + 208] = 0\n  4455: u64 [a1 + 200] = 0x4\n  4460: a0 = s1 + 0x5e0\n  4464: a1 = s1 + 0x7ff\n  4468: a1 = a1 + 0x181\n  4472: ra = 114, jump @21\n      : @130 [@dyn 57] (gas: 6)\n  4477: a4 = s1 + 0x500\n  4481: a0 = u64 [a4 + 0xf0]\n  4485: a1 = u64 [a4 + 0xe8]\n  4489: a2 = u64 [a4 + 0xe0]\n  4493: a3 = u64 [a4 + 0xf8]\n  4497: t0 = 116, jump @1378\n      : @131 [@dyn 58] (gas: 12)\n  4502: t0 = a2 <u 0x1\n  4505: ra = a1 & 0x7f\n  4508: t2 = a5 & a0\n  4511: a4 = a5 & t1\n  4514: ra = a1 if a2 != 0\n  4517: a1 = ra <u 0x20\n  4520: a5 = a5 & a3\n  4523: a2 = a1\n  4525: a2 = 0 if a4 != 0\n  4527: a0 = t2 | a5\n  4530: a2 = 0 if a0 != 0\n  4532: jump @239 if t0 != a2\n      : @132 (gas: 1)\n  4536: t0 = 118, jump @1392\n      : @133 [@dyn 59] (gas: 4)\n  4541: a0 = u64 [s1 + 0xc0]\n  4545: a0 = a0 <u 0x20\n  4548: u64 [s1 + 0xe8] = a0\n  4552: jump @145 if a3 == 0\n      : @134 (gas: 11)\n  4556: u64 [s1 + 0x110] = a4\n  4560: u64 [s1 + 0x118] = ra\n  4564: u64 [s1 + 0x120] = a5\n  4568: u64 [s1 + 0x130] = t2\n  4572: u64 [s1 + 1496] = 0\n  4576: u64 [s1 + 1488] = 0\n  4580: u64 [s1 + 1480] = 0\n  4584: a1 = s1 + 0x5c0\n  4588: u64 [s1 + 1472] = 0x4\n  4593: a0 = 0\n  4595: ra = 120, jump @19\n      : @135 [@dyn 60] (gas: 2)\n  4600: a1 = i32 [0x2026c]\n  4605: jump @137 if a1 >u 31\n      : @136 (gas: 2)\n  4609: u32 [0x2026c] = 0x20\n  4615: fallthrough\n      : @137 (gas: 11)\n  4616: a0 = sp + 0xffffffffffffffe0\n  4619: a2 = a0 & 0xffffffffffffffe0\n  4622: u64 [s1 + 0x128] = a2\n  4626: sp = a2\n  4628: a0 = 0x20280\n  4633: i32 a0 = a0 + 0\n  4635: i32 a2 = a2 + 0\n  4637: a1 = 0x20\n  4640: ra = 0x7a\n  4643: ecalli 6 // 'hash_keccak_256'\n  4645: fallthrough\n      : @138 [@dyn 61] (gas: 9)\n  4646: a0 = u64 [s1 + 0xc0]\n  4650: a1 = a0 + 0x1f\n  4653: a0 = a1 <u a0\n  4656: a5 = u64 [s1 + 0xb8]\n  4660: a2 = a5 + a0\n  4663: a3 = a2 <u a5\n  4666: a3 = a0 if a0 == 0\n  4669: a4 = u64 [s1 + 0xb0]\n  4673: t0 = 124, jump @1374\n      : @139 [@dyn 62] (gas: 35)\n  4678: a1 = u64 [s1 + 0xe8]\n  4682: a1 = 0 if a5 != 0\n  4684: a3 = u64 [s1 + 0xf0]\n  4688: a1 = 0 if a3 != 0\n  4690: a4 = 0 if a1 != 0\n  4692: a0 = 0 if a1 != 0\n  4694: t0 = t2 + a0\n  4697: a0 = t0 <u t2\n  4700: a5 = a2 + a0\n  4703: a4 = a4 + a5\n  4706: u64 [s1 + 0x138] = a4\n  4710: a5 = a4 ^ a2\n  4713: a3 = a4 <u a2\n  4716: a3 = a0 if a5 == 0\n  4719: u64 [s1 + 0x100] = a3\n  4723: a0 = u64 [s1 + 0x118]\n  4727: ra = a0 + 0x1f\n  4730: a4 = ra <u a0\n  4733: a3 = u64 [s1 + 0x110]\n  4737: a0 = a3 + a4\n  4740: a5 = a0 <u a3\n  4743: a5 = a4 if a4 == 0\n  4746: t1 = u64 [s1 + 0x130]\n  4750: t1 = t1 + a5\n  4753: a4 = t1 << 0x3b\n  4756: a3 = a0 >> 0x5\n  4759: a3 = a3 | a4\n  4762: a0 = a0 << 0x3b\n  4765: a4 = ra >> 0x5\n  4768: a0 = a0 | a4\n  4771: a0 = a0 + t2\n  4774: u64 [s1 + 0x118] = a0\n  4778: a0 = a0 <u t2\n  4781: t2 = t0\n  4783: t0 = 126, jump @1397\n      : @140 [@dyn 63] (gas: 16)\n  4788: a0 = u64 [s1 + 0xb0]\n  4792: a0 = a4 <u a0\n  4795: a3 = u64 [s1 + 0xa8]\n  4799: a0 = a0 + a3\n  4802: a3 = a4 >> 0x5\n  4805: a4 = a0 << 0x3b\n  4808: a3 = a3 | a4\n  4811: a4 = u64 [s1 + 0x128]\n  4815: t0 = u64 [a4]\n  4817: a4 = u64 [a4 + 0x8]\n  4820: a0 = a0 >> 0x5\n  4823: a3 = 0 if a1 != 0\n  4825: a0 = 0 if a1 != 0\n  4827: a1 = reverse a4\n  4829: a4 = reverse t0\n  4831: t0 = 128, jump @1416\n      : @141 [@dyn 64] (gas: 25)\n  4837: t0 = a0 + a3\n  4840: a0 = u64 [s1 + 0x130]\n  4844: a0 = t1 <u a0\n  4847: a3 = u64 [s1 + 0x120]\n  4851: a0 = a0 + a3\n  4854: a3 = t1 >> 0x5\n  4857: a5 = a0 << 0x3b\n  4860: a3 = a3 | a5\n  4863: a0 = a0 >> 0x5\n  4866: a0 = a0 + a4\n  4869: a5 = s1 + 0x100\n  4873: a4 = u64 [a5 + 0x38]\n  4876: a3 = a3 + a1\n  4879: a1 = a3 <u a1\n  4882: a0 = a0 + a1\n  4885: a2 = a2 + a3\n  4888: u64 [a5 + 0x8] = a2\n  4891: a1 = a2 <u a3\n  4894: a0 = a0 + a1\n  4897: u64 [a5] = a0\n  4899: a0 = sp + 0xffffffffffffffe0\n  4902: t1 = a0 & 0xffffffffffffffe0\n  4905: sp = t1\n  4907: u64 [s1 + 0xf8] = t1\n  4911: fallthrough\n      : @142 (gas: 22)\n  4912: a0 = u64 [s1 + 0x118]\n  4916: a0 = t2 <u a0\n  4919: a2 = u64 [s1 + 0x110]\n  4923: a1 = a4 ^ a2\n  4926: a2 = a4 <u a2\n  4929: a2 = a0 if a1 == 0\n  4932: a5 = u64 [s1 + 0x108]\n  4936: a0 = ra <u a5\n  4939: a3 = u64 [s1 + 0x100]\n  4943: a1 = t0 ^ a3\n  4946: a3 = t0 <u a3\n  4949: a3 = a0 if a1 == 0\n  4952: a0 = ra ^ a5\n  4955: a0 = a0 | a1\n  4958: a3 = a2 if a0 == 0\n  4961: u64 [t1] = t2\n  4963: u64 [t1 + 0x8] = a4\n  4966: u64 [t1 + 0x10] = ra\n  4969: u64 [t1 + 0x18] = t0\n  4972: a0 = s1 + 0x7ff\n  4976: a0 = a0 + 0xb9\n  4980: jump @145 if a3 == 0\n      : @143 (gas: 12)\n  4983: u64 [a0 + 256] = 0\n  4987: u64 [a0 + 248] = 0\n  4991: u64 [a0 + 240] = 0\n  4995: u64 [a0 + 232] = 0\n  4999: a1 = s1 + 0x7ff\n  5003: a1 = a1 + 0x1a1\n  5007: a0 = t1\n  5009: u64 [s1 + 0x130] = t2\n  5013: u64 [s1 + 0x138] = a4\n  5017: u64 [s1 + 0x128] = t0\n  5021: u64 [s1 + 0x120] = ra\n  5025: ra = 130, jump @24\n      : @144 [@dyn 65] (gas: 15)\n  5031: t1 = u64 [s1 + 0xf8]\n  5035: t0 = u64 [s1 + 0x128]\n  5039: a4 = u64 [s1 + 0x138]\n  5043: t2 = u64 [s1 + 0x130]\n  5047: t2 = t2 + 0x1\n  5050: a0 = t2 <u 0x1\n  5053: a4 = a4 + a0\n  5056: a0 = t2 | a4\n  5059: a0 = a0 <u 0x1\n  5062: a1 = u64 [s1 + 0x120]\n  5066: a0 = a0 + a1\n  5069: a1 = a0 <u a1\n  5072: t0 = t0 + a1\n  5075: ra = a0\n  5077: jump @142\n      : @145 (gas: 9)\n  5080: a0 = u64 [s1 + 0xe8]\n  5084: a0 = a0 ^ 0x1\n  5087: a2 = u64 [s1 + 0xb8]\n  5091: a1 = u64 [s1 + 0xd8]\n  5095: a0 = a1 if a2 != 0\n  5098: a1 = u64 [s1 + 0xe0]\n  5102: a3 = u64 [s1 + 0xf0]\n  5106: a0 = a1 if a3 != 0\n  5109: jump @155 if a0 == 0\n      : @146 (gas: 10)\n  5113: a0 = u64 [s1 + 0xc0]\n  5117: a0 = a0 & 0xffffffffffffffe0\n  5120: u64 [s1 + 0xc8] = a0\n  5124: u64 [s1 + 1432] = 0\n  5128: u64 [s1 + 1424] = 0\n  5132: u64 [s1 + 1416] = 0\n  5136: a1 = s1 + 0x580\n  5140: u64 [s1 + 1408] = 0x4\n  5145: a0 = 0\n  5147: ra = 132, jump @19\n      : @147 [@dyn 66] (gas: 7)\n  5153: a0 = sp + 0xffffffffffffffe0\n  5156: a0 = a0 & 0xffffffffffffffe0\n  5159: u64 [s1 + 0x120] = a0\n  5163: sp = a0\n  5165: a1 = 0x20\n  5168: a0 = 0\n  5170: ra = 134, jump @33\n      : @148 [@dyn 67] (gas: 39)\n  5176: a1 = sp + 0xffffffffffffffe0\n  5179: a1 = a1 & 0xffffffffffffffe0\n  5182: u64 [s1 + 0x118] = a1\n  5186: sp = a1\n  5188: i32 a0 = a0 + 0\n  5190: i32 a2 = a1 + 0\n  5192: a1 = 0x20\n  5195: ecalli 6 // 'hash_keccak_256'\n  5197: u64 [s1 + 312] = 0x20\n  5202: a5 = 0\n  5204: u64 [s1 + 296] = 0\n  5208: u64 [s1 + 304] = 0\n  5212: a4 = 0\n  5214: a3 = 0\n  5216: a2 = 0\n  5218: t1 = 0\n  5220: a0 = u64 [s1 + 0x118]\n  5224: t0 = u64 [a0 + 0x18]\n  5227: a1 = u64 [a0 + 0x10]\n  5230: ra = u64 [a0 + 0x8]\n  5233: a0 = u64 [a0]\n  5235: u64 [s1 + 0x110] = a0\n  5239: a0 = reverse t0\n  5241: u64 [s1 + 0x118] = a0\n  5245: t2 = reverse a1\n  5247: t0 = reverse ra\n  5249: a0 = u64 [s1 + 0x110]\n  5253: a1 = reverse a0\n  5255: ra = a1\n  5257: a0 = u64 [s1 + 0x120]\n  5261: u64 [a0 + 0x18] = a1\n  5264: a1 = t0\n  5266: u64 [s1 + 0xd8] = a1\n  5270: u64 [a0 + 0x10] = a1\n  5273: u64 [s1 + 0x108] = t2\n  5277: u64 [a0 + 0x8] = t2\n  5280: a1 = u64 [s1 + 0x118]\n  5284: u64 [a0] = a1\n  5286: fallthrough\n      : @149 (gas: 24)\n  5287: u64 [s1 + 0x100] = ra\n  5291: a0 = u64 [s1 + 0xc8]\n  5295: u64 [s1 + 0xf0] = a4\n  5299: a0 = a4 <u a0\n  5302: a4 = a0 ^ 0x1\n  5305: u64 [s1 + 0xe8] = a3\n  5309: a4 = 0x1 if a3 != 0\n  5312: u64 [s1 + 0x110] = t1\n  5316: u64 [s1 + 0xf8] = a2\n  5320: a0 = a2 | t1\n  5323: a4 = 0x1 if a0 != 0\n  5326: a0 = u64 [s1 + 0xa0]\n  5330: a1 = u64 [s1 + 0x138]\n  5334: a1 = a1 + a0\n  5337: a3 = u64 [s1 + 0x90]\n  5341: u64 [s1 + 0xe0] = a5\n  5345: t0 = a3 + a5\n  5348: t2 = u64 [s1 + 0x98]\n  5352: a2 = u64 [s1 + 0x128]\n  5356: a2 = a2 + t2\n  5359: t1 = u64 [s1 + 0x88]\n  5363: a5 = u64 [s1 + 0x130]\n  5367: t1 = t1 + a5\n  5370: jump @157 if a4 != 0\n      : @150 (gas: 6)\n  5374: ra = a1 <u a0\n  5377: a4 = t0 + ra\n  5380: t0 = a4 ^ a3\n  5383: a5 = a4 <u a3\n  5386: a5 = ra if t0 == 0\n  5389: t0 = 136, jump @1383\n      : @151 [@dyn 68] (gas: 1)\n  5395: jump @218 if a0 != 0\n      : @152 (gas: 2)\n  5399: a0 = s1 + 0x260\n  5403: ra = 138, jump @17\n      : @153 [@dyn 69] (gas: 16)\n  5409: a4 = s1 + 0x200\n  5413: a0 = u64 [a4 + 0x78]\n  5416: a1 = u64 [a4 + 0x70]\n  5419: a2 = u64 [a4 + 0x68]\n  5422: a3 = u64 [a4 + 0x60]\n  5425: a4 = s1 + 0x7ff\n  5429: a4 = a4 + 0xb9\n  5433: a5 = a4 + 0x100\n  5437: u64 [a5 + 0x20] = a0\n  5440: u64 [a5 + 0x18] = a1\n  5443: u64 [a5 + 0x10] = a2\n  5446: u64 [a5 + 0x8] = a3\n  5449: a1 = s1 + 0x7ff\n  5453: a1 = a1 + 0x1c1\n  5457: a0 = u64 [s1 + 0x120]\n  5461: ra = 140, jump @24\n      : @154 [@dyn 70] (gas: 54)\n  5467: ra = u64 [s1 + 0x118]\n  5471: ra = ra + 0x1\n  5474: a0 = ra <u 0x1\n  5477: a3 = u64 [s1 + 0x108]\n  5481: a3 = a3 + a0\n  5484: a0 = ra | a3\n  5487: a0 = a0 <u 0x1\n  5490: a1 = u64 [s1 + 0xd8]\n  5494: a0 = a0 + a1\n  5497: a1 = a0 <u a1\n  5500: t0 = u64 [s1 + 0x100]\n  5504: t0 = t0 + a1\n  5507: a1 = u64 [s1 + 0x138]\n  5511: a2 = a1 + 0x20\n  5514: u64 [s1 + 0x100] = a2\n  5518: a1 = a2 <u a1\n  5521: a2 = u64 [s1 + 0xe0]\n  5525: a4 = a2 + a1\n  5528: u64 [s1 + 0xd0] = a4\n  5532: a4 = a4 <u a2\n  5535: a4 = a1 if a1 == 0\n  5538: a1 = u64 [s1 + 0x128]\n  5542: t2 = a1 + a4\n  5545: a4 = t2 <u a1\n  5548: a1 = u64 [s1 + 0x130]\n  5552: a1 = a1 + a4\n  5555: u64 [s1 + 0x130] = a1\n  5559: a1 = u64 [s1 + 0xf0]\n  5563: a4 = a1 + 0x20\n  5566: a5 = a4 <u a1\n  5569: a2 = u64 [s1 + 0xe8]\n  5573: a1 = a2 + a5\n  5576: a2 = a1 <u a2\n  5579: a2 = a5 if a5 == 0\n  5582: a5 = u64 [s1 + 0xf8]\n  5586: a2 = a2 + a5\n  5589: a5 = a2 <u a5\n  5592: t1 = u64 [s1 + 0x110]\n  5596: t1 = t1 + a5\n  5599: u64 [s1 + 0x108] = a3\n  5603: a5 = u64 [s1 + 0x120]\n  5607: u64 [a5 + 0x8] = a3\n  5610: u64 [s1 + 0x118] = ra\n  5614: u64 [a5] = ra\n  5616: u64 [a5 + 0x10] = a0\n  5619: ra = t0\n  5621: u64 [a5 + 0x18] = t0\n  5624: u64 [s1 + 0xd8] = a0\n  5628: a0 = u64 [s1 + 0x100]\n  5632: u64 [s1 + 0x138] = a0\n  5636: a5 = u64 [s1 + 0xd0]\n  5640: u64 [s1 + 0x128] = t2\n  5644: a3 = a1\n  5646: jump @149\n      : @155 (gas: 7)\n  5649: a3 = u64 [s1 + 0xc0]\n  5653: a4 = u64 [s1 + 0xb0]\n  5657: a0 = a3 | a4\n  5660: a5 = u64 [s1 + 0xa8]\n  5664: a1 = a2 | a5\n  5667: a0 = a0 | a1\n  5670: jump @171 if a0 != 0\n      : @156 (gas: 5)\n  5674: u64 [s1 + 288] = 0\n  5678: u64 [s1 + 280] = 0\n  5682: u64 [s1 + 296] = 0\n  5686: u64 [s1 + 304] = 0\n  5690: jump @173\n      : @157 (gas: 12)\n  5693: a4 = u64 [s1 + 0xc8]\n  5697: a5 = u64 [s1 + 0xc0]\n  5701: a4 = a4 ^ a5\n  5704: ra = u64 [s1 + 0xb0]\n  5708: a4 = a4 | ra\n  5711: u64 [s1 + 0x138] = a4\n  5715: a5 = u64 [s1 + 0xb8]\n  5719: a4 = u64 [s1 + 0xa8]\n  5723: a5 = a5 | a4\n  5726: a4 = u64 [s1 + 0x138]\n  5730: a4 = a4 | a5\n  5733: jump @170 if a4 == 0\n      : @158 (gas: 6)\n  5737: ra = a1 <u a0\n  5740: a4 = t0 + ra\n  5743: t0 = a4 ^ a3\n  5746: a5 = a4 <u a3\n  5749: a5 = ra if t0 == 0\n  5752: t0 = 142, jump @1383\n      : @159 [@dyn 71] (gas: 1)\n  5758: jump @218 if a0 != 0\n      : @160 (gas: 2)\n  5762: a0 = s1 + 0x560\n  5766: ra = 144, jump @17\n      : @161 [@dyn 72] (gas: 11)\n  5772: a1 = s1 + 0x500\n  5776: a0 = u64 [a1 + 0x78]\n  5779: u64 [s1 + 0x130] = a0\n  5783: a0 = u64 [a1 + 0x70]\n  5786: u64 [s1 + 0x128] = a0\n  5790: a0 = u64 [a1 + 0x68]\n  5793: u64 [s1 + 0x118] = a0\n  5797: a0 = u64 [a1 + 0x60]\n  5800: u64 [s1 + 0x110] = a0\n  5804: a0 = u64 [s1 + 0xc0]\n  5808: t0 = 146, jump @1410\n      : @162 [@dyn 73] (gas: 1)\n  5814: ra = 148, jump @1427\n      : @163 [@dyn 74] (gas: 6)\n  5820: u64 [s1 + 0x108] = a0\n  5824: u64 [s1 + 0xf0] = a1\n  5828: a0 = 0xffffffffffffffff\n  5831: a1 = 0xffffffffffffffff\n  5834: a2 = u64 [s1 + 0x138]\n  5838: ra = 150, jump @1422\n      : @164 [@dyn 75] (gas: 1)\n  5844: t0 = 152, jump @1402\n      : @165 [@dyn 76] (gas: 1)\n  5850: ra = 154, jump @1422\n      : @166 [@dyn 77] (gas: 1)\n  5856: t0 = 156, jump @1364\n      : @167 [@dyn 78] (gas: 2)\n  5862: a2 = u64 [s1 + 0x118]\n  5866: t0 = 158, jump @1395\n      : @168 [@dyn 79] (gas: 9)\n  5872: a5 = a4 + 0x100\n  5876: u64 [a5 + 0x40] = a3\n  5879: u64 [a5 + 0x38] = a2\n  5882: u64 [a5 + 0x30] = a1\n  5885: u64 [a5 + 0x28] = a0\n  5888: a1 = s1 + 0x7ff\n  5892: a1 = a1 + 0x1e1\n  5896: a0 = u64 [s1 + 0x120]\n  5900: ra = 160, jump @24\n      : @169 [@dyn 80] (gas: 2)\n  5906: ra = u64 [s1 + 0xb0]\n  5910: fallthrough\n      : @170 (gas: 31)\n  5911: a0 = ra >> 0x3f\n  5914: a1 = u64 [s1 + 0xa8]\n  5918: a1 = a1 << 0x1\n  5921: a0 = a0 | a1\n  5924: a3 = u64 [s1 + 0xb8]\n  5928: a1 = a3 >> 0x3f\n  5931: a2 = ra << 0x1\n  5934: a1 = a1 | a2\n  5937: a4 = u64 [s1 + 0xc0]\n  5941: a2 = a4 >> 0x3f\n  5944: a3 = a3 << 0x1\n  5947: a2 = a2 | a3\n  5950: a3 = a4 << 0x1\n  5953: a3 = a3 + 0x1\n  5956: a5 = s1 + 0x7ff\n  5960: a5 = a5 + 0xb9\n  5964: u64 [a5 + 352] = 0\n  5968: u64 [a5 + 344] = 0\n  5972: u64 [a5 + 336] = 0\n  5976: u64 [a5 + 328] = 0x4\n  5981: a4 = a5 + 0x100\n  5985: u64 [a4 + 0x68] = a3\n  5988: u64 [a4 + 0x70] = a2\n  5991: u64 [a4 + 0x78] = a1\n  5994: u64 [a4 + 0x80] = a0\n  5998: a0 = s1 + 0x7ff\n  6002: a0 = a0 + 0x201\n  6006: a1 = s1 + 0x7ff\n  6010: a1 = a1 + 0x221\n  6014: ra = 0xb0\n  6018: jump @24\n      : @171 (gas: 3)\n  6021: a0 = s1 + 0x5a0\n  6025: a1 = u64 [s1 + 0x18]\n  6028: ra = 162, jump @17\n      : @172 [@dyn 81] (gas: 14)\n  6034: a5 = u64 [s1 + 0xa8]\n  6038: a4 = u64 [s1 + 0xb0]\n  6042: a2 = u64 [s1 + 0xb8]\n  6046: a3 = u64 [s1 + 0xc0]\n  6050: a1 = s1 + 0x500\n  6054: a0 = u64 [a1 + 0xb8]\n  6058: u64 [s1 + 0x130] = a0\n  6062: a0 = u64 [a1 + 0xb0]\n  6066: u64 [s1 + 0x128] = a0\n  6070: a0 = u64 [a1 + 0xa8]\n  6074: u64 [s1 + 0x118] = a0\n  6078: a0 = u64 [a1 + 0xa0]\n  6082: u64 [s1 + 0x120] = a0\n  6086: fallthrough\n      : @173 (gas: 15)\n  6087: a0 = a2 >> 0x3f\n  6090: a1 = a4 << 0x1\n  6093: a0 = a0 | a1\n  6096: u64 [s1 + 0x110] = a0\n  6100: a0 = a4 >> 0x3f\n  6103: a1 = a5 << 0x1\n  6106: a0 = a0 | a1\n  6109: u64 [s1 + 0x108] = a0\n  6113: a0 = a3 >> 0x3f\n  6116: a1 = a2 << 0x1\n  6119: a0 = a0 | a1\n  6122: u64 [s1 + 0x100] = a0\n  6126: a0 = a3 << 0x1\n  6129: u64 [s1 + 0xf8] = a0\n  6133: t0 = 164, jump @1418\n      : @174 [@dyn 82] (gas: 1)\n  6139: ra = 166, jump @1427\n      : @175 [@dyn 83] (gas: 7)\n  6145: u64 [s1 + 0xd8] = a0\n  6149: u64 [s1 + 0xf0] = a1\n  6153: a0 = u64 [s1 + 0xc0]\n  6157: i32 a2 = a0 << 0x3\n  6160: a0 = 0xffffffffffffffff\n  6163: a1 = 0xffffffffffffffff\n  6166: ra = 168, jump @1422\n      : @176 [@dyn 84] (gas: 10)\n  6172: u64 [s1 + 0xe8] = a0\n  6176: u64 [s1 + 0xe0] = a1\n  6180: a1 = u64 [s1 + 0xd8]\n  6184: a0 = a0 | a1\n  6187: u64 [s1 + 0xd8] = a0\n  6191: a0 = u64 [s1 + 0x138]\n  6195: i32 a2 = a0 + 0xffffffffffffff80\n  6198: a0 = 0xffffffffffffffff\n  6201: a1 = 0xffffffffffffffff\n  6204: ra = 170, jump @1422\n      : @177 [@dyn 85] (gas: 7)\n  6210: a4 = u64 [s1 + 0x138]\n  6214: a2 = a4 <u 0x80\n  6218: a3 = u64 [s1 + 0xd8]\n  6222: a0 = a3 if a2 != 0\n  6225: a5 = u64 [s1 + 0xe0]\n  6229: a3 = u64 [s1 + 0xf0]\n  6233: t0 = 172, jump @1420\n      : @178 [@dyn 86] (gas: 2)\n  6239: a4 = u64 [s1 + 0xe8]\n  6243: t0 = 174, jump @1377\n      : @179 [@dyn 87] (gas: 25)\n  6249: a4 = u64 [s1 + 0xf8]\n  6253: a0 = a0 | a4\n  6256: a5 = s1 + 0x100\n  6260: a4 = u64 [a5]\n  6262: a1 = a1 | a4\n  6265: a4 = u64 [a5 + 0x8]\n  6268: a3 = a3 | a4\n  6271: a4 = u64 [a5 + 0x10]\n  6274: a2 = a2 | a4\n  6277: a5 = s1 + 0x7ff\n  6281: a5 = a5 + 0xb9\n  6285: u64 [a5 + 392] = 0x4\n  6290: a4 = a5 + 0x100\n  6294: u64 [a4 + 0xb8] = a2\n  6298: u64 [a4 + 0xc0] = a3\n  6302: u64 [a4 + 0xb0] = a1\n  6306: u64 [a4 + 0xa8] = a0\n  6310: u64 [a5 + 416] = 0\n  6314: u64 [a5 + 408] = 0\n  6318: u64 [a5 + 400] = 0\n  6322: a0 = s1 + 0x7ff\n  6326: a0 = a0 + 0x241\n  6330: a1 = s1 + 0x7ff\n  6334: a1 = a1 + 0x261\n  6338: ra = 176, jump @24\n      : @180 [@dyn 88] (gas: 32)\n  6344: a0 = 0x30280\n  6349: u64 [s1 + 0x138] = a0\n  6353: i32 a0 = a0 + 0\n  6355: u64 [s1 + 0x130] = a0\n  6359: ecalli 3 // 'caller'\n  6361: a2 = u64 [s1 + 0x138]\n  6365: a0 = u64 [a2 + 0x8]\n  6368: a1 = i32 [a2 + 0x10]\n  6371: a2 = u64 [a2]\n  6373: a0 = reverse a0\n  6375: a3 = a0 << 0x20\n  6378: a1 = reverse a1\n  6380: a1 = a1 >> 0x20\n  6383: a1 = a1 | a3\n  6386: u64 [s1 + 0x128] = a1\n  6390: a0 = a0 >> 0x20\n  6393: a1 = reverse a2\n  6395: a2 = a1 << 0x20\n  6398: a0 = a0 | a2\n  6401: u64 [s1 + 0x120] = a0\n  6405: a1 = a1 >> 0x20\n  6408: u64 [s1 + 0x118] = a1\n  6412: a1 = s1 + 0x7ff\n  6416: a1 = a1 + 0xb9\n  6420: u64 [a1 + 480] = 0\n  6424: u64 [a1 + 472] = 0\n  6428: u64 [a1 + 464] = 0\n  6432: u64 [a1 + 456] = 0x7\n  6437: a0 = s1 + 0x540\n  6441: a1 = s1 + 0x7ff\n  6445: a1 = a1 + 0x281\n  6449: ra = 178, jump @21\n      : @181 [@dyn 89] (gas: 23)\n  6455: a0 = u32 [s1 + 0x554]\n  6459: a0 = a0 << 0x20\n  6462: a1 = u64 [s1 + 0x558]\n  6466: a2 = u64 [s1 + 0x118]\n  6470: a0 = a0 | a2\n  6473: a2 = s1 + 0x7ff\n  6477: a2 = a2 + 0xb9\n  6481: u64 [a2 + 512] = 0\n  6485: u64 [a2 + 504] = 0\n  6489: u64 [a2 + 496] = 0\n  6493: u64 [a2 + 488] = 0x7\n  6498: a3 = a2 + 0x200\n  6502: u64 [a3 + 0x20] = a1\n  6505: a1 = u64 [s1 + 0x120]\n  6509: u64 [a3 + 0x10] = a1\n  6512: a1 = u64 [s1 + 0x128]\n  6516: u64 [a3 + 0x8] = a1\n  6519: u64 [a3 + 0x18] = a0\n  6522: a0 = s1 + 0x7ff\n  6526: a0 = a0 + 0x2a1\n  6530: a1 = s1 + 0x7ff\n  6534: a1 = a1 + 0x2c1\n  6538: ra = 180, jump @24\n      : @182 [@dyn 90] (gas: 6)\n  6544: a0 = u64 [s1 + 0x130]\n  6548: ra = 0xb6\n  6552: ecalli 3 // 'caller'\n  6554: a2 = u64 [s1 + 0x138]\n  6558: t0 = 0xb8\n  6562: jump @1344\n      : @183 [@dyn 91] (gas: 2)\n  6565: a2 = u64 [s1 + 0x138]\n  6569: t0 = 184, jump @1344\n      : @184 [@dyn 92] (gas: 8)\n  6575: u64 [s1 + 1304] = 0\n  6579: a2 = s1 + 0x500\n  6583: u64 [a2 + 0x10] = a1\n  6586: u64 [a2 + 0x8] = a0\n  6589: a0 = s1 + 0x520\n  6593: a1 = s1 + 0x500\n  6597: u64 [a2] = a3\n  6599: ra = 186, jump @890\n      : @185 [@dyn 93] (gas: 6)\n  6605: a0 = u64 [s1 + 0x130]\n  6609: ra = 0xbc\n  6613: ecalli 3 // 'caller'\n  6615: a2 = u64 [s1 + 0x138]\n  6619: t0 = 0xbe\n  6623: jump @1344\n      : @186 [@dyn 94] (gas: 2)\n  6626: a2 = u64 [s1 + 0x138]\n  6630: t0 = 190, jump @1344\n      : @187 [@dyn 95] (gas: 9)\n  6636: u64 [s1 + 1240] = 0\n  6640: u64 [s1 + 0x4d0] = a1\n  6644: u64 [s1 + 0x4c8] = a0\n  6648: a0 = s1 + 0x4e0\n  6652: a1 = s1 + 0x4c0\n  6656: u64 [s1 + 0x4c0] = a3\n  6660: ra = 0xc0\n  6664: t0 = 0x37c\n  6668: jump @1379\n      : @188 [@dyn 96] (gas: 6)\n  6671: a0 = u64 [s1 + 0x130]\n  6675: ra = 0xc2\n  6679: ecalli 3 // 'caller'\n  6681: a2 = u64 [s1 + 0x138]\n  6685: t0 = 0xc4\n  6689: jump @1344\n      : @189 [@dyn 97] (gas: 2)\n  6692: a2 = u64 [s1 + 0x138]\n  6696: t0 = 196, jump @1344\n      : @190 [@dyn 98] (gas: 10)\n  6702: u64 [s1 + 1176] = 0\n  6706: a2 = s1 + 0x400\n  6710: u64 [a2 + 0x90] = a1\n  6714: u64 [a2 + 0x88] = a0\n  6718: a0 = s1 + 0x4a0\n  6722: a1 = s1 + 0x480\n  6726: u64 [a2 + 0x80] = a3\n  6730: ra = 0xc6\n  6734: t0 = 0x3c2\n  6738: jump @1379\n      : @191 [@dyn 99] (gas: 3)\n  6741: a0 = u64 [s1 + 0x130]\n  6745: ecalli 3 // 'caller'\n  6747: fallthrough\n      : @192 (gas: 7)\n  6748: a2 = u64 [s1 + 0x138]\n  6752: a0 = u32 [a2 + 0x10]\n  6755: a1 = u64 [a2]\n  6757: a2 = u64 [a2 + 0x8]\n  6760: a0 = a0 | a1\n  6763: a0 = a0 | a2\n  6766: jump @245 if a0 == 0\n      : @193 (gas: 10)\n  6770: a1 = s1 + 0x7ff\n  6774: a1 = a1 + 0xb9\n  6778: u64 [a1 + 576] = 0\n  6782: u64 [a1 + 568] = 0\n  6786: u64 [a1 + 560] = 0\n  6790: u64 [a1 + 552] = 0x5\n  6795: a0 = s1 + 0x460\n  6799: a1 = s1 + 0x7ff\n  6803: a1 = a1 + 0x2e1\n  6807: ra = 200, jump @21\n      : @194 [@dyn 100] (gas: 2)\n  6813: a0 = u8 [s1 + 0x460]\n  6817: jump @250 if a0 != 0\n      : @195 (gas: 10)\n  6821: a0 = s1 + 0x7ff\n  6825: a0 = a0 + 0xb9\n  6829: u64 [a0 + 608] = 0\n  6833: u64 [a0 + 600] = 0\n  6837: u64 [a0 + 592] = 0\n  6841: u64 [a0 + 584] = 0x2\n  6846: a0 = s1 + 0x420\n  6850: a1 = s1 + 0x7ff\n  6854: a1 = a1 + 0x301\n  6858: ra = 202, jump @21\n      : @196 [@dyn 101] (gas: 43)\n  6864: t2 = u64 [s1 + 0x438]\n  6868: t1 = u64 [s1 + 0x430]\n  6872: ra = u64 [s1 + 0x420]\n  6876: u64 [s1 + 0x128] = ra\n  6880: a5 = u64 [s1 + 0x428]\n  6884: a1 = sp + 0xffffffffffffffe0\n  6887: a1 = a1 & 0xffffffffffffffe0\n  6890: sp = a1\n  6892: a2 = u64 [s1 + 0x70]\n  6895: a4 = a2 + a5\n  6898: a0 = u64 [s1 + 0x68]\n  6901: ra = ra + a0\n  6904: a0 = ra <u a0\n  6907: a4 = a4 + a0\n  6910: a3 = a4 ^ a2\n  6913: a2 = a4 <u a2\n  6916: a2 = a0 if a3 == 0\n  6919: t0 = u64 [s1 + 0x78]\n  6922: a0 = t0 + t1\n  6925: a3 = u64 [s1 + 0x80]\n  6929: a3 = a3 + t2\n  6932: t0 = a0 <u t0\n  6935: a3 = a3 + t0\n  6938: a2 = a2 + a0\n  6941: a0 = a2 <u a0\n  6944: t0 = a3 + a0\n  6947: a0 = a5 ^ a4\n  6950: a5 = a4 <u a5\n  6953: a3 = u64 [s1 + 0x128]\n  6957: a3 = ra <u a3\n  6960: a3 = a5 if a0 != 0\n  6963: a0 = a2 <u t1\n  6966: a5 = t2 ^ t0\n  6969: t2 = t0 <u t2\n  6972: t2 = a0 if a5 == 0\n  6975: a0 = t1 ^ a2\n  6978: a0 = a0 | a5\n  6981: a3 = t2 if a0 != 0\n  6984: u64 [a1 + 0x10] = a2\n  6987: u64 [a1 + 0x8] = a4\n  6990: u64 [a1] = ra\n  6992: u64 [a1 + 0x18] = t0\n  6995: jump @254 if a3 != 0\n      : @197 (gas: 9)\n  6999: a0 = s1 + 0x7ff\n  7003: a0 = a0 + 0xb9\n  7007: u64 [a0 + 640] = 0\n  7011: u64 [a0 + 632] = 0\n  7015: u64 [a0 + 624] = 0\n  7019: u64 [a0 + 616] = 0x2\n  7024: a0 = s1 + 0x7ff\n  7028: a0 = a0 + 0x321\n  7032: ra = 204, jump @24\n      : @198 [@dyn 102] (gas: 6)\n  7038: a0 = u64 [s1 + 0x130]\n  7042: ra = 0xce\n  7046: ecalli 3 // 'caller'\n  7048: a2 = u64 [s1 + 0x138]\n  7052: t0 = 0xd0\n  7056: jump @1344\n      : @199 [@dyn 103] (gas: 2)\n  7059: a2 = u64 [s1 + 0x138]\n  7063: t0 = 208, jump @1344\n      : @200 [@dyn 104] (gas: 8)\n  7069: u64 [s1 + 1048] = 0\n  7073: a2 = s1 + 0x400\n  7077: u64 [a2 + 0x10] = a1\n  7080: u64 [a2 + 0x8] = a0\n  7083: a1 = s1 + 0x400\n  7087: u64 [a2] = a3\n  7089: a0 = 0\n  7091: ra = 210, jump @19\n      : @201 [@dyn 105] (gas: 7)\n  7097: u64 [s1 + 1016] = 0\n  7101: u64 [s1 + 1008] = 0\n  7105: u64 [s1 + 1000] = 0\n  7109: a0 = 0x20\n  7112: a1 = s1 + 0x3e0\n  7116: u64 [s1 + 992] = 0\n  7120: ra = 212, jump @19\n      : @202 [@dyn 106] (gas: 6)\n  7126: a0 = sp + 0xffffffffffffffe0\n  7129: a0 = a0 & 0xffffffffffffffe0\n  7132: u64 [s1 + 0x128] = a0\n  7136: sp = a0\n  7138: a1 = i32 [0x2026c]\n  7143: jump @204 if a1 >u 63\n      : @203 (gas: 2)\n  7147: u32 [0x2026c] = 0x40\n  7153: fallthrough\n      : @204 (gas: 13)\n  7154: a0 = sp + 0xffffffffffffffe0\n  7157: a2 = a0 & 0xffffffffffffffe0\n  7160: u64 [s1 + 0x120] = a2\n  7164: sp = a2\n  7166: a0 = 0x20280\n  7171: i32 a0 = a0 + 0\n  7173: i32 a2 = a2 + 0\n  7175: a1 = 0x40\n  7178: ra = 0xd6\n  7182: ecalli 6 // 'hash_keccak_256'\n  7184: a3 = u64 [s1 + 0x120]\n  7188: t0 = 0xd8\n  7192: jump @1352\n      : @205 [@dyn 107] (gas: 2)\n  7195: a3 = u64 [s1 + 0x120]\n  7199: t0 = 216, jump @1352\n      : @206 [@dyn 108] (gas: 7)\n  7205: a1 = u64 [s1 + 0x128]\n  7209: u64 [a1 + 0x18] = a3\n  7212: u64 [a1 + 0x10] = a2\n  7215: u64 [a1 + 0x8] = a4\n  7218: u64 [a1] = a0\n  7220: a0 = s1 + 0x3c0\n  7224: ra = 218, jump @21\n      : @207 [@dyn 109] (gas: 33)\n  7230: a0 = u64 [s1 + 0x3c8]\n  7234: a1 = u64 [s1 + 0x3c0]\n  7238: t0 = u64 [s1 + 0x3d8]\n  7242: a3 = u64 [s1 + 0x3d0]\n  7246: a4 = u64 [s1 + 0x70]\n  7249: a4 = a4 + a0\n  7252: a5 = u64 [s1 + 0x68]\n  7255: a5 = a5 + a1\n  7258: a1 = a5 <u a1\n  7261: a4 = a4 + a1\n  7264: a2 = a4 ^ a0\n  7267: a0 = a4 <u a0\n  7270: a0 = a1 if a2 == 0\n  7273: a1 = u64 [s1 + 0x78]\n  7276: a1 = a1 + a3\n  7279: a2 = u64 [s1 + 0x80]\n  7283: t0 = t0 + a2\n  7286: a2 = a1 <u a3\n  7289: a2 = a2 + t0\n  7292: a0 = a0 + a1\n  7295: a1 = a0 <u a1\n  7298: a1 = a1 + a2\n  7301: a2 = s1 + 0x7ff\n  7305: a2 = a2 + 0xb9\n  7309: a3 = a2 + 0x200\n  7313: u64 [a3 + 0x88] = a5\n  7317: u64 [a3 + 0x90] = a4\n  7321: u64 [a3 + 0x98] = a0\n  7325: u64 [a3 + 0xa0] = a1\n  7329: a1 = s1 + 0x7ff\n  7333: a1 = a1 + 0x341\n  7337: a0 = u64 [s1 + 0x128]\n  7341: ra = 220, jump @24\n      : @208 [@dyn 110] (gas: 3)\n  7347: a0 = s1 + 0x3a0\n  7351: a1 = 0x40\n  7354: ra = 222, jump @17\n      : @209 [@dyn 111] (gas: 6)\n  7360: a4 = s1 + 0x300\n  7364: a3 = u64 [a4 + 0xb8]\n  7368: a1 = u64 [a4 + 0xb0]\n  7372: a2 = u64 [a4 + 0xa8]\n  7376: a0 = u64 [a4 + 0xa0]\n  7380: t0 = 224, jump @1356\n      : @210 [@dyn 112] (gas: 1)\n  7386: jump @218 if a1 != 0\n      : @211 (gas: 11)\n  7390: a1 = u64 [s1 + 0x68]\n  7393: u64 [s1 + 0x380] = a1\n  7397: a1 = u64 [s1 + 0x70]\n  7400: u64 [s1 + 0x388] = a1\n  7404: a1 = u64 [s1 + 0x78]\n  7407: u64 [s1 + 0x390] = a1\n  7411: a1 = s1 + 0x380\n  7415: a2 = u64 [s1 + 0x80]\n  7419: u64 [s1 + 0x398] = a2\n  7423: u64 [s1 + 0x128] = a0\n  7427: ra = 226, jump @19\n      : @212 [@dyn 113] (gas: 6)\n  7433: a0 = u64 [s1 + 0x130]\n  7437: ra = 0xe4\n  7441: ecalli 3 // 'caller'\n  7443: a2 = u64 [s1 + 0x138]\n  7447: t0 = 0xe6\n  7451: jump @1347\n      : @213 [@dyn 114] (gas: 2)\n  7454: a2 = u64 [s1 + 0x138]\n  7458: t0 = 230, jump @1347\n      : @214 [@dyn 115] (gas: 28)\n  7464: t0 = a1 | a0\n  7467: a3 = a3 >> 0x20\n  7470: a2 = reverse a2\n  7472: a1 = a2 << 0x20\n  7475: a1 = a1 | a3\n  7478: a2 = a2 >> 0x20\n  7481: u64 [s1 + 824] = 0\n  7485: u64 [s1 + 856] = 0\n  7489: u64 [s1 + 848] = 0\n  7493: u64 [s1 + 840] = 0\n  7497: u64 [s1 + 832] = 0\n  7501: a3 = u64 [0x20008]\n  7506: a4 = u64 [0x20010]\n  7511: a5 = u64 [0x20018]\n  7516: a0 = u64 [0x20020]\n  7521: u64 [s1 + 0x378] = a3\n  7525: u64 [s1 + 0x370] = a4\n  7529: u64 [s1 + 0x368] = a5\n  7533: u64 [s1 + 0x360] = a0\n  7537: u64 [s1 + 0x330] = a2\n  7541: u64 [s1 + 0x328] = a1\n  7545: a1 = 0x20\n  7548: a2 = s1 + 0x360\n  7552: a3 = s1 + 0x340\n  7556: a4 = s1 + 0x320\n  7560: u64 [s1 + 0x320] = t0\n  7564: a0 = u64 [s1 + 0x128]\n  7568: ra = 232, jump @27\n      : @215 [@dyn 116] (gas: 3)\n  7574: a0 = s1 + 0x300\n  7578: a1 = 0x40\n  7581: ra = 234, jump @17\n      : @216 [@dyn 117] (gas: 6)\n  7587: a4 = s1 + 0x300\n  7591: a3 = u64 [a4 + 0x18]\n  7594: a1 = u64 [a4 + 0x10]\n  7597: a2 = u64 [a4 + 0x8]\n  7600: a0 = u64 [a4]\n  7602: t0 = 236, jump @1356\n      : @217 [@dyn 118] (gas: 1)\n  7608: jump @261 if a1 == 0\n      : @218 (gas: 1)\n  7612: trap\n      : @219 (gas: 6)\n  7613: a1 = 0x20280\n  7618: i32 a1 = a1 + 0\n  7620: a0 = 0x1\n  7623: a2 = 0\n  7625: ecalli 7 // 'seal_return'\n  7627: jump @221\n      : @220 (gas: 6)\n  7629: a1 = 0x20280\n  7634: i32 a1 = a1 + 0\n  7636: a0 = 0x1\n  7639: a2 = 0\n  7641: ecalli 7 // 'seal_return'\n  7643: fallthrough\n      : @221 (gas: 6)\n  7644: u64 [s1 + 368] = 0\n  7648: u64 [s1 + 360] = 0\n  7652: u64 [s1 + 352] = 0\n  7656: t0 = 0xee\n  7660: a0 = 0x4e487b7100000000\n  7670: fallthrough\n      : @222 [@dyn 119] (gas: 4)\n  7671: a1 = s1 + 0x160\n  7675: u64 [s1 + 0x178] = a0\n  7679: a0 = 0\n  7681: ra = 240, jump @19\n      : @223 [@dyn 120] (gas: 7)\n  7687: u64 [s1 + 344] = 0\n  7691: u64 [s1 + 336] = 0\n  7695: u64 [s1 + 320] = 0x41\n  7700: a0 = 0x4\n  7703: a1 = s1 + 0x140\n  7707: u64 [s1 + 328] = 0\n  7711: ra = 242, jump @19\n      : @224 [@dyn 121] (gas: 2)\n  7717: a1 = i32 [0x2026c]\n  7722: jump @226 if a1 >u 63\n      : @225 (gas: 3)\n  7726: u32 [0x2026c] = 0x40\n  7732: a1 = 0x20280\n  7737: jump @260\n      : @226 (gas: 2)\n  7740: a1 = 0x20280\n  7745: jump @260\n      : @227 (gas: 6)\n  7748: u64 [s1 + 432] = 0\n  7752: u64 [s1 + 424] = 0\n  7756: u64 [s1 + 416] = 0\n  7760: t0 = 0xf4\n  7764: a0 = 0x4e487b7100000000\n  7774: fallthrough\n      : @228 [@dyn 122] (gas: 4)\n  7775: a1 = s1 + 0x1a0\n  7779: u64 [s1 + 0x1b8] = a0\n  7783: a0 = 0\n  7785: ra = 246, jump @19\n      : @229 [@dyn 123] (gas: 7)\n  7791: u64 [s1 + 408] = 0\n  7795: u64 [s1 + 400] = 0\n  7799: u64 [s1 + 384] = 0x22\n  7804: a0 = 0x4\n  7807: a1 = s1 + 0x180\n  7811: u64 [s1 + 392] = 0\n  7815: ra = 248, jump @19\n      : @230 [@dyn 124] (gas: 2)\n  7821: a1 = i32 [0x2026c]\n  7826: jump @232 if a1 >u 63\n      : @231 (gas: 3)\n  7830: u32 [0x2026c] = 0x40\n  7836: a1 = 0x20280\n  7841: jump @260\n      : @232 (gas: 2)\n  7844: a1 = 0x20280\n  7849: jump @260\n      : @233 (gas: 6)\n  7852: u64 [s1 + 528] = 0\n  7856: u64 [s1 + 520] = 0\n  7860: u64 [s1 + 512] = 0\n  7864: t0 = 0xfa\n  7868: a0 = 0x4e487b7100000000\n  7878: fallthrough\n      : @234 [@dyn 125] (gas: 4)\n  7879: a1 = s1 + 0x200\n  7883: u64 [s1 + 0x218] = a0\n  7887: a0 = 0\n  7889: ra = 252, jump @19\n      : @235 [@dyn 126] (gas: 7)\n  7895: u64 [s1 + 504] = 0\n  7899: u64 [s1 + 496] = 0\n  7903: u64 [s1 + 480] = 0x41\n  7908: a0 = 0x4\n  7911: a1 = s1 + 0x1e0\n  7915: u64 [s1 + 488] = 0\n  7919: ra = 254, jump @19\n      : @236 [@dyn 127] (gas: 2)\n  7925: a1 = i32 [0x2026c]\n  7930: jump @238 if a1 >u 63\n      : @237 (gas: 3)\n  7934: u32 [0x2026c] = 0x40\n  7940: a1 = 0x20280\n  7945: jump @260\n      : @238 (gas: 2)\n  7948: a1 = 0x20280\n  7953: jump @260\n      : @239 (gas: 6)\n  7956: u64 [s1 + 592] = 0\n  7960: u64 [s1 + 584] = 0\n  7964: u64 [s1 + 576] = 0\n  7968: t0 = 0x100\n  7972: a0 = 0x4e487b7100000000\n  7982: fallthrough\n      : @240 [@dyn 128] (gas: 4)\n  7983: a1 = s1 + 0x240\n  7987: u64 [s1 + 0x258] = a0\n  7991: a0 = 0\n  7993: ra = 258, jump @19\n      : @241 [@dyn 129] (gas: 7)\n  7999: u64 [s1 + 568] = 0\n  8003: u64 [s1 + 560] = 0\n  8007: u64 [s1 + 544] = 0x22\n  8012: a0 = 0x4\n  8015: a1 = s1 + 0x220\n  8019: u64 [s1 + 552] = 0\n  8023: ra = 260, jump @19\n      : @242 [@dyn 130] (gas: 2)\n  8029: a1 = i32 [0x2026c]\n  8034: jump @244 if a1 >u 63\n      : @243 (gas: 3)\n  8038: u32 [0x2026c] = 0x40\n  8044: a1 = 0x20280\n  8049: jump @260\n      : @244 (gas: 2)\n  8052: a1 = 0x20280\n  8057: jump @260\n      : @245 (gas: 8)\n  8060: u64 [s1 + 688] = 0\n  8064: u64 [s1 + 680] = 0\n  8068: u64 [s1 + 672] = 0\n  8072: a0 = 0xec442f0500000000\n  8082: a1 = s1 + 0x2a0\n  8086: u64 [s1 + 0x2b8] = a0\n  8090: a0 = 0\n  8092: ra = 262, jump @19\n      : @246 [@dyn 131] (gas: 7)\n  8098: u64 [s1 + 664] = 0\n  8102: u64 [s1 + 656] = 0\n  8106: u64 [s1 + 648] = 0\n  8110: a0 = 0x4\n  8113: a1 = s1 + 0x280\n  8117: u64 [s1 + 640] = 0\n  8121: ra = 264, jump @19\n      : @247 [@dyn 132] (gas: 2)\n  8127: a1 = i32 [0x2026c]\n  8132: jump @249 if a1 >u 63\n      : @248 (gas: 3)\n  8136: u32 [0x2026c] = 0x40\n  8142: a1 = 0x20280\n  8147: jump @260\n      : @249 (gas: 2)\n  8150: a1 = 0x20280\n  8155: jump @260\n      : @250 (gas: 8)\n  8158: u64 [s1 + 1104] = 0\n  8162: u64 [s1 + 1096] = 0\n  8166: u64 [s1 + 1088] = 0\n  8170: a0 = 0xd93c066500000000\n  8180: a1 = s1 + 0x440\n  8184: u64 [s1 + 0x458] = a0\n  8188: a0 = 0\n  8190: ra = 266, jump @19\n      : @251 [@dyn 133] (gas: 2)\n  8196: a1 = i32 [0x2026c]\n  8201: jump @253 if a1 >u 31\n      : @252 (gas: 2)\n  8205: u32 [0x2026c] = 0x20\n  8211: fallthrough\n      : @253 (gas: 6)\n  8212: a1 = 0x20280\n  8217: i32 a1 = a1 + 0\n  8219: a0 = 0x1\n  8222: a2 = 0x4\n  8225: ecalli 7 // 'seal_return'\n  8227: fallthrough\n      : @254 (gas: 6)\n  8228: u64 [s1 + 752] = 0\n  8232: u64 [s1 + 744] = 0\n  8236: u64 [s1 + 736] = 0\n  8240: t0 = 0x10c\n  8244: a0 = 0x4e487b7100000000\n  8254: fallthrough\n      : @255 [@dyn 134] (gas: 4)\n  8255: a1 = s1 + 0x2e0\n  8259: u64 [s1 + 0x2f8] = a0\n  8263: a0 = 0\n  8265: ra = 270, jump @19\n      : @256 [@dyn 135] (gas: 7)\n  8271: u64 [s1 + 728] = 0\n  8275: u64 [s1 + 720] = 0\n  8279: u64 [s1 + 704] = 0x11\n  8284: a0 = 0x4\n  8287: a1 = s1 + 0x2c0\n  8291: u64 [s1 + 712] = 0\n  8295: ra = 272, jump @19\n      : @257 [@dyn 136] (gas: 2)\n  8301: a1 = i32 [0x2026c]\n  8306: jump @259 if a1 >u 63\n      : @258 (gas: 3)\n  8310: u32 [0x2026c] = 0x40\n  8316: a1 = 0x20280\n  8321: jump @260\n      : @259 (gas: 2)\n  8323: a1 = 0x20280\n  8328: fallthrough\n      : @260 (gas: 7)\n  8329: i32 a1 = a1 + 0\n  8331: a0 = 0x1\n  8334: a2 = 0x24\n  8337: ecalli 7 // 'seal_return'\n  8339: u64 [s1 + 0x138] = a0\n  8343: ra = 0x112\n  8347: jump @33\n      : @261 (gas: 2)\n  8350: u64 [s1 + 0x138] = a0\n  8354: ra = 274, jump @33\n      : @262 [@dyn 137] (gas: 5)\n  8360: i32 a0 = a0 + 0\n  8362: a1 = 0\n  8364: a2 = 0\n  8366: ecalli 0 // 'call_data_copy'\n  8367: jump @15\n      : @263 (gas: 3)\n  8370: a0 = u64 [s1 + 0x138]\n  8374: a1 = 0\n  8376: ra = 276, jump @33\n      : @264 [@dyn 138] (gas: 5)\n  8382: i32 a1 = a0 + 0\n  8384: a0 = 0\n  8386: a2 = 0\n  8388: ecalli 7 // 'seal_return'\n  8390: jump @221\n      : @265 [@dyn 139] (gas: 4)\n  8393: a0 = 0x20268\n  8398: u64 [s1 + 0xb8] = a0\n  8402: a0 = i32 [0x20268]\n  8407: jump @267 if a0 >=u 4\n      : @266 (gas: 1)\n  8411: jump @845\n      : @267 (gas: 6)\n  8414: a0 = s1 + 0x1000\n  8418: i32 a0 = a0 + 0x580\n  8422: a1 = 0\n  8424: ra = 0x118\n  8428: ecalli 1 // 'call_data_load'\n  8430: fallthrough\n      : @268 [@dyn 140] (gas: 3)\n  8431: a2 = s1 + 0x1038\n  8435: a0 = i32 [a2 + 0x564]\n  8439: jump @270 if a0 != 2220280665\n      : @269 (gas: 1)\n  8446: jump @597\n      : @270 (gas: 1)\n  8449: jump @272 if a0 != 2446411860\n      : @271 (gas: 1)\n  8456: jump @530\n      : @272 (gas: 1)\n  8459: jump @310 if a0 == 2514000705\n      : @273 (gas: 1)\n  8467: jump @275 if a0 != 2719481311\n      : @274 (gas: 1)\n  8474: jump @466\n      : @275 (gas: 1)\n  8477: jump @342 if a0 == 2835717307\n      : @276 (gas: 1)\n  8485: jump @278 if a0 != 3577287571\n      : @277 (gas: 1)\n  8492: jump @570\n      : @278 (gas: 1)\n  8495: jump @380 if a0 == 3714247998\n      : @279 (gas: 1)\n  8503: jump @357 if a0 == 3862606313\n      : @280 (gas: 1)\n  8511: jump @282 if a0 != 117300739\n      : @281 (gas: 1)\n  8518: jump @616\n      : @282 (gas: 1)\n  8521: jump @408 if a0 == 122970482\n      : @283 (gas: 1)\n  8529: jump @285 if a0 != 157198259\n      : @284 (gas: 1)\n  8536: jump @641\n      : @285 (gas: 1)\n  8539: jump @287 if a0 != 404098525\n      : @286 (gas: 1)\n  8546: jump @497\n      : @287 (gas: 1)\n  8549: jump @289 if a0 != 599290589\n      : @288 (gas: 1)\n  8556: jump @580\n      : @289 (gas: 1)\n  8559: jump @291 if a0 != 613063843\n      : @290 (gas: 1)\n  8566: jump @557\n      : @291 (gas: 1)\n  8569: jump @368 if a0 == 826074471\n      : @292 (gas: 1)\n  8577: jump @294 if a0 != 1061922874\n      : @293 (gas: 1)\n  8584: jump @477\n      : @294 (gas: 1)\n  8587: jump @419 if a0 == 1086394137\n      : @295 (gas: 2)\n  8595: a2 = s1 + 0x1838\n  8599: jump @297 if a0 == 1553423035\n      : @296 (gas: 1)\n  8606: jump @508\n      : @297 (gas: 10)\n  8609: u64 [a2 + 320] = 0\n  8613: u64 [a2 + 312] = 0\n  8617: u64 [a2 + 304] = 0\n  8621: u64 [a2 + 296] = 0\n  8625: a0 = s1 + 0x2000\n  8629: i32 a0 = a0 + 0xfffffffffffff960\n  8633: ra = 0x11a\n  8637: ecalli 10 // 'value_transferred'\n  8639: t0 = 0x11c\n  8643: jump @1399\n      : @298 [@dyn 141] (gas: 1)\n  8646: t0 = 284, jump @1399\n      : @299 [@dyn 142] (gas: 1)\n  8652: t0 = 286, jump @1415\n      : @300 [@dyn 143] (gas: 1)\n  8658: jump @302 if a0 == 0\n      : @301 (gas: 1)\n  8661: jump @699\n      : @302 (gas: 3)\n  8664: a0 = u64 [s1 + 0xb8]\n  8668: a0 = i32 [a0]\n  8670: jump @304 if a0 >u 3\n      : @303 (gas: 1)\n  8674: jump @700\n      : @304 (gas: 9)\n  8677: a1 = s1 + 0x1838\n  8681: u64 [a1 + 352] = 0\n  8685: u64 [a1 + 344] = 0\n  8689: u64 [a1 + 336] = 0\n  8693: u64 [a1 + 328] = 0x5\n  8698: a0 = s1 + 0x7ff\n  8702: a0 = a0 + 0x4e1\n  8706: a1 = s1 + 0x1980\n  8710: ra = 288, jump @21\n      : @305 [@dyn 144] (gas: 8)\n  8716: a0 = s1 + 0x7ff\n  8720: a0 = a0 + 0x39\n  8723: a0 = u64 [a0 + 0x4a8]\n  8727: u64 [s1 + 0xb8] = a0\n  8731: a0 = s1 + 0x7ff\n  8735: a0 = a0 + 0x4c1\n  8739: a1 = 0x40\n  8742: ra = 290, jump @17\n      : @306 [@dyn 145] (gas: 8)\n  8748: a3 = s1 + 0x7ff\n  8752: a3 = a3 + 0x39\n  8755: a5 = a3 + 0x400\n  8759: a4 = u64 [a5 + 0xa0]\n  8763: a1 = u64 [a5 + 0x98]\n  8767: a2 = u64 [a5 + 0x90]\n  8771: a0 = u64 [a5 + 0x88]\n  8775: t0 = 292, jump @1354\n      : @307 [@dyn 146] (gas: 1)\n  8781: jump @309 if a1 == 0\n      : @308 (gas: 1)\n  8784: jump @673\n      : @309 (gas: 11)\n  8787: a1 = u8 [s1 + 0xb8]\n  8791: a1 = a1 >u 0\n  8793: u64 [a3 + 1152] = 0\n  8797: u64 [a3 + 1144] = 0\n  8801: u64 [a3 + 0x468] = a1\n  8805: a1 = s1 + 0x7ff\n  8809: a1 = a1 + 0x4a1\n  8813: u64 [a3 + 1136] = 0\n  8817: u64 [s1 + 0xb8] = a0\n  8821: ra = 0x2f8\n  8825: jump @19\n      : @310 (gas: 11)\n  8828: a0 = s1 + 0x1838\n  8832: u64 [a0 + 704] = 0\n  8836: u64 [a0 + 696] = 0\n  8840: u64 [a0 + 688] = 0\n  8844: u64 [a0 + 680] = 0\n  8848: a0 = s1 + 0x2000\n  8852: i32 a0 = a0 + 0xfffffffffffffae0\n  8856: ra = 0x126\n  8860: ecalli 10 // 'value_transferred'\n  8862: t0 = 0x128\n  8866: jump @1398\n      : @311 [@dyn 147] (gas: 1)\n  8869: t0 = 296, jump @1398\n      : @312 [@dyn 148] (gas: 1)\n  8875: t0 = 298, jump @1381\n      : @313 [@dyn 149] (gas: 1)\n  8881: jump @315 if a0 == 0\n      : @314 (gas: 1)\n  8884: jump @701\n      : @315 (gas: 3)\n  8887: a0 = u64 [s1 + 0xb8]\n  8891: a0 = i32 [a0]\n  8893: jump @317 if a0 >u 3\n      : @316 (gas: 1)\n  8897: jump @702\n      : @317 (gas: 3)\n  8900: a0 = s1 + 0x11c0\n  8904: a1 = 0x40\n  8907: ra = 300, jump @17\n      : @318 [@dyn 150] (gas: 18)\n  8913: a1 = s1 + 0x1038\n  8917: a2 = a1 + 0x100\n  8921: a0 = u64 [a2 + 0xa0]\n  8925: u64 [s1 + 0x18] = a0\n  8928: a0 = u64 [a2 + 0x98]\n  8932: u64 [s1 + 0x28] = a0\n  8935: a0 = u64 [a2 + 0x90]\n  8939: u64 [s1 + 0x20] = a0\n  8942: a0 = u64 [a2 + 0x88]\n  8946: u64 [s1 + 0x30] = a0\n  8949: a1 = s1 + 0x1838\n  8953: u64 [a1 + 736] = 0\n  8957: u64 [a1 + 728] = 0\n  8961: u64 [a1 + 720] = 0\n  8965: u64 [a1 + 712] = 0x4\n  8970: a0 = s1 + 0x11a0\n  8974: a1 = s1 + 0x1b00\n  8978: ra = 302, jump @21\n      : @319 [@dyn 151] (gas: 35)\n  8984: a0 = s1 + 0x1038\n  8988: t2 = u64 [a0 + 0x178]\n  8992: ra = u64 [a0 + 0x170]\n  8996: t1 = u64 [a0 + 0x180]\n  9000: a4 = u64 [a0 + 0x168]\n  9004: a0 = t2 << 0x3f\n  9007: a1 = ra >> 0x1\n  9010: a0 = a0 | a1\n  9013: a1 = t1 << 0x3f\n  9016: a2 = t2 >> 0x1\n  9019: a1 = a1 | a2\n  9022: a2 = ra << 0x3f\n  9025: a3 = a4 >> 0x1\n  9028: a5 = a3 | a2\n  9031: a2 = t1 >> 0x1\n  9034: u64 [s1 + 0xb0] = a4\n  9038: a4 = a4 & 0x1\n  9041: a3 = -a4\n  9043: a1 = a1 & a3\n  9046: t0 = a3 & a0\n  9049: a2 = a2 & a3\n  9052: a0 = a5 & 0x7f\n  9055: u64 [s1 + 0xa8] = a0\n  9059: a5 = a0 if a4 == 0\n  9062: u64 [s1 + 0x70] = a5\n  9065: a0 = a5 <u 0x20\n  9068: u64 [s1 + 0x60] = t0\n  9071: a0 = 0 if t0 != 0\n  9073: u64 [s1 + 0x68] = a1\n  9076: u64 [s1 + 0x58] = a2\n  9079: a1 = a1 | a2\n  9082: a0 = 0 if a1 != 0\n  9084: u64 [s1 + 0xb8] = a4\n  9088: a1 = a4 <u 0x1\n  9091: jump @321 if a1 == a0\n      : @320 (gas: 1)\n  9094: jump @703\n      : @321 (gas: 12)\n  9097: a2 = u64 [s1 + 0x28]\n  9100: a3 = u64 [s1 + 0x30]\n  9103: a0 = a3 | a2\n  9106: a1 = u64 [s1 + 0x20]\n  9109: a4 = u64 [s1 + 0x18]\n  9112: a1 = a1 | a4\n  9115: a0 = a0 | a1\n  9118: a0 = a0 >> 0x20\n  9121: a1 = a1 | a2\n  9124: a1 = a1 << 0x20\n  9127: a1 = a1 | a0\n  9130: jump @323 if a1 == 0\n      : @322 (gas: 1)\n  9133: jump @673\n      : @323 (gas: 16)\n  9136: a0 = a3\n  9138: u64 [s1 + 0x90] = ra\n  9142: u64 [s1 + 0x98] = t2\n  9146: u64 [s1 + 0xa0] = t1\n  9150: a1 = u64 [s1 + 0x70]\n  9153: a3 = s1 + 0x1038\n  9157: a4 = a3 + 0x100\n  9161: u64 [a4 + 0x48] = a1\n  9164: a1 = u64 [s1 + 0x60]\n  9167: u64 [a4 + 0x50] = a1\n  9170: a1 = u64 [s1 + 0x68]\n  9173: u64 [a4 + 0x58] = a1\n  9176: a1 = s1 + 0x1180\n  9180: a2 = u64 [s1 + 0x58]\n  9183: u64 [a4 + 0x60] = a2\n  9186: ra = 304, jump @19\n      : @324 [@dyn 152] (gas: 2)\n  9192: a0 = u64 [s1 + 0xb8]\n  9196: jump @326 if a0 == 0\n      : @325 (gas: 1)\n  9199: jump @674\n      : @326 (gas: 1)\n  9202: t0 = 306, jump @1391\n      : @327 [@dyn 153] (gas: 1)\n  9208: jump @329 if a1 != 0\n      : @328 (gas: 1)\n  9211: jump @673\n      : @329 (gas: 13)\n  9214: a1 = u64 [s1 + 0xb0]\n  9218: a1 = a1 & 0xffffffffffffff00\n  9222: i32 a0 = a3 + 0x20\n  9225: a2 = s1 + 0x1038\n  9229: a3 = u64 [s1 + 0x90]\n  9233: u64 [a2 + 0xd0] = a3\n  9237: u64 [a2 + 0xc8] = a1\n  9241: a1 = u64 [s1 + 0x98]\n  9245: u64 [a2 + 0xd8] = a1\n  9249: a1 = s1 + 0x1100\n  9253: a3 = u64 [s1 + 0xa0]\n  9257: u64 [a2 + 0xe0] = a3\n  9261: ra = 308, jump @19\n      : @330 [@dyn 154] (gas: 9)\n  9267: t2 = 0\n  9269: t1 = 0\n  9271: u64 [s1 + 176] = 0\n  9275: a0 = u64 [s1 + 0xa8]\n  9279: a0 = a0 >u 0\n  9281: a0 = a0 << 0x5\n  9284: u64 [s1 + 0xb8] = a0\n  9288: t0 = 0x136\n  9292: jump @1390\n      : @331 (gas: 1)\n  9295: t0 = 310, jump @1390\n      : @332 [@dyn 155] (gas: 28)\n  9301: t0 = u64 [s1 + 0x20]\n  9304: a3 = a2 + t0\n  9307: ra = a3 + a0\n  9310: a3 = ra ^ a2\n  9313: a4 = ra <u a2\n  9316: a4 = a0 if a3 == 0\n  9319: a0 = a2 <u t2\n  9322: a0 = a1 if a1 == 0\n  9325: a0 = a0 + t1\n  9328: a1 = a0 <u t1\n  9331: a2 = u64 [s1 + 0x28]\n  9334: a2 = a2 + a0\n  9337: a4 = a4 + a2\n  9340: a0 = a2 <u a0\n  9343: a2 = a4 <u a2\n  9346: t1 = u64 [s1 + 0x18]\n  9349: a3 = u64 [s1 + 0xb0]\n  9353: a3 = a3 + t1\n  9356: a1 = a1 + a3\n  9359: a0 = a0 + a1\n  9362: a5 = a0 + a2\n  9365: a0 = a5 >u 0\n  9367: a1 = a4 >u 0\n  9369: a1 = a0 if a5 != 0\n  9372: a0 = a4 | a5\n  9375: a2 = ra >u 0\n  9377: a2 = a1 if a0 != 0\n  9380: jump @334 if a2 == 0\n      : @333 (gas: 1)\n  9383: jump @785\n      : @334 (gas: 6)\n  9386: a0 = u64 [s1 + 0x30]\n  9389: a1 = u64 [s1 + 0xb8]\n  9393: a0 = a1 <u a0\n  9396: a1 = ra ^ t0\n  9399: a2 = ra <u t0\n  9402: t0 = 312, jump @1387\n      : @335 [@dyn 156] (gas: 1)\n  9408: jump @337 if a3 == 0\n      : @336 (gas: 1)\n  9411: jump @785\n      : @337 (gas: 13)\n  9414: a2 = s1 + 0x1038\n  9418: a0 = u64 [s1 + 0xb8]\n  9422: u64 [a2 + 0xa8] = a0\n  9426: a3 = ra\n  9428: u64 [a2 + 0xb0] = a3\n  9432: u64 [a2 + 0xb8] = a4\n  9436: a0 = 0x40\n  9439: a1 = s1 + 0x10e0\n  9443: u64 [a2 + 0xc0] = a5\n  9447: u64 [s1 + 0xa8] = a3\n  9451: u64 [s1 + 0xa0] = a4\n  9455: u64 [s1 + 0xb0] = a5\n  9459: ra = 314, jump @19\n      : @338 [@dyn 157] (gas: 22)\n  9465: a1 = s1 + 0x1038\n  9469: a0 = u64 [s1 + 0x18]\n  9472: u64 [a1 + 0x60] = a0\n  9475: a0 = u64 [s1 + 0x28]\n  9478: u64 [a1 + 0x58] = a0\n  9481: a0 = u64 [s1 + 0x20]\n  9484: u64 [a1 + 0x50] = a0\n  9487: a0 = u64 [s1 + 0x30]\n  9490: u64 [a1 + 0x48] = a0\n  9493: a0 = u64 [s1 + 0xb0]\n  9497: u64 [a1 + 0x80] = a0\n  9501: a0 = u64 [s1 + 0xa0]\n  9505: u64 [a1 + 0x78] = a0\n  9508: a0 = u64 [s1 + 0xa8]\n  9512: u64 [a1 + 0x70] = a0\n  9515: a4 = a1\n  9517: a0 = s1 + 0x10c0\n  9521: a1 = s1 + 0x10a0\n  9525: a2 = s1 + 0x1080\n  9529: a3 = u64 [s1 + 0xb8]\n  9533: u64 [a4 + 0x68] = a3\n  9536: ra = 316, jump @1017\n      : @339 [@dyn 158] (gas: 12)\n  9542: a3 = u64 [s1 + 0xa0]\n  9546: a4 = u64 [s1 + 0xa8]\n  9550: t0 = u64 [s1 + 0xb8]\n  9554: a0 = t0 | a3\n  9557: a1 = u64 [s1 + 0xb0]\n  9561: a1 = a1 | a4\n  9564: a0 = a0 | a1\n  9567: a0 = a0 >> 0x20\n  9570: a1 = a1 | a3\n  9573: a1 = a1 << 0x20\n  9576: a0 = a0 | a1\n  9579: jump @341 if a0 == 0\n      : @340 (gas: 1)\n  9582: jump @673\n      : @341 (gas: 8)\n  9585: a1 = s1 + 0x1038\n  9589: a0 = u64 [a1 + 0x90]\n  9593: a2 = u64 [a1 + 0xa0]\n  9597: u64 [s1 + 0x98] = a2\n  9601: a2 = a3\n  9603: t1 = u64 [a1 + 0x88]\n  9607: a3 = u64 [a1 + 0x98]\n  9611: jump @638\n      : @342 (gas: 11)\n  9614: a0 = s1 + 0x1838\n  9618: u64 [a0 + 800] = 0\n  9622: u64 [a0 + 792] = 0\n  9626: u64 [a0 + 784] = 0\n  9630: u64 [a0 + 776] = 0\n  9634: a0 = s1 + 0x2000\n  9638: i32 a0 = a0 + 0xfffffffffffffb40\n  9642: ra = 0x13e\n  9646: ecalli 10 // 'value_transferred'\n  9648: t0 = 0x140\n  9652: jump @1384\n      : @343 [@dyn 159] (gas: 1)\n  9655: t0 = 320, jump @1384\n      : @344 [@dyn 160] (gas: 8)\n  9661: a0 = u64 [a4 + 0x18]\n  9664: a1 = u64 [a4 + 0x20]\n  9667: a2 = u64 [a4 + 0x10]\n  9670: a3 = u64 [a4 + 0x8]\n  9673: a1 = a1 | a2\n  9676: a0 = a0 | a3\n  9679: a0 = a0 | a1\n  9682: jump @346 if a0 == 0\n      : @345 (gas: 1)\n  9685: jump @708\n      : @346 (gas: 4)\n  9688: a0 = u64 [s1 + 0xb8]\n  9692: a0 = i32 [a0]\n  9694: a1 = 0x43\n  9697: jump @348 if a1 <u a0\n      : @347 (gas: 1)\n  9700: jump @709\n      : @348 (gas: 4)\n  9703: a0 = s1 + 0x12c0\n  9707: ra = 0x142\n  9711: t0 = 0x416\n  9715: jump @1417\n      : @349 [@dyn 161] (gas: 31)\n  9718: a1 = s1 + 0x1038\n  9722: a2 = a1 + 0x200\n  9726: a0 = u64 [a2 + 0x88]\n  9730: u64 [s1 + 0xb8] = a0\n  9734: a0 = u64 [a2 + 0x90]\n  9738: u64 [s1 + 0xb0] = a0\n  9742: a0 = u64 [a2 + 0x98]\n  9746: u64 [s1 + 0xa8] = a0\n  9750: a0 = u64 [a2 + 0xa0]\n  9754: u64 [s1 + 0xa0] = a0\n  9758: a0 = s1 + 0x2000\n  9762: i32 a0 = a0 + 0xfffffffffffffb60\n  9766: a1 = 0x24\n  9769: ecalli 1 // 'call_data_load'\n  9771: a0 = s1 + 0x1838\n  9775: a2 = a0 + 0x300\n  9779: a1 = u64 [a2 + 0x28]\n  9782: u64 [s1 + 0x98] = a1\n  9786: a1 = u64 [a2 + 0x30]\n  9789: u64 [s1 + 0x90] = a1\n  9793: a1 = u64 [a2 + 0x38]\n  9796: u64 [s1 + 0x88] = a1\n  9800: a0 = u64 [a2 + 0x40]\n  9803: u64 [s1 + 0x80] = a0\n  9807: a0 = 0x30280\n  9812: u64 [s1 + 0x78] = a0\n  9815: i32 a0 = a0 + 0\n  9817: ra = 0x144\n  9821: ecalli 3 // 'caller'\n  9823: t0 = 0x146\n  9827: jump @1375\n      : @350 [@dyn 162] (gas: 1)\n  9830: t0 = 326, jump @1375\n      : @351 [@dyn 163] (gas: 26)\n  9836: a3 = s1 + 0x1038\n  9840: a4 = u64 [s1 + 0x80]\n  9844: a5 = a3 + 0x200\n  9848: u64 [a5 + 0x40] = a4\n  9851: a4 = u64 [s1 + 0x88]\n  9855: u64 [a5 + 0x38] = a4\n  9858: a4 = u64 [s1 + 0x90]\n  9862: u64 [a5 + 0x30] = a4\n  9865: a4 = u64 [s1 + 0x98]\n  9869: u64 [a5 + 0x28] = a4\n  9872: a4 = u64 [s1 + 0xa0]\n  9876: u64 [a5 + 0x60] = a4\n  9879: a4 = u64 [s1 + 0xa8]\n  9883: u64 [a5 + 0x58] = a4\n  9886: a4 = u64 [s1 + 0xb0]\n  9890: u64 [a5 + 0x50] = a4\n  9893: a4 = u64 [s1 + 0xb8]\n  9897: u64 [a5 + 0x48] = a4\n  9900: u64 [a5 + 0x78] = a2\n  9903: u64 [a5 + 0x70] = a0\n  9906: u64 [a5 + 0x68] = a1\n  9909: a0 = s1 + 0x12a0\n  9913: a1 = s1 + 0x1280\n  9917: a2 = s1 + 0x1260\n  9921: u64 [a3 + 640] = 0\n  9925: ra = 328, jump @1101\n      : @352 [@dyn 164] (gas: 3)\n  9931: a0 = s1 + 0x1240\n  9935: a1 = 0x40\n  9938: ra = 330, jump @17\n      : @353 [@dyn 165] (gas: 7)\n  9944: a3 = s1 + 0x1038\n  9948: a5 = a3 + 0x200\n  9952: a4 = u64 [a5 + 0x20]\n  9955: a1 = u64 [a5 + 0x18]\n  9958: a2 = u64 [a5 + 0x10]\n  9961: a0 = u64 [a5 + 0x8]\n  9964: t0 = 332, jump @1354\n      : @354 [@dyn 166] (gas: 1)\n  9970: jump @356 if a1 == 0\n      : @355 (gas: 1)\n  9973: jump @673\n      : @356 (gas: 8)\n  9976: u64 [a3 + 512] = 0\n  9980: u64 [a3 + 504] = 0\n  9984: u64 [a3 + 488] = 0x1\n  9989: a1 = s1 + 0x1220\n  9993: u64 [a3 + 496] = 0\n  9997: u64 [s1 + 0xb8] = a0\n 10001: ra = 0x2f8\n 10005: jump @19\n      : @357 (gas: 11)\n 10008: a0 = s1 + 0x1838\n 10012: u64 [a0 + 992] = 0\n 10016: u64 [a0 + 984] = 0\n 10020: u64 [a0 + 976] = 0\n 10024: u64 [a0 + 968] = 0\n 10028: a0 = s1 + 0x2000\n 10032: i32 a0 = a0 + 0xfffffffffffffc00\n 10036: ra = 0x14e\n 10040: ecalli 10 // 'value_transferred'\n 10042: t0 = 0x150\n 10046: jump @1384\n      : @358 [@dyn 167] (gas: 1)\n 10049: t0 = 336, jump @1384\n      : @359 [@dyn 168] (gas: 8)\n 10055: a0 = u64 [a4 + 0xd8]\n 10059: a1 = u64 [a4 + 0xe0]\n 10063: a2 = u64 [a4 + 0xd0]\n 10067: a3 = u64 [a4 + 0xc8]\n 10071: a1 = a1 | a2\n 10074: a0 = a0 | a3\n 10077: a0 = a0 | a1\n 10080: jump @361 if a0 == 0\n      : @360 (gas: 1)\n 10083: jump @710\n      : @361 (gas: 3)\n 10086: a0 = u64 [s1 + 0xb8]\n 10090: a0 = i32 [a0]\n 10092: jump @363 if a0 >u 3\n      : @362 (gas: 1)\n 10096: jump @711\n      : @363 (gas: 3)\n 10099: a0 = s1 + 0x1540\n 10103: a1 = 0x40\n 10106: ra = 338, jump @17\n      : @364 [@dyn 169] (gas: 7)\n 10112: a3 = s1 + 0x1038\n 10116: a5 = a3 + 0x500\n 10120: a4 = u64 [a5 + 0x20]\n 10123: a1 = u64 [a5 + 0x18]\n 10126: a2 = u64 [a5 + 0x10]\n 10129: a0 = u64 [a5 + 0x8]\n 10132: t0 = 340, jump @1354\n      : @365 [@dyn 170] (gas: 1)\n 10138: jump @367 if a1 == 0\n      : @366 (gas: 1)\n 10141: jump @673\n      : @367 (gas: 13)\n 10144: a1 = u64 [0x20028]\n 10149: u64 [a3 + 0x500] = a1\n 10153: a4 = u64 [0x20030]\n 10158: a1 = u64 [0x20038]\n 10163: a2 = u64 [0x20040]\n 10168: a5 = a3 + 0x400\n 10172: u64 [a5 + 0xf8] = a4\n 10176: u64 [a5 + 0xf0] = a1\n 10180: a1 = s1 + 0x1520\n 10184: u64 [a5 + 0xe8] = a2\n 10188: u64 [s1 + 0xb8] = a0\n 10192: ra = 0x2f8\n 10196: jump @19\n      : @368 (gas: 10)\n 10199: u64 [a2 + 1920] = 0\n 10203: u64 [a2 + 1912] = 0\n 10207: u64 [a2 + 1904] = 0\n 10211: u64 [a2 + 1896] = 0\n 10215: a0 = s1 + 0x1000\n 10219: i32 a0 = a0 + 0x7a0\n 10223: ra = 0x156\n 10227: ecalli 10 // 'value_transferred'\n 10229: t0 = 0x158\n 10233: jump @1385\n      : @369 [@dyn 171] (gas: 1)\n 10236: t0 = 344, jump @1385\n      : @370 [@dyn 172] (gas: 1)\n 10242: t0 = 346, jump @1382\n      : @371 [@dyn 173] (gas: 1)\n 10248: jump @373 if a0 == 0\n      : @372 (gas: 1)\n 10251: jump @712\n      : @373 (gas: 3)\n 10254: a0 = u64 [s1 + 0xb8]\n 10258: a0 = i32 [a0]\n 10260: jump @375 if a0 >u 3\n      : @374 (gas: 1)\n 10264: jump @713\n      : @375 (gas: 4)\n 10267: a0 = s1 + 0x7ff\n 10271: a0 = a0 + 0x41\n 10274: a1 = 0x40\n 10277: ra = 348, jump @17\n      : @376 [@dyn 174] (gas: 7)\n 10283: a3 = s1 + 0x7ff\n 10287: a3 = a3 + 0x39\n 10290: a4 = u64 [a3 + 0x20]\n 10293: a1 = u64 [a3 + 0x18]\n 10296: a2 = u64 [a3 + 0x10]\n 10299: a0 = u64 [a3 + 0x8]\n 10302: t0 = 350, jump @1354\n      : @377 [@dyn 175] (gas: 1)\n 10308: jump @379 if a1 == 0\n      : @378 (gas: 1)\n 10311: jump @673\n      : @379 (gas: 11)\n 10314: u64 [a3 + 0] = 0\n 10316: u64 [a3 + 4294967288] = 0\n 10319: a1 = s1 + 0x1000\n 10323: u64 [a1 + 4294965288] = 0\n 10327: a1 = s1 + 0x7ff\n 10331: a1 = a1 + 0x21\n 10334: a3 = s1 + 0x1000\n 10338: u64 [a3 + 4294965280] = 0x12\n 10343: u64 [s1 + 0xb8] = a0\n 10347: ra = 0x2f8\n 10351: jump @19\n      : @380 (gas: 11)\n 10354: a0 = s1 + 0x1838\n 10358: u64 [a0 + 960] = 0\n 10362: u64 [a0 + 952] = 0\n 10366: u64 [a0 + 944] = 0\n 10370: u64 [a0 + 936] = 0\n 10374: a0 = s1 + 0x2000\n 10378: i32 a0 = a0 + 0xfffffffffffffbe0\n 10382: ra = 0x160\n 10386: ecalli 10 // 'value_transferred'\n 10388: t0 = 0x162\n 10392: jump @1384\n      : @381 [@dyn 176] (gas: 1)\n 10395: t0 = 354, jump @1384\n      : @382 [@dyn 177] (gas: 1)\n 10401: t0 = 356, jump @1381\n      : @383 [@dyn 178] (gas: 1)\n 10407: jump @385 if a0 == 0\n      : @384 (gas: 1)\n 10410: jump @714\n      : @385 (gas: 4)\n 10413: a0 = u64 [s1 + 0xb8]\n 10417: a0 = i32 [a0]\n 10419: a1 = 0x43\n 10422: jump @387 if a1 <u a0\n      : @386 (gas: 1)\n 10425: jump @715\n      : @387 (gas: 6)\n 10428: a0 = 0xffffffff\n 10438: u64 [s1 + 0xb8] = a0\n 10442: a0 = s1 + 0x1500\n 10446: ra = 0x166\n 10450: t0 = 0x416\n 10454: jump @1417\n      : @388 [@dyn 179] (gas: 11)\n 10457: a1 = s1 + 0x1038\n 10461: a0 = u64 [a1 + 0x4c8]\n 10465: u64 [s1 + 0xb0] = a0\n 10469: a0 = u64 [a1 + 0x4d0]\n 10473: u64 [s1 + 0x90] = a0\n 10477: a0 = u32 [a1 + 0x4d8]\n 10481: u64 [s1 + 0x88] = a0\n 10485: a0 = s1 + 0x14e0\n 10489: ra = 0x168\n 10493: t0 = 0x420\n 10497: jump @1417\n      : @389 [@dyn 180] (gas: 19)\n 10500: a1 = s1 + 0x1038\n 10504: a2 = a1 + 0x400\n 10508: a0 = u64 [a2 + 0xb8]\n 10512: u64 [s1 + 0xa8] = a0\n 10516: a0 = u64 [a2 + 0xb0]\n 10520: u64 [s1 + 0xa0] = a0\n 10524: a0 = u64 [a2 + 0xa8]\n 10528: u64 [s1 + 0x98] = a0\n 10532: u64 [a1 + 1184] = 0\n 10536: a0 = u64 [s1 + 0x88]\n 10540: u64 [a2 + 0x98] = a0\n 10544: a0 = u64 [s1 + 0x90]\n 10548: u64 [a2 + 0x90] = a0\n 10552: a2 = a1\n 10554: a1 = s1 + 0x14c0\n 10558: a0 = u64 [s1 + 0xb0]\n 10562: u64 [a2 + 0x488] = a0\n 10566: a0 = 0\n 10568: ra = 362, jump @19\n      : @390 [@dyn 181] (gas: 3)\n 10574: t0 = 0x16c\n 10578: a1 = s1 + 0x1038\n 10582: fallthrough\n      : @391 [@dyn 182] (gas: 8)\n 10583: u64 [a1 + 1152] = 0\n 10587: u64 [a1 + 1144] = 0\n 10591: u64 [a1 + 1128] = 0x1\n 10596: a2 = a1\n 10598: a0 = 0x20\n 10601: a1 = s1 + 0x14a0\n 10605: u64 [a2 + 1136] = 0\n 10609: ra = 366, jump @19\n      : @392 [@dyn 183] (gas: 3)\n 10615: a1 = 0x2026c\n 10620: a0 = i32 [0x2026c]\n 10625: jump @394 if a0 >u 63\n      : @393 (gas: 2)\n 10629: u32 [0x2026c] = 0x40\n 10635: fallthrough\n      : @394 (gas: 15)\n 10636: a0 = sp + 0xffffffffffffffe0\n 10639: a2 = a0 & 0xffffffffffffffe0\n 10642: u64 [s1 + 0x88] = a2\n 10646: sp = a2\n 10648: a0 = 0x20280\n 10653: i32 a0 = a0 + 0\n 10655: i32 a2 = a2 + 0\n 10657: u64 [s1 + 0xb0] = a1\n 10661: a1 = 0x40\n 10664: u64 [s1 + 0x90] = a0\n 10668: ra = 0x170\n 10672: ecalli 6 // 'hash_keccak_256'\n 10674: a3 = u64 [s1 + 0x88]\n 10678: t0 = 0x172\n 10682: jump @1406\n      : @395 [@dyn 184] (gas: 2)\n 10685: a3 = u64 [s1 + 0x88]\n 10689: t0 = 370, jump @1406\n      : @396 [@dyn 185] (gas: 27)\n 10695: u64 [s1 + 0x80] = a0\n 10699: a0 = reverse a1\n 10701: u64 [s1 + 0x78] = a0\n 10704: a0 = reverse a2\n 10706: u64 [s1 + 0x70] = a0\n 10709: a0 = reverse a3\n 10711: u64 [s1 + 0x68] = a0\n 10714: a0 = sp + 0xffffffffffffffe0\n 10717: a0 = a0 & 0xffffffffffffffe0\n 10720: u64 [s1 + 0x88] = a0\n 10724: sp = a0\n 10726: a0 = u64 [s1 + 0x98]\n 10730: a0 = a0 & 0xffffffffffffffff\n 10733: a2 = u64 [s1 + 0xa0]\n 10737: a1 = a2 & 0xffffffffffffffff\n 10740: a2 = u64 [s1 + 0xb8]\n 10744: a3 = u64 [s1 + 0xa8]\n 10748: a2 = a2 & a3\n 10751: a3 = s1 + 0x1038\n 10755: u64 [a3 + 1120] = 0\n 10759: a4 = a3 + 0x400\n 10763: u64 [a4 + 0x58] = a2\n 10766: u64 [a4 + 0x50] = a1\n 10769: a1 = s1 + 0x1480\n 10773: u64 [a4 + 0x48] = a0\n 10776: a0 = 0\n 10778: ra = 372, jump @19\n      : @397 [@dyn 186] (gas: 14)\n 10784: a0 = u64 [s1 + 0x68]\n 10787: a1 = s1 + 0x1038\n 10791: a2 = a1 + 0x400\n 10795: u64 [a2 + 0x40] = a0\n 10798: a0 = u64 [s1 + 0x70]\n 10801: u64 [a2 + 0x38] = a0\n 10804: a0 = u64 [s1 + 0x78]\n 10807: u64 [a2 + 0x30] = a0\n 10810: a3 = a1\n 10812: a0 = 0x20\n 10815: a1 = s1 + 0x1460\n 10819: a2 = u64 [s1 + 0x80]\n 10823: u64 [a3 + 0x428] = a2\n 10827: ra = 374, jump @19\n      : @398 [@dyn 187] (gas: 3)\n 10833: a1 = u64 [s1 + 0xb0]\n 10837: a0 = i32 [a1]\n 10839: jump @400 if a0 >u 63\n      : @399 (gas: 2)\n 10843: u32 [a1 + 0] = 0x40\n 10846: fallthrough\n      : @400 (gas: 12)\n 10847: a0 = sp + 0xffffffffffffffe0\n 10850: a0 = a0 & 0xffffffffffffffe0\n 10853: u64 [s1 + 0xb8] = a0\n 10857: sp = a0\n 10859: i32 a2 = a0 + 0\n 10861: a1 = 0x40\n 10864: a0 = u64 [s1 + 0x90]\n 10868: ra = 0x178\n 10872: ecalli 6 // 'hash_keccak_256'\n 10874: a3 = u64 [s1 + 0xb8]\n 10878: t0 = 0x17a\n 10882: jump @1352\n      : @401 [@dyn 188] (gas: 2)\n 10885: a3 = u64 [s1 + 0xb8]\n 10889: t0 = 378, jump @1352\n      : @402 [@dyn 189] (gas: 7)\n 10895: a1 = u64 [s1 + 0x88]\n 10899: u64 [a1 + 0x18] = a3\n 10902: u64 [a1 + 0x10] = a2\n 10905: u64 [a1 + 0x8] = a4\n 10908: u64 [a1] = a0\n 10910: a0 = s1 + 0x1440\n 10914: ra = 380, jump @21\n      : @403 [@dyn 190] (gas: 13)\n 10920: a1 = s1 + 0x1038\n 10924: a2 = a1 + 0x400\n 10928: a0 = u64 [a2 + 0x20]\n 10931: u64 [s1 + 0xb8] = a0\n 10935: a0 = u64 [a2 + 0x18]\n 10938: u64 [s1 + 0xb0] = a0\n 10942: a0 = u64 [a2 + 0x10]\n 10945: u64 [s1 + 0xa8] = a0\n 10949: a0 = u64 [a2 + 0x8]\n 10952: u64 [s1 + 0xa0] = a0\n 10956: a0 = s1 + 0x1420\n 10960: a1 = 0x40\n 10963: ra = 382, jump @17\n      : @404 [@dyn 191] (gas: 4)\n 10969: a3 = s1 + 0x1038\n 10973: a0 = u64 [a3 + 0x400]\n 10977: a5 = a3 + 0x300\n 10981: t0 = 384, jump @1411\n      : @405 [@dyn 192] (gas: 1)\n 10987: jump @407 if a0 == 0\n      : @406 (gas: 1)\n 10990: jump @673\n      : @407 (gas: 14)\n 10993: a0 = u64 [s1 + 0xa0]\n 10997: a2 = a3 + 0x300\n 11001: u64 [a2 + 0xc8] = a0\n 11005: a0 = u64 [s1 + 0xa8]\n 11009: u64 [a2 + 0xd0] = a0\n 11013: a0 = u64 [s1 + 0xb0]\n 11017: u64 [a2 + 0xd8] = a0\n 11021: a1 = s1 + 0x1400\n 11025: a0 = u64 [s1 + 0xb8]\n 11029: u64 [a2 + 0xe0] = a0\n 11033: a0 = a4\n 11035: u64 [s1 + 0xb8] = a4\n 11039: ra = 0x2f8\n 11043: jump @19\n      : @408 (gas: 8)\n 11046: u64 [a2 + 1536] = 0\n 11050: u64 [a2 + 1528] = 0\n 11054: u64 [a2 + 1520] = 0\n 11058: u64 [a2 + 1512] = 0\n 11062: a0 = s1 + 0x1000\n 11066: i32 a0 = a0 + 0x620\n 11070: ecalli 10 // 'value_transferred'\n 11072: fallthrough\n      : @409 (gas: 10)\n 11073: a4 = s1 + 0x1038\n 11077: a5 = a4 + 0x500\n 11081: a0 = u64 [a5 + 0xf8]\n 11085: a1 = u64 [a4 + 0x600]\n 11089: a2 = u64 [a5 + 0xf0]\n 11093: a3 = u64 [a5 + 0xe8]\n 11097: a1 = a1 | a2\n 11100: a0 = a0 | a3\n 11103: a0 = a0 | a1\n 11106: jump @411 if a0 == 0\n      : @410 (gas: 1)\n 11109: jump @716\n      : @411 (gas: 3)\n 11112: a0 = u64 [s1 + 0xb8]\n 11116: a0 = i32 [a0]\n 11118: jump @413 if a0 >u 3\n      : @412 (gas: 1)\n 11122: jump @717\n      : @413 (gas: 7)\n 11125: u64 [a4 + 1568] = 0\n 11129: u64 [a4 + 1560] = 0\n 11133: u64 [a4 + 1552] = 0\n 11137: u64 [a4 + 1544] = 0x7\n 11142: a0 = s1 + 0x300\n 11146: a1 = s1 + 0x1640\n 11150: ra = 386, jump @21\n      : @414 [@dyn 193] (gas: 10)\n 11156: a1 = s1 + 0x300\n 11160: a0 = u64 [a1 + 0x10]\n 11163: u64 [s1 + 0xa8] = a0\n 11167: a0 = u64 [a1 + 0x8]\n 11170: u64 [s1 + 0xb8] = a0\n 11174: a0 = u64 [a1]\n 11176: u64 [s1 + 0xb0] = a0\n 11180: a0 = s1 + 0x2e0\n 11184: a1 = 0x40\n 11187: ra = 388, jump @17\n      : @415 [@dyn 194] (gas: 6)\n 11193: a4 = s1 + 0x200\n 11197: a3 = u64 [a4 + 0xf8]\n 11201: a1 = u64 [a4 + 0xf0]\n 11205: a2 = u64 [a4 + 0xe8]\n 11209: a0 = u64 [a4 + 0xe0]\n 11213: t0 = 390, jump @1356\n      : @416 [@dyn 195] (gas: 1)\n 11219: jump @418 if a1 == 0\n      : @417 (gas: 1)\n 11222: jump @673\n      : @418 (gas: 14)\n 11225: a1 = u64 [s1 + 0xa8]\n 11229: a1 = a1 << 0x20\n 11232: a2 = a1 >> 0x20\n 11235: u64 [s1 + 728] = 0\n 11239: a1 = u64 [s1 + 0xb0]\n 11243: a3 = s1 + 0x200\n 11247: u64 [a3 + 0xc0] = a1\n 11251: a1 = u64 [s1 + 0xb8]\n 11255: u64 [a3 + 0xc8] = a1\n 11259: a1 = s1 + 0x2c0\n 11263: u64 [a3 + 0xd0] = a2\n 11267: u64 [s1 + 0xb8] = a0\n 11271: ra = 0x2f8\n 11275: jump @19\n      : @419 (gas: 9)\n 11278: a0 = s1 + 0x1838\n 11282: u64 [a0 + 96] = 0\n 11285: u64 [a0 + 88] = 0\n 11288: u64 [a0 + 80] = 0\n 11291: u64 [a0 + 72] = 0\n 11294: a0 = s1 + 0x2000\n 11298: i32 a0 = a0 + 0xfffffffffffff880\n 11302: ecalli 10 // 'value_transferred'\n 11304: fallthrough\n      : @420 (gas: 9)\n 11305: a3 = s1 + 0x1838\n 11309: a0 = u64 [a3 + 0x58]\n 11312: a1 = u64 [a3 + 0x60]\n 11315: a2 = u64 [a3 + 0x50]\n 11318: a3 = u64 [a3 + 0x48]\n 11321: a1 = a1 | a2\n 11324: a0 = a0 | a3\n 11327: a0 = a0 | a1\n 11330: jump @422 if a0 == 0\n      : @421 (gas: 1)\n 11333: jump @718\n      : @422 (gas: 4)\n 11336: a0 = u64 [s1 + 0xb8]\n 11340: a0 = i32 [a0]\n 11342: a1 = 0x43\n 11345: jump @424 if a1 <u a0\n      : @423 (gas: 1)\n 11348: jump @719\n      : @424 (gas: 5)\n 11351: a0 = s1 + 0x7ff\n 11355: a0 = a0 + 0x441\n 11359: ra = 0x188\n 11363: t0 = 0x416\n 11367: jump @1417\n      : @425 [@dyn 196] (gas: 41)\n 11370: a1 = s1 + 0x7ff\n 11374: a1 = a1 + 0x39\n 11377: a2 = a1 + 0x400\n 11381: a0 = u64 [a2 + 0x18]\n 11384: u64 [s1 + 0x78] = a0\n 11387: a0 = u64 [a2 + 0x10]\n 11390: u64 [s1 + 0xa8] = a0\n 11394: a0 = u64 [a2 + 0x8]\n 11397: u64 [s1 + 0xb0] = a0\n 11401: a0 = s1 + 0x2000\n 11405: i32 a0 = a0 + 0xfffffffffffff8a0\n 11409: a1 = 0x24\n 11412: ecalli 1 // 'call_data_load'\n 11414: a0 = s1 + 0x1838\n 11418: a1 = u64 [a0 + 0x80]\n 11422: u64 [s1 + 0xa0] = a1\n 11426: a1 = u64 [a0 + 0x78]\n 11429: u64 [s1 + 0x90] = a1\n 11433: a1 = u64 [a0 + 0x70]\n 11436: u64 [s1 + 0x88] = a1\n 11440: a0 = u64 [a0 + 0x68]\n 11443: u64 [s1 + 0x80] = a0\n 11447: a0 = u64 [0x20048]\n 11452: u64 [s1 + 0x40] = a0\n 11455: a3 = s1 + 0x7ff\n 11459: a3 = a3 + 0x39\n 11462: u64 [a3 + 0x400] = a0\n 11466: a1 = u64 [0x20050]\n 11471: a2 = u64 [0x20058]\n 11476: a0 = u64 [0x20060]\n 11481: u64 [s1 + 0x30] = a1\n 11484: a4 = a3 + 0x300\n 11488: u64 [a4 + 0xf8] = a1\n 11492: u64 [s1 + 0x28] = a2\n 11495: u64 [a4 + 0xf0] = a2\n 11499: a1 = s1 + 0x7ff\n 11503: a1 = a1 + 0x421\n 11507: u64 [s1 + 0x38] = a0\n 11510: u64 [a4 + 0xe8] = a0\n 11514: a0 = 0\n 11516: ra = 394, jump @19\n      : @426 [@dyn 197] (gas: 11)\n 11522: a1 = s1 + 0x7ff\n 11526: a1 = a1 + 0x39\n 11529: u64 [a1 + 992] = 0\n 11533: u64 [a1 + 984] = 0\n 11537: u64 [a1 + 968] = 0x6\n 11542: a2 = a1\n 11544: a0 = 0x20\n 11547: a1 = s1 + 0x7ff\n 11551: a1 = a1 + 0x401\n 11555: u64 [a2 + 976] = 0\n 11559: ra = 396, jump @19\n      : @427 [@dyn 198] (gas: 3)\n 11565: a1 = 0x2026c\n 11570: a0 = i32 [0x2026c]\n 11575: jump @429 if a0 >u 63\n      : @428 (gas: 2)\n 11579: u32 [0x2026c] = 0x40\n 11585: fallthrough\n      : @429 (gas: 15)\n 11586: a0 = sp + 0xffffffffffffffe0\n 11589: a2 = a0 & 0xffffffffffffffe0\n 11592: u64 [s1 + 0x70] = a2\n 11595: sp = a2\n 11597: a0 = 0x20280\n 11602: i32 a0 = a0 + 0\n 11604: u64 [s1 + 0x98] = a1\n 11608: i32 a2 = a2 + 0\n 11610: a1 = 0x40\n 11613: u64 [s1 + 0xb8] = a0\n 11617: ra = 0x18e\n 11621: ecalli 6 // 'hash_keccak_256'\n 11623: a3 = u64 [s1 + 0x70]\n 11626: t0 = 0x190\n 11630: jump @1371\n      : @430 [@dyn 199] (gas: 2)\n 11633: a3 = u64 [s1 + 0x70]\n 11636: t0 = 400, jump @1371\n      : @431 [@dyn 200] (gas: 9)\n 11642: a0 = 0x30280\n 11647: u64 [s1 + 0x70] = a0\n 11650: i32 a0 = a0 + 0\n 11652: u64 [s1 + 0x20] = a0\n 11655: ra = 0x192\n 11659: ecalli 3 // 'caller'\n 11661: a2 = u64 [s1 + 0x70]\n 11664: t0 = 0x194\n 11668: jump @1343\n      : @432 [@dyn 201] (gas: 2)\n 11671: a2 = u64 [s1 + 0x70]\n 11674: t0 = 404, jump @1343\n      : @433 [@dyn 202] (gas: 9)\n 11680: u64 [a2 + 960] = 0\n 11684: a4 = a2 + 0x300\n 11688: u64 [a4 + 0xb8] = a1\n 11692: u64 [a4 + 0xb0] = a0\n 11696: a1 = s1 + 0x7ff\n 11700: a1 = a1 + 0x3e1\n 11704: u64 [a4 + 0xa8] = a3\n 11708: a0 = 0\n 11710: ra = 406, jump @19\n      : @434 [@dyn 203] (gas: 16)\n 11716: a0 = u64 [s1 + 0x48]\n 11719: a1 = s1 + 0x7ff\n 11723: a1 = a1 + 0x39\n 11726: a2 = a1 + 0x300\n 11730: u64 [a2 + 0xa0] = a0\n 11734: a0 = u64 [s1 + 0x50]\n 11737: u64 [a2 + 0x98] = a0\n 11741: a0 = u64 [s1 + 0x58]\n 11744: u64 [a2 + 0x90] = a0\n 11748: a3 = a1\n 11750: a0 = 0x20\n 11753: a1 = s1 + 0x7ff\n 11757: a1 = a1 + 0x3c1\n 11761: a2 = u64 [s1 + 0x60]\n 11764: u64 [a3 + 0x388] = a2\n 11768: ra = 408, jump @19\n      : @435 [@dyn 204] (gas: 3)\n 11774: a1 = u64 [s1 + 0x98]\n 11778: a0 = i32 [a1]\n 11780: jump @437 if a0 >u 63\n      : @436 (gas: 2)\n 11784: u32 [a1 + 0] = 0x40\n 11787: fallthrough\n      : @437 (gas: 4)\n 11788: a0 = sp + 0xffffffffffffffe0\n 11791: a0 = a0 & 0xffffffffffffffe0\n 11794: u64 [s1 + 0x60] = a0\n 11797: t0 = 410, jump @1408\n      : @438 [@dyn 205] (gas: 5)\n 11803: ra = 0x19c\n 11807: ecalli 6 // 'hash_keccak_256'\n 11809: a3 = u64 [s1 + 0x60]\n 11812: t0 = 0x19e\n 11816: jump @1380\n      : @439 [@dyn 206] (gas: 2)\n 11819: a3 = u64 [s1 + 0x60]\n 11822: t0 = 414, jump @1380\n      : @440 [@dyn 207] (gas: 3)\n 11828: a0 = s1 + 0x7ff\n 11832: a0 = a0 + 0x3a1\n 11836: ra = 416, jump @21\n      : @441 [@dyn 208] (gas: 4)\n 11842: a2 = s1 + 0x7ff\n 11846: a2 = a2 + 0x39\n 11849: a0 = u8 [a2 + 0x368]\n 11853: jump @443 if a0 != 0\n      : @442 (gas: 1)\n 11856: jump @720\n      : @443 (gas: 9)\n 11859: a0 = u64 [s1 + 0x78]\n 11862: a0 = a0 << 0x20\n 11865: a2 = a0 >> 0x20\n 11868: a0 = u64 [s1 + 0xb0]\n 11872: a1 = u64 [s1 + 0xa8]\n 11876: a0 = a0 | a1\n 11879: u64 [s1 + 0x70] = a2\n 11882: a0 = a0 | a2\n 11885: jump @445 if a0 != 0\n      : @444 (gas: 1)\n 11888: jump @728\n      : @445 (gas: 1)\n 11891: ra = 418, jump @1334\n      : @446 [@dyn 209] (gas: 9)\n 11897: a0 = s1 + 0x1838\n 11901: u64 [a0 + 160] = 0\n 11905: u64 [a0 + 152] = 0\n 11909: u64 [a0 + 144] = 0\n 11913: u64 [a0 + 136] = 0x2\n 11918: a0 = s1 + 0x7ff\n 11922: a0 = a0 + 0x381\n 11926: a1 = s1 + 0x18c0\n 11930: ra = 420, jump @21\n      : @447 [@dyn 210] (gas: 40)\n 11936: a1 = s1 + 0x7ff\n 11940: a1 = a1 + 0x39\n 11943: t2 = u64 [a1 + 0x360]\n 11947: a2 = a1 + 0x300\n 11951: a0 = u64 [a2 + 0x58]\n 11954: a4 = u64 [a2 + 0x48]\n 11957: a5 = u64 [a2 + 0x50]\n 11960: a1 = sp + 0xffffffffffffffe0\n 11963: a1 = a1 & 0xffffffffffffffe0\n 11966: sp = a1\n 11968: a3 = u64 [s1 + 0x88]\n 11972: a3 = a3 + a5\n 11975: t0 = u64 [s1 + 0x80]\n 11979: t0 = t0 + a4\n 11982: a4 = t0 <u a4\n 11985: a3 = a3 + a4\n 11988: t1 = a3 ^ a5\n 11991: a2 = a3 <u a5\n 11994: a2 = a4 if t1 == 0\n 11997: a4 = u64 [s1 + 0x90]\n 12001: a4 = a4 + a0\n 12004: a5 = a4 + a2\n 12007: t1 = a5 <u a4\n 12010: ra = u64 [s1 + 0xa0]\n 12014: ra = ra + t2\n 12017: a4 = a4 <u a0\n 12020: a4 = a4 + ra\n 12023: ra = a4 + t1\n 12026: t1 = a5 <u a0\n 12029: a4 = t2 ^ ra\n 12032: t2 = ra <u t2\n 12035: t2 = t1 if a4 == 0\n 12038: a0 = a0 ^ a5\n 12041: a0 = a0 | a4\n 12044: t2 = a2 if a0 == 0\n 12047: u64 [a1 + 0x10] = a5\n 12050: u64 [a1 + 0x8] = a3\n 12053: u64 [a1] = t0\n 12055: u64 [a1 + 0x18] = ra\n 12058: jump @449 if t2 == 0\n      : @448 (gas: 1)\n 12061: jump @730\n      : @449 (gas: 7)\n 12064: a0 = s1 + 0x1838\n 12068: u64 [a0 + 192] = 0\n 12072: u64 [a0 + 184] = 0\n 12076: u64 [a0 + 176] = 0\n 12080: u64 [a0 + 168] = 0x2\n 12085: a0 = s1 + 0x18e0\n 12089: ra = 422, jump @24\n      : @450 [@dyn 211] (gas: 14)\n 12095: a2 = s1 + 0x7ff\n 12099: a2 = a2 + 0x39\n 12102: u64 [a2 + 832] = 0\n 12106: a0 = u64 [s1 + 0x70]\n 12109: a3 = a2 + 0x300\n 12113: u64 [a3 + 0x38] = a0\n 12116: a0 = u64 [s1 + 0xa8]\n 12120: u64 [a3 + 0x30] = a0\n 12123: a1 = s1 + 0x7ff\n 12127: a1 = a1 + 0x361\n 12131: a0 = u64 [s1 + 0xb0]\n 12135: u64 [a3 + 0x28] = a0\n 12138: a0 = 0\n 12140: ra = 424, jump @19\n      : @451 [@dyn 212] (gas: 11)\n 12146: a0 = s1 + 0x7ff\n 12150: a0 = a0 + 0x39\n 12153: u64 [a0 + 800] = 0\n 12157: u64 [a0 + 792] = 0\n 12161: u64 [a0 + 784] = 0\n 12165: a2 = a0\n 12167: a0 = 0x20\n 12170: a1 = s1 + 0x7ff\n 12174: a1 = a1 + 0x341\n 12178: u64 [a2 + 776] = 0\n 12182: ra = 426, jump @19\n      : @452 [@dyn 213] (gas: 7)\n 12188: a0 = sp + 0xffffffffffffffe0\n 12191: a0 = a0 & 0xffffffffffffffe0\n 12194: u64 [s1 + 0x78] = a0\n 12197: sp = a0\n 12199: a2 = u64 [s1 + 0x98]\n 12203: a0 = i32 [a2]\n 12205: jump @454 if a0 >u 63\n      : @453 (gas: 2)\n 12209: u32 [a2 + 0] = 0x40\n 12212: fallthrough\n      : @454 (gas: 4)\n 12213: a0 = sp + 0xffffffffffffffe0\n 12216: a0 = a0 & 0xffffffffffffffe0\n 12219: u64 [s1 + 0x98] = a0\n 12223: t0 = 428, jump @1408\n      : @455 [@dyn 214] (gas: 5)\n 12229: ra = 0x1ae\n 12233: ecalli 6 // 'hash_keccak_256'\n 12235: a3 = u64 [s1 + 0x98]\n 12239: t0 = 0x1b0\n 12243: jump @1352\n      : @456 [@dyn 215] (gas: 2)\n 12246: a3 = u64 [s1 + 0x98]\n 12250: t0 = 432, jump @1352\n      : @457 [@dyn 216] (gas: 8)\n 12256: a1 = u64 [s1 + 0x78]\n 12259: u64 [a1 + 0x18] = a3\n 12262: u64 [a1 + 0x10] = a2\n 12265: u64 [a1 + 0x8] = a4\n 12268: u64 [a1] = a0\n 12270: a0 = s1 + 0x7ff\n 12274: a0 = a0 + 0x321\n 12278: ra = 434, jump @21\n      : @458 [@dyn 217] (gas: 33)\n 12284: a2 = s1 + 0x7ff\n 12288: a2 = a2 + 0x39\n 12291: a4 = a2 + 0x200\n 12295: a0 = u64 [a4 + 0xf0]\n 12299: a1 = u64 [a4 + 0xe8]\n 12303: t0 = u64 [a2 + 0x300]\n 12307: a3 = u64 [a4 + 0xf8]\n 12311: a4 = u64 [s1 + 0x88]\n 12315: a4 = a4 + a0\n 12318: a5 = u64 [s1 + 0x80]\n 12322: a5 = a5 + a1\n 12325: a1 = a5 <u a1\n 12328: a4 = a4 + a1\n 12331: a2 = a4 ^ a0\n 12334: a0 = a4 <u a0\n 12337: a0 = a1 if a2 == 0\n 12340: a1 = u64 [s1 + 0x90]\n 12344: a1 = a1 + a3\n 12347: a2 = u64 [s1 + 0xa0]\n 12351: t0 = t0 + a2\n 12354: a2 = a1 <u a3\n 12357: a2 = a2 + t0\n 12360: a0 = a0 + a1\n 12363: a1 = a0 <u a1\n 12366: a1 = a1 + a2\n 12369: a2 = s1 + 0x1838\n 12373: u64 [a2 + 0xc8] = a5\n 12377: u64 [a2 + 0xd0] = a4\n 12381: u64 [a2 + 0xd8] = a0\n 12385: u64 [a2 + 0xe0] = a1\n 12389: a1 = s1 + 0x1900\n 12393: a0 = u64 [s1 + 0x78]\n 12396: ra = 436, jump @24\n      : @459 [@dyn 218] (gas: 4)\n 12402: a0 = s1 + 0x7ff\n 12406: a0 = a0 + 0x301\n 12410: a1 = 0x40\n 12413: ra = 438, jump @17\n      : @460 [@dyn 219] (gas: 8)\n 12419: a3 = s1 + 0x7ff\n 12423: a3 = a3 + 0x39\n 12426: a5 = a3 + 0x200\n 12430: a4 = u64 [a5 + 0xe0]\n 12434: a1 = u64 [a5 + 0xd8]\n 12438: a2 = u64 [a5 + 0xd0]\n 12442: a0 = u64 [a5 + 0xc8]\n 12446: t0 = 440, jump @1354\n      : @461 [@dyn 220] (gas: 1)\n 12452: jump @463 if a1 == 0\n      : @462 (gas: 1)\n 12455: jump @673\n      : @463 (gas: 13)\n 12458: a1 = u64 [s1 + 0x80]\n 12462: a4 = a3 + 0x200\n 12466: u64 [a4 + 0xa8] = a1\n 12470: a1 = u64 [s1 + 0x88]\n 12474: u64 [a4 + 0xb0] = a1\n 12478: a1 = u64 [s1 + 0x90]\n 12482: u64 [a4 + 0xb8] = a1\n 12486: a1 = s1 + 0x7ff\n 12490: a1 = a1 + 0x2e1\n 12494: a2 = u64 [s1 + 0xa0]\n 12498: u64 [a4 + 0xc0] = a2\n 12502: u64 [s1 + 0xa0] = a0\n 12506: ra = 442, jump @19\n      : @464 [@dyn 221] (gas: 31)\n 12512: a5 = s1 + 0x7ff\n 12516: a5 = a5 + 0x39\n 12519: u64 [a5 + 608] = 0\n 12523: a0 = u64 [s1 + 0x70]\n 12526: a4 = a5 + 0x200\n 12530: u64 [a4 + 0x58] = a0\n 12533: a0 = u64 [s1 + 0xa8]\n 12537: u64 [a4 + 0x50] = a0\n 12540: a0 = u64 [s1 + 0xb0]\n 12544: u64 [a4 + 0x48] = a0\n 12547: u64 [a5 + 640] = 0\n 12551: u64 [a5 + 632] = 0\n 12555: u64 [a5 + 624] = 0\n 12559: a0 = u64 [0x200a8]\n 12564: a1 = u64 [0x200b0]\n 12569: a2 = u64 [0x200b8]\n 12574: a3 = u64 [0x200c0]\n 12579: u64 [a4 + 0xa0] = a0\n 12583: u64 [a4 + 0x98] = a1\n 12587: u64 [a4 + 0x90] = a2\n 12591: u64 [a4 + 0x88] = a3\n 12595: a1 = 0x20\n 12598: a2 = s1 + 0x7ff\n 12602: a2 = a2 + 0x2c1\n 12606: a3 = s1 + 0x7ff\n 12610: a3 = a3 + 0x2a1\n 12614: a4 = s1 + 0x7ff\n 12618: a4 = a4 + 0x281\n 12622: u64 [a5 + 616] = 0\n 12626: a0 = u64 [s1 + 0xa0]\n 12630: ra = 444, jump @27\n      : @465 [@dyn 222] (gas: 5)\n 12636: a0 = 0\n 12638: a1 = u64 [s1 + 0xb8]\n 12642: a2 = 0\n 12644: ecalli 7 // 'seal_return'\n 12646: jump @847\n      : @466 (gas: 11)\n 12649: a0 = s1 + 0x1838\n 12653: u64 [a0 + 768] = 0\n 12657: u64 [a0 + 760] = 0\n 12661: u64 [a0 + 752] = 0\n 12665: u64 [a0 + 744] = 0\n 12669: a0 = s1 + 0x2000\n 12673: i32 a0 = a0 + 0xfffffffffffffb20\n 12677: ra = 0x1be\n 12681: ecalli 10 // 'value_transferred'\n 12683: t0 = 0x1c0\n 12687: jump @1398\n      : @467 [@dyn 223] (gas: 1)\n 12690: t0 = 448, jump @1398\n      : @468 [@dyn 224] (gas: 8)\n 12696: a0 = u64 [a4 + 0xf8]\n 12700: a1 = u64 [a3 + 0x300]\n 12704: a2 = u64 [a4 + 0xf0]\n 12708: a3 = u64 [a4 + 0xe8]\n 12712: a1 = a1 | a2\n 12715: a0 = a0 | a3\n 12718: a0 = a0 | a1\n 12721: jump @470 if a0 == 0\n      : @469 (gas: 1)\n 12724: jump @736\n      : @470 (gas: 3)\n 12727: a0 = u64 [s1 + 0xb8]\n 12731: a0 = i32 [a0]\n 12733: jump @472 if a0 >u 3\n      : @471 (gas: 1)\n 12737: jump @737\n      : @472 (gas: 3)\n 12740: a0 = s1 + 0x1200\n 12744: a1 = 0x40\n 12747: ra = 450, jump @17\n      : @473 [@dyn 225] (gas: 7)\n 12753: a3 = s1 + 0x1038\n 12757: a5 = a3 + 0x100\n 12761: a4 = u64 [a5 + 0xe0]\n 12765: a1 = u64 [a5 + 0xd8]\n 12769: a2 = u64 [a5 + 0xd0]\n 12773: a0 = u64 [a5 + 0xc8]\n 12777: t0 = 452, jump @1354\n      : @474 [@dyn 226] (gas: 1)\n 12783: jump @476 if a1 == 0\n      : @475 (gas: 1)\n 12786: jump @673\n      : @476 (gas: 8)\n 12789: u64 [a3 + 448] = 0\n 12793: u64 [a3 + 440] = 0\n 12797: u64 [a3 + 432] = 0\n 12801: a1 = s1 + 0x11e0\n 12805: u64 [a3 + 424] = 0\n 12809: u64 [s1 + 0xb8] = a0\n 12813: ra = 0x2f8\n 12817: jump @19\n      : @477 (gas: 10)\n 12820: u64 [a2 + 2016] = 0\n 12824: u64 [a2 + 2008] = 0\n 12828: u64 [a2 + 2000] = 0\n 12832: u64 [a2 + 1992] = 0\n 12836: a0 = s1 + 0x2000\n 12840: i32 a0 = a0 + 0xfffffffffffff800\n 12844: ra = 0x1c6\n 12848: ecalli 10 // 'value_transferred'\n 12850: t0 = 0x1c8\n 12854: jump @1385\n      : @478 [@dyn 227] (gas: 1)\n 12857: t0 = 456, jump @1385\n      : @479 [@dyn 228] (gas: 8)\n 12863: a0 = u64 [a4 + 0xd8]\n 12867: a1 = u64 [a4 + 0xe0]\n 12871: a2 = u64 [a4 + 0xd0]\n 12875: a3 = u64 [a4 + 0xc8]\n 12879: a1 = a1 | a2\n 12882: a0 = a0 | a3\n 12885: a0 = a0 | a1\n 12888: jump @481 if a0 == 0\n      : @480 (gas: 1)\n 12891: jump @738\n      : @481 (gas: 3)\n 12894: a0 = u64 [s1 + 0xb8]\n 12898: a0 = i32 [a0]\n 12900: jump @483 if a0 >u 3\n      : @482 (gas: 1)\n 12904: jump @739\n      : @483 (gas: 1)\n 12907: ra = 458, jump @1153\n      : @484 [@dyn 229] (gas: 9)\n 12913: a0 = s1 + 0x1838\n 12917: u64 [a0 + 0] = 0\n 12919: u64 [a0 + 4294967288] = 0\n 12922: u64 [a0 + 4294967280] = 0\n 12925: u64 [a0 + 4294967272] = 0x5\n 12929: a0 = s1 + 0x7ff\n 12933: a0 = a0 + 0x181\n 12937: a1 = s1 + 0x1820\n 12941: ra = 460, jump @21\n      : @485 [@dyn 230] (gas: 5)\n 12947: a3 = s1 + 0x7ff\n 12951: a3 = a3 + 0x39\n 12954: a0 = u64 [a3 + 0x148]\n 12958: a1 = a0 & 0xff\n 12962: jump @487 if a1 != 0\n      : @486 (gas: 1)\n 12965: jump @740\n      : @487 (gas: 17)\n 12968: a4 = a3 + 0x100\n 12972: a1 = u64 [a4 + 0x60]\n 12975: a2 = u64 [a4 + 0x58]\n 12978: a3 = u64 [a4 + 0x50]\n 12981: a0 = a0 & 0xffffffffffffff00\n 12985: a4 = s1 + 0x1838\n 12989: u64 [a4 + 32] = 0\n 12992: u64 [a4 + 24] = 0\n 12995: u64 [a4 + 16] = 0\n 12998: u64 [a4 + 8] = 0x5\n 13002: u64 [a4 + 0x30] = a3\n 13005: u64 [a4 + 0x28] = a0\n 13008: u64 [a4 + 0x38] = a2\n 13011: u64 [a4 + 0x40] = a1\n 13014: a0 = s1 + 0x1840\n 13018: a1 = s1 + 0x1860\n 13022: ra = 462, jump @24\n      : @488 [@dyn 231] (gas: 4)\n 13028: a0 = s1 + 0x7ff\n 13032: a0 = a0 + 0x161\n 13036: a1 = 0x40\n 13039: ra = 464, jump @17\n      : @489 [@dyn 232] (gas: 18)\n 13045: a0 = s1 + 0x7ff\n 13049: a0 = a0 + 0x39\n 13052: a2 = a0 + 0x100\n 13056: a1 = u64 [a2 + 0x40]\n 13059: u64 [s1 + 0xb0] = a1\n 13063: a1 = u64 [a2 + 0x38]\n 13066: u64 [s1 + 0xa8] = a1\n 13070: a1 = u64 [a2 + 0x30]\n 13073: u64 [s1 + 0xa0] = a1\n 13077: a0 = u64 [a2 + 0x28]\n 13080: u64 [s1 + 0xb8] = a0\n 13084: a0 = 0x30280\n 13089: u64 [s1 + 0x98] = a0\n 13093: i32 a0 = a0 + 0\n 13095: ra = 0x1d2\n 13099: ecalli 3 // 'caller'\n 13101: t0 = 0x1d4\n 13105: jump @1409\n      : @490 [@dyn 233] (gas: 1)\n 13108: t0 = 468, jump @1409\n      : @491 [@dyn 234] (gas: 1)\n 13114: jump @493 if a0 == 0\n      : @492 (gas: 1)\n 13117: jump @673\n      : @493 (gas: 2)\n 13120: a2 = u64 [s1 + 0x98]\n 13124: t0 = 470, jump @1343\n      : @494 [@dyn 235] (gas: 9)\n 13130: u64 [a2 + 288] = 0\n 13134: a5 = a2 + 0x100\n 13138: u64 [a5 + 0x18] = a1\n 13141: u64 [a5 + 0x10] = a0\n 13144: a1 = s1 + 0x7ff\n 13148: a1 = a1 + 0x141\n 13152: u64 [a5 + 0x8] = a3\n 13155: a0 = a4\n 13157: ra = 472, jump @19\n      : @495 [@dyn 236] (gas: 16)\n 13163: a0 = u64 [0x200c8]\n 13168: a1 = u64 [0x200d0]\n 13173: a2 = s1 + 0x7ff\n 13177: a2 = a2 + 0x39\n 13180: u64 [a2 + 0x100] = a0\n 13184: a0 = u64 [0x200d8]\n 13189: u64 [a2 + 0xf8] = a1\n 13193: a3 = u64 [0x200e0]\n 13198: u64 [a2 + 0xf0] = a0\n 13202: a0 = a2\n 13204: a1 = 0x20\n 13207: a2 = s1 + 0x7ff\n 13211: a2 = a2 + 0x121\n 13215: u64 [a0 + 0xe8] = a3\n 13219: a0 = u64 [s1 + 0xb8]\n 13223: ra = 474, jump @25\n      : @496 [@dyn 237] (gas: 6)\n 13229: a1 = 0x20280\n 13234: i32 a1 = a1 + 0\n 13236: a0 = 0\n 13238: a2 = 0\n 13240: ecalli 7 // 'seal_return'\n 13242: jump @847\n      : @497 (gas: 8)\n 13245: u64 [a2 + 1664] = 0\n 13249: u64 [a2 + 1656] = 0\n 13253: u64 [a2 + 1648] = 0\n 13257: u64 [a2 + 1640] = 0\n 13261: a0 = s1 + 0x1000\n 13265: i32 a0 = a0 + 0x6a0\n 13269: ecalli 10 // 'value_transferred'\n 13271: fallthrough\n      : @498 (gas: 10)\n 13272: a4 = s1 + 0x1038\n 13276: a5 = a4 + 0x600\n 13280: a0 = u64 [a5 + 0x78]\n 13283: a1 = u64 [a5 + 0x80]\n 13287: a2 = u64 [a5 + 0x70]\n 13290: a3 = u64 [a5 + 0x68]\n 13293: a1 = a1 | a2\n 13296: a0 = a0 | a3\n 13299: a0 = a0 | a1\n 13302: jump @500 if a0 == 0\n      : @499 (gas: 1)\n 13305: jump @745\n      : @500 (gas: 3)\n 13308: a0 = u64 [s1 + 0xb8]\n 13312: a0 = i32 [a0]\n 13314: jump @502 if a0 >u 3\n      : @501 (gas: 1)\n 13318: jump @746\n      : @502 (gas: 7)\n 13321: u64 [a4 + 1696] = 0\n 13325: u64 [a4 + 1688] = 0\n 13329: u64 [a4 + 1680] = 0\n 13333: u64 [a4 + 1672] = 0x2\n 13338: a0 = s1 + 0x560\n 13342: a1 = s1 + 0x16c0\n 13346: ra = 476, jump @21\n      : @503 [@dyn 238] (gas: 11)\n 13352: a0 = u64 [s1 + 0x578]\n 13356: u64 [s1 + 0xb8] = a0\n 13360: a0 = u64 [s1 + 0x570]\n 13364: u64 [s1 + 0xb0] = a0\n 13368: a0 = u64 [s1 + 0x568]\n 13372: u64 [s1 + 0xa8] = a0\n 13376: a0 = u64 [s1 + 0x560]\n 13380: u64 [s1 + 0xa0] = a0\n 13384: a0 = s1 + 0x540\n 13388: a1 = 0x40\n 13391: ra = 478, jump @17\n      : @504 [@dyn 239] (gas: 6)\n 13397: a4 = s1 + 0x500\n 13401: a0 = u64 [a4 + 0x58]\n 13404: a1 = u64 [a4 + 0x50]\n 13407: a2 = u64 [a4 + 0x48]\n 13410: a3 = u64 [a4 + 0x40]\n 13413: t0 = 480, jump @1407\n      : @505 [@dyn 240] (gas: 1)\n 13419: jump @507 if a0 == 0\n      : @506 (gas: 1)\n 13422: jump @673\n      : @507 (gas: 14)\n 13425: a0 = u64 [s1 + 0xa0]\n 13429: a2 = s1 + 0x500\n 13433: u64 [a2 + 0x20] = a0\n 13436: a0 = u64 [s1 + 0xa8]\n 13440: u64 [a2 + 0x28] = a0\n 13443: a0 = u64 [s1 + 0xb0]\n 13447: u64 [a2 + 0x30] = a0\n 13450: a1 = s1 + 0x520\n 13454: a0 = u64 [s1 + 0xb8]\n 13458: u64 [a2 + 0x38] = a0\n 13461: a0 = a3\n 13463: u64 [s1 + 0xb8] = a3\n 13467: ra = 0x2f8\n 13471: jump @19\n      : @508 (gas: 1)\n 13474: jump @510 if a0 == 1889567281\n      : @509 (gas: 1)\n 13481: jump @747\n      : @510 (gas: 10)\n 13484: u64 [a2 + 384] = 0\n 13488: u64 [a2 + 376] = 0\n 13492: u64 [a2 + 368] = 0\n 13496: u64 [a2 + 360] = 0\n 13500: a0 = s1 + 0x2000\n 13504: i32 a0 = a0 + 0xfffffffffffff9a0\n 13508: ra = 0x1e2\n 13512: ecalli 10 // 'value_transferred'\n 13514: t0 = 0x1e4\n 13518: jump @1399\n      : @511 [@dyn 241] (gas: 1)\n 13521: t0 = 484, jump @1399\n      : @512 [@dyn 242] (gas: 1)\n 13527: t0 = 486, jump @1382\n      : @513 [@dyn 243] (gas: 1)\n 13533: jump @515 if a0 == 0\n      : @514 (gas: 1)\n 13536: jump @753\n      : @515 (gas: 4)\n 13539: a0 = u64 [s1 + 0xb8]\n 13543: a0 = i32 [a0]\n 13545: a1 = 0x23\n 13548: jump @517 if a1 <u a0\n      : @516 (gas: 1)\n 13551: jump @754\n      : @517 (gas: 5)\n 13554: a0 = s1 + 0x7ff\n 13558: a0 = a0 + 0x5a1\n 13562: ra = 0x1e8\n 13566: t0 = 0x416\n 13570: jump @1417\n      : @518 [@dyn 244] (gas: 14)\n 13573: a3 = s1 + 0x7ff\n 13577: a3 = a3 + 0x39\n 13580: a4 = a3 + 0x500\n 13584: a0 = u64 [a4 + 0x68]\n 13587: a1 = u64 [a4 + 0x70]\n 13590: a2 = u32 [a3 + 0x578]\n 13594: u64 [a3 + 1376] = 0\n 13598: u64 [a4 + 0x58] = a2\n 13601: u64 [a4 + 0x50] = a1\n 13604: a1 = s1 + 0x7ff\n 13608: a1 = a1 + 0x581\n 13612: u64 [a4 + 0x48] = a0\n 13615: a0 = 0\n 13617: ra = 490, jump @19\n      : @519 [@dyn 245] (gas: 11)\n 13623: a0 = s1 + 0x7ff\n 13627: a0 = a0 + 0x39\n 13630: u64 [a0 + 1344] = 0\n 13634: u64 [a0 + 1336] = 0\n 13638: u64 [a0 + 1328] = 0\n 13642: a2 = a0\n 13644: a0 = 0x20\n 13647: a1 = s1 + 0x7ff\n 13651: a1 = a1 + 0x561\n 13655: u64 [a2 + 1320] = 0\n 13659: ra = 492, jump @19\n      : @520 [@dyn 246] (gas: 2)\n 13665: a1 = i32 [0x2026c]\n 13670: jump @522 if a1 >u 63\n      : @521 (gas: 2)\n 13674: u32 [0x2026c] = 0x40\n 13680: fallthrough\n      : @522 (gas: 11)\n 13681: a0 = sp + 0xffffffffffffffe0\n 13684: a2 = a0 & 0xffffffffffffffe0\n 13687: u64 [s1 + 0xb8] = a2\n 13691: sp = a2\n 13693: a0 = 0x20280\n 13698: i32 a0 = a0 + 0\n 13700: i32 a2 = a2 + 0\n 13702: a1 = 0x40\n 13705: ra = 0x1ee\n 13709: ecalli 6 // 'hash_keccak_256'\n 13711: fallthrough\n      : @523 [@dyn 247] (gas: 6)\n 13712: a3 = u64 [s1 + 0xb8]\n 13716: a0 = u64 [a3 + 0x18]\n 13719: a1 = u64 [a3 + 0x10]\n 13722: a2 = u64 [a3 + 0x8]\n 13725: a3 = u64 [a3]\n 13727: t0 = 496, jump @1373\n      : @524 [@dyn 248] (gas: 10)\n 13733: a4 = s1 + 0x1838\n 13737: a5 = a4 + 0x100\n 13741: u64 [a5 + 0xa0] = a3\n 13745: u64 [a5 + 0x98] = a2\n 13749: u64 [a5 + 0x90] = a1\n 13753: u64 [a5 + 0x88] = a0\n 13757: a0 = s1 + 0x7ff\n 13761: a0 = a0 + 0x541\n 13765: a1 = s1 + 0x19c0\n 13769: ra = 498, jump @21\n      : @525 [@dyn 249] (gas: 15)\n 13775: a1 = s1 + 0x7ff\n 13779: a1 = a1 + 0x39\n 13782: a2 = a1 + 0x500\n 13786: a0 = u64 [a2 + 0x20]\n 13789: u64 [s1 + 0xb8] = a0\n 13793: a0 = u64 [a2 + 0x18]\n 13796: u64 [s1 + 0xb0] = a0\n 13800: a0 = u64 [a2 + 0x10]\n 13803: u64 [s1 + 0xa8] = a0\n 13807: a0 = u64 [a2 + 0x8]\n 13810: u64 [s1 + 0xa0] = a0\n 13814: a0 = s1 + 0x7ff\n 13818: a0 = a0 + 0x521\n 13822: a1 = 0x40\n 13825: ra = 500, jump @17\n      : @526 [@dyn 250] (gas: 5)\n 13831: a3 = s1 + 0x7ff\n 13835: a3 = a3 + 0x39\n 13838: a0 = u64 [a3 + 0x500]\n 13842: a5 = a3 + 0x400\n 13846: t0 = 502, jump @1411\n      : @527 [@dyn 251] (gas: 1)\n 13852: jump @529 if a0 == 0\n      : @528 (gas: 1)\n 13855: jump @673\n      : @529 (gas: 15)\n 13858: a0 = u64 [s1 + 0xa0]\n 13862: a2 = a3 + 0x400\n 13866: u64 [a2 + 0xc8] = a0\n 13870: a0 = u64 [s1 + 0xa8]\n 13874: u64 [a2 + 0xd0] = a0\n 13878: a0 = u64 [s1 + 0xb0]\n 13882: u64 [a2 + 0xd8] = a0\n 13886: a1 = s1 + 0x7ff\n 13890: a1 = a1 + 0x501\n 13894: a0 = u64 [s1 + 0xb8]\n 13898: u64 [a2 + 0xe0] = a0\n 13902: a0 = a4\n 13904: u64 [s1 + 0xb8] = a4\n 13908: ra = 0x2f8\n 13912: jump @19\n      : @530 (gas: 11)\n 13915: a0 = s1 + 0x1838\n 13919: u64 [a0 + 640] = 0\n 13923: u64 [a0 + 632] = 0\n 13927: u64 [a0 + 624] = 0\n 13931: u64 [a0 + 616] = 0\n 13935: a0 = s1 + 0x2000\n 13939: i32 a0 = a0 + 0xfffffffffffffaa0\n 13943: ra = 0x1f8\n 13947: ecalli 10 // 'value_transferred'\n 13949: t0 = 0x1fa\n 13953: jump @1398\n      : @531 [@dyn 252] (gas: 1)\n 13956: t0 = 506, jump @1398\n      : @532 [@dyn 253] (gas: 1)\n 13962: t0 = 508, jump @1382\n      : @533 [@dyn 254] (gas: 1)\n 13968: jump @535 if a0 == 0\n      : @534 (gas: 1)\n 13971: jump @755\n      : @535 (gas: 4)\n 13974: a0 = u64 [s1 + 0xb8]\n 13978: a0 = i32 [a0]\n 13980: a1 = 0x43\n 13983: jump @537 if a1 <u a0\n      : @536 (gas: 1)\n 13986: jump @756\n      : @537 (gas: 5)\n 13989: a0 = s1 + 0x7ff\n 13993: a0 = a0 + 0x7e1\n 13997: ra = 0x1fe\n 14001: t0 = 0x420\n 14005: jump @1417\n      : @538 [@dyn 255] (gas: 16)\n 14008: a1 = s1 + 0x7ff\n 14012: a1 = a1 + 0x39\n 14015: a2 = a1 + 0x700\n 14019: a0 = u64 [a2 + 0xb8]\n 14023: u64 [s1 + 0xa8] = a0\n 14027: a0 = u64 [a2 + 0xb0]\n 14031: u64 [s1 + 0xb0] = a0\n 14035: a0 = u64 [a2 + 0xa8]\n 14039: u64 [s1 + 0xb8] = a0\n 14043: a0 = s1 + 0x2000\n 14047: i32 a0 = a0 + 0xfffffffffffffac0\n 14051: a1 = 0x4\n 14054: ra = 0x200\n 14058: ecalli 1 // 'call_data_load'\n 14060: t0 = 0x202\n 14064: jump @1398\n      : @539 [@dyn 256] (gas: 1)\n 14067: t0 = 514, jump @1398\n      : @540 [@dyn 257] (gas: 15)\n 14073: a0 = u64 [a4 + 0x88]\n 14077: a1 = u64 [a4 + 0x90]\n 14081: a2 = u64 [a4 + 0x98]\n 14085: a3 = u64 [a4 + 0xa0]\n 14089: a4 = s1 + 0x7ff\n 14093: a4 = a4 + 0x39\n 14096: a5 = a4 + 0x700\n 14100: u64 [a5 + 0xa0] = a3\n 14104: u64 [a5 + 0x98] = a2\n 14108: u64 [a5 + 0x90] = a1\n 14112: a1 = s1 + 0x7ff\n 14116: a1 = a1 + 0x7c1\n 14120: u64 [a5 + 0x88] = a0\n 14124: a0 = 0\n 14126: ra = 516, jump @19\n      : @541 [@dyn 258] (gas: 11)\n 14132: a1 = s1 + 0x7ff\n 14136: a1 = a1 + 0x39\n 14139: u64 [a1 + 1920] = 0\n 14143: u64 [a1 + 1912] = 0\n 14147: u64 [a1 + 1896] = 0x6\n 14152: a2 = a1\n 14154: a0 = 0x20\n 14157: a1 = s1 + 0x7ff\n 14161: a1 = a1 + 0x7a1\n 14165: u64 [a2 + 1904] = 0\n 14169: ra = 518, jump @19\n      : @542 [@dyn 259] (gas: 3)\n 14175: a1 = 0x2026c\n 14180: a0 = i32 [0x2026c]\n 14185: jump @544 if a0 >u 63\n      : @543 (gas: 2)\n 14189: u32 [0x2026c] = 0x40\n 14195: fallthrough\n      : @544 (gas: 15)\n 14196: a0 = sp + 0xffffffffffffffe0\n 14199: a2 = a0 & 0xffffffffffffffe0\n 14202: u64 [s1 + 0x90] = a2\n 14206: sp = a2\n 14208: a0 = 0x20280\n 14213: i32 a0 = a0 + 0\n 14215: i32 a2 = a2 + 0\n 14217: u64 [s1 + 0xa0] = a1\n 14221: a1 = 0x40\n 14224: u64 [s1 + 0x98] = a0\n 14228: ra = 0x208\n 14232: ecalli 6 // 'hash_keccak_256'\n 14234: a3 = u64 [s1 + 0x90]\n 14238: t0 = 0x20a\n 14242: jump @1406\n      : @545 [@dyn 260] (gas: 2)\n 14245: a3 = u64 [s1 + 0x90]\n 14249: t0 = 522, jump @1406\n      : @546 [@dyn 261] (gas: 27)\n 14255: u64 [s1 + 0x88] = a0\n 14259: a0 = reverse a1\n 14261: u64 [s1 + 0x80] = a0\n 14265: a0 = reverse a2\n 14267: u64 [s1 + 0x78] = a0\n 14270: a0 = reverse a3\n 14272: u64 [s1 + 0x70] = a0\n 14275: a0 = sp + 0xffffffffffffffe0\n 14278: a0 = a0 & 0xffffffffffffffe0\n 14281: u64 [s1 + 0x90] = a0\n 14285: sp = a0\n 14287: a0 = u64 [s1 + 0xa8]\n 14291: a0 = a0 << 0x20\n 14294: a0 = a0 >> 0x20\n 14297: a2 = s1 + 0x7ff\n 14301: a2 = a2 + 0x39\n 14304: u64 [a2 + 1888] = 0\n 14308: a3 = a2 + 0x700\n 14312: u64 [a3 + 0x58] = a0\n 14315: a0 = u64 [s1 + 0xb0]\n 14319: u64 [a3 + 0x50] = a0\n 14322: a1 = s1 + 0x7ff\n 14326: a1 = a1 + 0x781\n 14330: a0 = u64 [s1 + 0xb8]\n 14334: u64 [a3 + 0x48] = a0\n 14337: a0 = 0\n 14339: ra = 524, jump @19\n      : @547 [@dyn 262] (gas: 16)\n 14345: a0 = u64 [s1 + 0x70]\n 14348: a1 = s1 + 0x7ff\n 14352: a1 = a1 + 0x39\n 14355: a2 = a1 + 0x700\n 14359: u64 [a2 + 0x40] = a0\n 14362: a0 = u64 [s1 + 0x78]\n 14365: u64 [a2 + 0x38] = a0\n 14368: a0 = u64 [s1 + 0x80]\n 14372: u64 [a2 + 0x30] = a0\n 14375: a3 = a1\n 14377: a0 = 0x20\n 14380: a1 = s1 + 0x7ff\n 14384: a1 = a1 + 0x761\n 14388: a2 = u64 [s1 + 0x88]\n 14392: u64 [a3 + 0x728] = a2\n 14396: ra = 526, jump @19\n      : @548 [@dyn 263] (gas: 3)\n 14402: a1 = u64 [s1 + 0xa0]\n 14406: a0 = i32 [a1]\n 14408: jump @550 if a0 >u 63\n      : @549 (gas: 2)\n 14412: u32 [a1 + 0] = 0x40\n 14415: fallthrough\n      : @550 (gas: 12)\n 14416: a0 = sp + 0xffffffffffffffe0\n 14419: a0 = a0 & 0xffffffffffffffe0\n 14422: u64 [s1 + 0xb8] = a0\n 14426: sp = a0\n 14428: i32 a2 = a0 + 0\n 14430: a1 = 0x40\n 14433: a0 = u64 [s1 + 0x98]\n 14437: ra = 0x210\n 14441: ecalli 6 // 'hash_keccak_256'\n 14443: a3 = u64 [s1 + 0xb8]\n 14447: t0 = 0x212\n 14451: jump @1352\n      : @551 [@dyn 264] (gas: 2)\n 14454: a3 = u64 [s1 + 0xb8]\n 14458: t0 = 530, jump @1352\n      : @552 [@dyn 265] (gas: 8)\n 14464: a1 = u64 [s1 + 0x90]\n 14468: u64 [a1 + 0x18] = a3\n 14471: u64 [a1 + 0x10] = a2\n 14474: u64 [a1 + 0x8] = a4\n 14477: u64 [a1] = a0\n 14479: a0 = s1 + 0x7ff\n 14483: a0 = a0 + 0x741\n 14487: ra = 532, jump @21\n      : @553 [@dyn 266] (gas: 8)\n 14493: a0 = s1 + 0x7ff\n 14497: a0 = a0 + 0x39\n 14500: a0 = u64 [a0 + 0x708]\n 14504: u64 [s1 + 0xb8] = a0\n 14508: a0 = s1 + 0x7ff\n 14512: a0 = a0 + 0x721\n 14516: a1 = 0x40\n 14519: ra = 534, jump @17\n      : @554 [@dyn 267] (gas: 8)\n 14525: a3 = s1 + 0x7ff\n 14529: a3 = a3 + 0x39\n 14532: a4 = u64 [a3 + 0x700]\n 14536: a5 = a3 + 0x600\n 14540: a1 = u64 [a5 + 0xf8]\n 14544: a2 = u64 [a5 + 0xf0]\n 14548: a0 = u64 [a5 + 0xe8]\n 14552: t0 = 536, jump @1354\n      : @555 [@dyn 268] (gas: 1)\n 14558: jump @673 if a1 != 0\n      : @556 (gas: 11)\n 14562: a1 = u8 [s1 + 0xb8]\n 14566: a1 = a1 >u 0\n 14568: u64 [a3 + 1760] = 0\n 14572: u64 [a3 + 1752] = 0\n 14576: u64 [a3 + 0x6c8] = a1\n 14580: a1 = s1 + 0x7ff\n 14584: a1 = a1 + 0x701\n 14588: u64 [a3 + 1744] = 0\n 14592: u64 [s1 + 0xb8] = a0\n 14596: ra = 0x2f8\n 14600: jump @19\n      : @557 (gas: 10)\n 14603: u64 [a2 + 1792] = 0\n 14607: u64 [a2 + 1784] = 0\n 14611: u64 [a2 + 1776] = 0\n 14615: u64 [a2 + 1768] = 0\n 14619: a0 = s1 + 0x1000\n 14623: i32 a0 = a0 + 0x720\n 14627: ra = 0x21a\n 14631: ecalli 10 // 'value_transferred'\n 14633: t0 = 0x21c\n 14637: jump @1421\n      : @558 [@dyn 269] (gas: 1)\n 14640: t0 = 540, jump @1421\n      : @559 [@dyn 270] (gas: 8)\n 14646: a0 = u64 [a4 + 0xf8]\n 14650: a1 = u64 [a3 + 0x700]\n 14654: a2 = u64 [a4 + 0xf0]\n 14658: a3 = u64 [a4 + 0xe8]\n 14662: a1 = a1 | a2\n 14665: a0 = a0 | a3\n 14668: a0 = a0 | a1\n 14671: jump @561 if a0 == 0\n      : @560 (gas: 1)\n 14674: jump @757\n      : @561 (gas: 3)\n 14677: a0 = u64 [s1 + 0xb8]\n 14681: a0 = i32 [a0]\n 14683: jump @563 if a0 >u 35\n      : @562 (gas: 1)\n 14687: jump @758\n      : @563 (gas: 7)\n 14690: a0 = s1 + 0x1000\n 14694: i32 a0 = a0 + 0x740\n 14698: a1 = 0x4\n 14701: ra = 0x21e\n 14705: ecalli 1 // 'call_data_load'\n 14707: t0 = 0x220\n 14711: jump @1385\n      : @564 [@dyn 271] (gas: 1)\n 14714: t0 = 544, jump @1385\n      : @565 [@dyn 272] (gas: 11)\n 14720: a2 = u64 [a4 + 0x8]\n 14723: a0 = u64 [a4 + 0x10]\n 14726: a1 = u64 [a4 + 0x18]\n 14729: a3 = u64 [a4 + 0x20]\n 14732: u64 [s1 + 0x718] = a3\n 14736: u64 [s1 + 0x710] = a1\n 14740: u64 [s1 + 0x708] = a0\n 14744: a0 = s1 + 0x720\n 14748: a1 = s1 + 0x700\n 14752: u64 [s1 + 0x700] = a2\n 14756: ra = 546, jump @1046\n      : @566 [@dyn 273] (gas: 12)\n 14762: a1 = s1 + 0x700\n 14766: a0 = u64 [a1 + 0x38]\n 14769: u64 [s1 + 0xb8] = a0\n 14773: a0 = u64 [a1 + 0x30]\n 14776: u64 [s1 + 0xb0] = a0\n 14780: a0 = u64 [a1 + 0x28]\n 14783: u64 [s1 + 0xa8] = a0\n 14787: a0 = u64 [a1 + 0x20]\n 14790: u64 [s1 + 0xa0] = a0\n 14794: a0 = s1 + 0x6e0\n 14798: a1 = 0x40\n 14801: ra = 548, jump @17\n      : @567 [@dyn 274] (gas: 6)\n 14807: a4 = s1 + 0x600\n 14811: a0 = u64 [a4 + 0xf8]\n 14815: a1 = u64 [a4 + 0xf0]\n 14819: a2 = u64 [a4 + 0xe8]\n 14823: a3 = u64 [a4 + 0xe0]\n 14827: t0 = 550, jump @1407\n      : @568 [@dyn 275] (gas: 1)\n 14833: jump @673 if a0 != 0\n      : @569 (gas: 14)\n 14837: a0 = u64 [s1 + 0xa0]\n 14841: a2 = s1 + 0x600\n 14845: u64 [a2 + 0xc0] = a0\n 14849: a0 = u64 [s1 + 0xa8]\n 14853: u64 [a2 + 0xc8] = a0\n 14857: a0 = u64 [s1 + 0xb0]\n 14861: u64 [a2 + 0xd0] = a0\n 14865: a1 = s1 + 0x6c0\n 14869: a0 = u64 [s1 + 0xb8]\n 14873: u64 [a2 + 0xd8] = a0\n 14877: a0 = a3\n 14879: u64 [s1 + 0xb8] = a3\n 14883: ra = 0x2f8\n 14887: jump @19\n      : @570 (gas: 11)\n 14890: a0 = s1 + 0x1838\n 14894: u64 [a0 + 864] = 0\n 14898: u64 [a0 + 856] = 0\n 14902: u64 [a0 + 848] = 0\n 14906: u64 [a0 + 840] = 0\n 14910: a0 = s1 + 0x2000\n 14914: i32 a0 = a0 + 0xfffffffffffffb80\n 14918: ra = 0x228\n 14922: ecalli 10 // 'value_transferred'\n 14924: t0 = 0x22a\n 14928: jump @1384\n      : @571 [@dyn 276] (gas: 1)\n 14931: t0 = 554, jump @1384\n      : @572 [@dyn 277] (gas: 8)\n 14937: a0 = u64 [a4 + 0x58]\n 14940: a1 = u64 [a4 + 0x60]\n 14943: a2 = u64 [a4 + 0x50]\n 14946: a3 = u64 [a4 + 0x48]\n 14949: a1 = a1 | a2\n 14952: a0 = a0 | a3\n 14955: a0 = a0 | a1\n 14958: jump @574 if a0 == 0\n      : @573 (gas: 1)\n 14961: jump @759\n      : @574 (gas: 3)\n 14964: a0 = u64 [s1 + 0xb8]\n 14968: a0 = i32 [a0]\n 14970: jump @576 if a0 >u 3\n      : @575 (gas: 1)\n 14974: jump @760\n      : @576 (gas: 3)\n 14977: a0 = s1 + 0x1300\n 14981: a1 = 0x40\n 14984: ra = 556, jump @17\n      : @577 [@dyn 278] (gas: 7)\n 14990: a3 = s1 + 0x1038\n 14994: a5 = a3 + 0x200\n 14998: a4 = u64 [a5 + 0xe0]\n 15002: a1 = u64 [a5 + 0xd8]\n 15006: a2 = u64 [a5 + 0xd0]\n 15010: a0 = u64 [a5 + 0xc8]\n 15014: t0 = 558, jump @1354\n      : @578 [@dyn 279] (gas: 1)\n 15020: jump @673 if a1 != 0\n      : @579 (gas: 13)\n 15024: a1 = u64 [0x20048]\n 15029: a5 = a3 + 0x200\n 15033: u64 [a5 + 0xc0] = a1\n 15037: a4 = u64 [0x20050]\n 15042: a1 = u64 [0x20058]\n 15047: a2 = u64 [0x20060]\n 15052: u64 [a5 + 0xb8] = a4\n 15056: u64 [a5 + 0xb0] = a1\n 15060: a1 = s1 + 0x12e0\n 15064: u64 [a5 + 0xa8] = a2\n 15068: u64 [s1 + 0xb8] = a0\n 15072: ra = 0x2f8\n 15076: jump @19\n      : @580 (gas: 10)\n 15079: u64 [a2 + 1728] = 0\n 15083: u64 [a2 + 1720] = 0\n 15087: u64 [a2 + 1712] = 0\n 15091: u64 [a2 + 1704] = 0\n 15095: a0 = s1 + 0x1000\n 15099: i32 a0 = a0 + 0x6e0\n 15103: ra = 0x230\n 15107: ecalli 10 // 'value_transferred'\n 15109: t0 = 0x232\n 15113: jump @1421\n      : @581 [@dyn 280] (gas: 1)\n 15116: t0 = 562, jump @1421\n      : @582 [@dyn 281] (gas: 1)\n 15122: t0 = 564, jump @1381\n      : @583 [@dyn 282] (gas: 1)\n 15128: jump @585 if a0 == 0\n      : @584 (gas: 1)\n 15131: jump @761\n      : @585 (gas: 4)\n 15134: a0 = u64 [s1 + 0xb8]\n 15138: a0 = i32 [a0]\n 15140: a1 = 0x63\n 15143: jump @587 if a1 <u a0\n      : @586 (gas: 1)\n 15146: jump @762\n      : @587 (gas: 4)\n 15149: a0 = s1 + 0x6a0\n 15153: ra = 0x236\n 15157: t0 = 0x416\n 15161: jump @1417\n      : @588 [@dyn 283] (gas: 12)\n 15164: a0 = u64 [s1 + 0x6a0]\n 15168: u64 [s1 + 0xb8] = a0\n 15172: a0 = u64 [s1 + 0x6a8]\n 15176: u64 [s1 + 0xb0] = a0\n 15180: a0 = u64 [s1 + 0x6b0]\n 15184: u64 [s1 + 0xa8] = a0\n 15188: a0 = u64 [s1 + 0x6b8]\n 15192: u64 [s1 + 0xa0] = a0\n 15196: a0 = s1 + 0x680\n 15200: ra = 0x238\n 15204: t0 = 0x420\n 15208: jump @1417\n      : @589 [@dyn 284] (gas: 30)\n 15211: a0 = u64 [s1 + 0x680]\n 15215: u64 [s1 + 0x78] = a0\n 15218: a0 = u64 [s1 + 0x688]\n 15222: u64 [s1 + 0x70] = a0\n 15225: a0 = u64 [s1 + 0x690]\n 15229: u64 [s1 + 0x68] = a0\n 15232: a0 = u64 [s1 + 0x698]\n 15236: u64 [s1 + 0x60] = a0\n 15239: a0 = s1 + 0x1000\n 15243: i32 a0 = a0 + 0x700\n 15247: a1 = 0x44\n 15250: ecalli 1 // 'call_data_load'\n 15252: a0 = s1 + 0x1038\n 15256: a2 = a0 + 0x600\n 15260: a1 = u64 [a2 + 0xc8]\n 15264: u64 [s1 + 0x98] = a1\n 15268: a1 = u64 [a2 + 0xd0]\n 15272: u64 [s1 + 0x90] = a1\n 15276: a1 = u64 [a2 + 0xd8]\n 15280: u64 [s1 + 0x88] = a1\n 15284: a0 = u64 [a2 + 0xe0]\n 15288: u64 [s1 + 0x80] = a0\n 15292: a0 = 0x30280\n 15297: u64 [s1 + 0x58] = a0\n 15300: i32 a0 = a0 + 0\n 15302: ra = 0x23a\n 15306: ecalli 3 // 'caller'\n 15308: a2 = u64 [s1 + 0x58]\n 15311: t0 = 0x23c\n 15315: jump @1344\n      : @590 [@dyn 285] (gas: 2)\n 15318: a2 = u64 [s1 + 0x58]\n 15321: t0 = 572, jump @1344\n      : @591 [@dyn 286] (gas: 24)\n 15327: a2 = u64 [s1 + 0x80]\n 15331: u64 [s1 + 0x638] = a2\n 15335: a2 = u64 [s1 + 0x88]\n 15339: u64 [s1 + 0x630] = a2\n 15343: a2 = u64 [s1 + 0x90]\n 15347: u64 [s1 + 0x628] = a2\n 15351: a2 = u64 [s1 + 0x98]\n 15355: u64 [s1 + 0x620] = a2\n 15359: u64 [s1 + 1624] = 0\n 15363: a2 = u64 [s1 + 0xa0]\n 15367: u64 [s1 + 0x678] = a2\n 15371: a2 = u64 [s1 + 0xa8]\n 15375: u64 [s1 + 0x670] = a2\n 15379: a2 = u64 [s1 + 0xb0]\n 15383: u64 [s1 + 0x668] = a2\n 15387: a2 = u64 [s1 + 0xb8]\n 15391: u64 [s1 + 0x660] = a2\n 15395: u64 [s1 + 0x650] = a1\n 15399: u64 [s1 + 0x648] = a0\n 15403: a0 = s1 + 0x660\n 15407: a1 = s1 + 0x640\n 15411: a2 = s1 + 0x620\n 15415: u64 [s1 + 0x640] = a3\n 15419: ra = 574, jump @1054\n      : @592 [@dyn 287] (gas: 29)\n 15425: a0 = u64 [s1 + 0x80]\n 15429: u64 [s1 + 0x5d8] = a0\n 15433: a0 = u64 [s1 + 0x88]\n 15437: u64 [s1 + 0x5d0] = a0\n 15441: a0 = u64 [s1 + 0x90]\n 15445: u64 [s1 + 0x5c8] = a0\n 15449: a0 = u64 [s1 + 0x98]\n 15453: u64 [s1 + 0x5c0] = a0\n 15457: a0 = u64 [s1 + 0x60]\n 15460: u64 [s1 + 0x5f8] = a0\n 15464: a0 = u64 [s1 + 0x68]\n 15467: u64 [s1 + 0x5f0] = a0\n 15471: a0 = u64 [s1 + 0x70]\n 15474: u64 [s1 + 0x5e8] = a0\n 15478: a0 = u64 [s1 + 0x78]\n 15481: u64 [s1 + 0x5e0] = a0\n 15485: a0 = u64 [s1 + 0xa0]\n 15489: a4 = s1 + 0x600\n 15493: u64 [a4 + 0x18] = a0\n 15496: a0 = u64 [s1 + 0xa8]\n 15500: u64 [a4 + 0x10] = a0\n 15503: a0 = u64 [s1 + 0xb0]\n 15507: u64 [a4 + 0x8] = a0\n 15510: a0 = s1 + 0x600\n 15514: a1 = s1 + 0x5e0\n 15518: a2 = s1 + 0x5c0\n 15522: a3 = u64 [s1 + 0xb8]\n 15526: u64 [a4] = a3\n 15528: ra = 576, jump @1101\n      : @593 [@dyn 288] (gas: 3)\n 15534: a0 = s1 + 0x5a0\n 15538: a1 = 0x40\n 15541: ra = 578, jump @17\n      : @594 [@dyn 289] (gas: 6)\n 15547: a4 = s1 + 0x500\n 15551: a3 = u64 [a4 + 0xb8]\n 15555: a1 = u64 [a4 + 0xb0]\n 15559: a2 = u64 [a4 + 0xa8]\n 15563: a0 = u64 [a4 + 0xa0]\n 15567: t0 = 580, jump @1356\n      : @595 [@dyn 290] (gas: 1)\n 15573: jump @673 if a1 != 0\n      : @596 (gas: 8)\n 15577: u64 [s1 + 1432] = 0\n 15581: u64 [s1 + 1424] = 0\n 15585: u64 [s1 + 1416] = 0\n 15589: a1 = s1 + 0x580\n 15593: u64 [s1 + 1408] = 0x1\n 15598: u64 [s1 + 0xb8] = a0\n 15602: ra = 0x2f8\n 15606: jump @19\n      : @597 (gas: 11)\n 15609: a0 = s1 + 0x1838\n 15613: u64 [a0 + 512] = 0\n 15617: u64 [a0 + 504] = 0\n 15621: u64 [a0 + 496] = 0\n 15625: u64 [a0 + 488] = 0\n 15629: a0 = s1 + 0x2000\n 15633: i32 a0 = a0 + 0xfffffffffffffa20\n 15637: ra = 0x246\n 15641: ecalli 10 // 'value_transferred'\n 15643: t0 = 0x248\n 15647: jump @1399\n      : @598 [@dyn 291] (gas: 1)\n 15650: t0 = 584, jump @1399\n      : @599 [@dyn 292] (gas: 8)\n 15656: a0 = u64 [a4 + 0xf8]\n 15660: a1 = u64 [a3 + 0x200]\n 15664: a2 = u64 [a4 + 0xf0]\n 15668: a3 = u64 [a4 + 0xe8]\n 15672: a1 = a1 | a2\n 15675: a0 = a0 | a3\n 15678: a0 = a0 | a1\n 15681: jump @601 if a0 == 0\n      : @600 (gas: 1)\n 15684: jump @763\n      : @601 (gas: 3)\n 15687: a0 = u64 [s1 + 0xb8]\n 15691: a0 = i32 [a0]\n 15693: jump @603 if a0 >u 3\n      : @602 (gas: 1)\n 15697: jump @764\n      : @603 (gas: 1)\n 15700: ra = 586, jump @1153\n      : @604 [@dyn 293] (gas: 1)\n 15706: ra = 588, jump @1334\n      : @605 [@dyn 294] (gas: 9)\n 15712: a1 = s1 + 0x1838\n 15716: u64 [a1 + 544] = 0\n 15720: u64 [a1 + 536] = 0\n 15724: u64 [a1 + 528] = 0\n 15728: u64 [a1 + 520] = 0x5\n 15733: a0 = s1 + 0x7ff\n 15737: a0 = a0 + 0x6e1\n 15741: a1 = s1 + 0x1a40\n 15745: ra = 590, jump @21\n      : @606 [@dyn 295] (gas: 22)\n 15751: a3 = s1 + 0x7ff\n 15755: a3 = a3 + 0x39\n 15758: a4 = a3 + 0x600\n 15762: a0 = u64 [a4 + 0xa8]\n 15766: a1 = u64 [a4 + 0xb0]\n 15770: a2 = u64 [a4 + 0xb8]\n 15774: a3 = u64 [a4 + 0xc0]\n 15778: a0 = a0 & 0xffffffffffffff00\n 15782: a0 = a0 | 0x1\n 15785: a4 = s1 + 0x1838\n 15789: u64 [a4 + 576] = 0\n 15793: u64 [a4 + 568] = 0\n 15797: u64 [a4 + 560] = 0\n 15801: u64 [a4 + 552] = 0x5\n 15806: a5 = a4 + 0x200\n 15810: u64 [a5 + 0x60] = a3\n 15813: u64 [a5 + 0x58] = a2\n 15816: u64 [a5 + 0x50] = a1\n 15819: u64 [a5 + 0x48] = a0\n 15822: a0 = s1 + 0x1a60\n 15826: a1 = s1 + 0x1a80\n 15830: ra = 592, jump @24\n      : @607 [@dyn 296] (gas: 4)\n 15836: a0 = s1 + 0x7ff\n 15840: a0 = a0 + 0x6c1\n 15844: a1 = 0x40\n 15847: ra = 594, jump @17\n      : @608 [@dyn 297] (gas: 18)\n 15853: a0 = s1 + 0x7ff\n 15857: a0 = a0 + 0x39\n 15860: a2 = a0 + 0x600\n 15864: a1 = u64 [a2 + 0xa0]\n 15868: u64 [s1 + 0xb0] = a1\n 15872: a1 = u64 [a2 + 0x98]\n 15876: u64 [s1 + 0xa8] = a1\n 15880: a1 = u64 [a2 + 0x90]\n 15884: u64 [s1 + 0xa0] = a1\n 15888: a0 = u64 [a2 + 0x88]\n 15892: u64 [s1 + 0xb8] = a0\n 15896: a0 = 0x30280\n 15901: u64 [s1 + 0x98] = a0\n 15905: i32 a0 = a0 + 0\n 15907: ra = 0x254\n 15911: ecalli 3 // 'caller'\n 15913: t0 = 0x256\n 15917: jump @1409\n      : @609 [@dyn 298] (gas: 1)\n 15920: t0 = 598, jump @1409\n      : @610 [@dyn 299] (gas: 1)\n 15926: jump @673 if a0 != 0\n      : @611 (gas: 2)\n 15930: a2 = u64 [s1 + 0x98]\n 15934: t0 = 600, jump @1343\n      : @612 [@dyn 300] (gas: 9)\n 15940: u64 [a2 + 1664] = 0\n 15944: a5 = a2 + 0x600\n 15948: u64 [a5 + 0x78] = a1\n 15951: u64 [a5 + 0x70] = a0\n 15954: a1 = s1 + 0x7ff\n 15958: a1 = a1 + 0x6a1\n 15962: u64 [a5 + 0x68] = a3\n 15965: a0 = a4\n 15967: ra = 602, jump @19\n      : @613 [@dyn 301] (gas: 17)\n 15973: a0 = u64 [0x20088]\n 15978: a1 = u64 [0x20090]\n 15983: a2 = s1 + 0x7ff\n 15987: a2 = a2 + 0x39\n 15990: a4 = a2 + 0x600\n 15994: u64 [a4 + 0x60] = a0\n 15997: a0 = u64 [0x20098]\n 16002: u64 [a4 + 0x58] = a1\n 16005: a3 = u64 [0x200a0]\n 16010: u64 [a4 + 0x50] = a0\n 16013: a0 = a2\n 16015: a1 = 0x20\n 16018: a2 = s1 + 0x7ff\n 16022: a2 = a2 + 0x681\n 16026: u64 [a0 + 0x648] = a3\n 16030: a0 = u64 [s1 + 0xb8]\n 16034: ra = 604, jump @25\n      : @614 [@dyn 302] (gas: 6)\n 16040: a1 = 0x20280\n 16045: i32 a1 = a1 + 0\n 16047: a0 = 0\n 16049: a2 = 0\n 16051: ecalli 7 // 'seal_return'\n 16053: jump @847\n      : @615 (gas: 5)\n 16056: i32 a1 = a1 + 0\n 16058: a0 = 0\n 16060: a2 = 0\n 16062: ecalli 7 // 'seal_return'\n 16064: jump @847\n      : @616 (gas: 9)\n 16067: u64 [a2 + 1472] = 0\n 16071: u64 [a2 + 1464] = 0\n 16075: u64 [a2 + 1456] = 0\n 16079: u64 [a2 + 1448] = 0\n 16083: a0 = s1 + 0x1000\n 16087: i32 a0 = a0 + 0x5e0\n 16091: ra = 0x25e\n 16095: ecalli 10 // 'value_transferred'\n 16097: fallthrough\n      : @617 [@dyn 303] (gas: 3)\n 16098: a3 = s1 + 0x1038\n 16102: a4 = a3 + 0x500\n 16106: t0 = 608, jump @1381\n      : @618 [@dyn 304] (gas: 1)\n 16112: jump @765 if a0 != 0\n      : @619 (gas: 3)\n 16116: a0 = u64 [s1 + 0xb8]\n 16120: a0 = i32 [a0]\n 16122: jump @766 if a0 <=u 3\n      : @620 (gas: 3)\n 16127: a0 = s1 + 0x2a0\n 16131: a1 = 0x40\n 16134: ra = 610, jump @17\n      : @621 [@dyn 305] (gas: 16)\n 16140: a0 = u64 [s1 + 0x2b8]\n 16144: u64 [s1 + 0x18] = a0\n 16147: a0 = u64 [s1 + 0x2b0]\n 16151: u64 [s1 + 0x28] = a0\n 16154: a0 = u64 [s1 + 0x2a8]\n 16158: u64 [s1 + 0x20] = a0\n 16161: a0 = u64 [s1 + 0x2a0]\n 16165: u64 [s1 + 0x30] = a0\n 16168: a0 = s1 + 0x1038\n 16172: u64 [a0 + 1504] = 0\n 16176: u64 [a0 + 1496] = 0\n 16180: u64 [a0 + 1488] = 0\n 16184: u64 [a0 + 1480] = 0x3\n 16189: a0 = s1 + 0x280\n 16193: a1 = s1 + 0x1600\n 16197: ra = 612, jump @21\n      : @622 [@dyn 306] (gas: 34)\n 16203: a2 = u64 [s1 + 0x290]\n 16207: t2 = u64 [s1 + 0x288]\n 16211: t0 = u64 [s1 + 0x298]\n 16215: a5 = u64 [s1 + 0x280]\n 16219: a0 = a2 << 0x3f\n 16222: a1 = t2 >> 0x1\n 16225: a0 = a0 | a1\n 16228: a1 = t0 << 0x3f\n 16231: u64 [s1 + 0xb0] = a2\n 16235: a2 = a2 >> 0x1\n 16238: a1 = a1 | a2\n 16241: a2 = t2 << 0x3f\n 16244: a3 = a5 >> 0x1\n 16247: a4 = a3 | a2\n 16250: a2 = t0 >> 0x1\n 16253: u64 [s1 + 0xa8] = a5\n 16257: a5 = a5 & 0x1\n 16260: a3 = -a5\n 16262: a1 = a1 & a3\n 16265: t1 = a3 & a0\n 16268: a2 = a2 & a3\n 16271: ra = a4 & 0x7f\n 16274: a4 = ra if a5 == 0\n 16277: u64 [s1 + 0x70] = a4\n 16280: a0 = a4 <u 0x20\n 16283: u64 [s1 + 0x60] = t1\n 16286: a0 = 0 if t1 != 0\n 16288: u64 [s1 + 0x68] = a1\n 16291: u64 [s1 + 0x58] = a2\n 16294: a1 = a1 | a2\n 16297: a0 = 0 if a1 != 0\n 16299: u64 [s1 + 0xb8] = a5\n 16303: a1 = a5 <u 0x1\n 16306: jump @767 if a1 != a0\n      : @623 (gas: 12)\n 16310: a2 = u64 [s1 + 0x28]\n 16313: a4 = u64 [s1 + 0x30]\n 16316: a0 = a4 | a2\n 16319: a1 = u64 [s1 + 0x18]\n 16322: a3 = u64 [s1 + 0x20]\n 16325: a1 = a1 | a3\n 16328: a0 = a0 | a1\n 16331: a0 = a0 >> 0x20\n 16334: a1 = a1 | a2\n 16337: a1 = a1 << 0x20\n 16340: a1 = a1 | a0\n 16343: jump @673 if a1 != 0\n      : @624 (gas: 15)\n 16347: a0 = a4\n 16349: u64 [s1 + 0x90] = ra\n 16353: u64 [s1 + 0x98] = t2\n 16357: u64 [s1 + 0xa0] = t0\n 16361: a1 = u64 [s1 + 0x70]\n 16364: a3 = s1 + 0x200\n 16368: u64 [a3 + 0x60] = a1\n 16371: a1 = u64 [s1 + 0x60]\n 16374: u64 [a3 + 0x68] = a1\n 16377: a1 = u64 [s1 + 0x68]\n 16380: u64 [a3 + 0x70] = a1\n 16383: a1 = s1 + 0x260\n 16387: a2 = u64 [s1 + 0x58]\n 16390: u64 [a3 + 0x78] = a2\n 16393: ra = 614, jump @19\n      : @625 [@dyn 307] (gas: 2)\n 16399: a0 = u64 [s1 + 0xb8]\n 16403: jump @687 if a0 != 0\n      : @626 (gas: 1)\n 16407: t0 = 616, jump @1391\n      : @627 [@dyn 308] (gas: 1)\n 16413: jump @673 if a1 == 0\n      : @628 (gas: 13)\n 16417: a1 = u64 [s1 + 0xa8]\n 16421: a1 = a1 & 0xffffffffffffff00\n 16425: i32 a0 = a3 + 0x20\n 16428: a3 = u64 [s1 + 0x98]\n 16432: a2 = s1 + 0x100\n 16436: u64 [a2 + 0xe8] = a3\n 16440: u64 [a2 + 0xe0] = a1\n 16444: a1 = u64 [s1 + 0xb0]\n 16448: u64 [a2 + 0xf0] = a1\n 16452: a1 = s1 + 0x1e0\n 16456: a3 = u64 [s1 + 0xa0]\n 16460: u64 [a2 + 0xf8] = a3\n 16464: ra = 618, jump @19\n      : @629 [@dyn 309] (gas: 9)\n 16470: t2 = 0\n 16472: t1 = 0\n 16474: u64 [s1 + 176] = 0\n 16478: a0 = u64 [s1 + 0x90]\n 16482: a0 = a0 >u 0\n 16484: a0 = a0 << 0x5\n 16487: u64 [s1 + 0xb8] = a0\n 16491: t0 = 0x26c\n 16495: jump @1390\n      : @630 (gas: 1)\n 16498: t0 = 620, jump @1390\n      : @631 [@dyn 310] (gas: 28)\n 16504: t0 = u64 [s1 + 0x20]\n 16507: a3 = a2 + t0\n 16510: ra = a3 + a0\n 16513: a3 = ra ^ a2\n 16516: a4 = ra <u a2\n 16519: a4 = a0 if a3 == 0\n 16522: a0 = a2 <u t2\n 16525: a0 = a1 if a1 == 0\n 16528: a0 = a0 + t1\n 16531: a1 = a0 <u t1\n 16534: a2 = u64 [s1 + 0x28]\n 16537: a2 = a2 + a0\n 16540: a4 = a4 + a2\n 16543: a0 = a2 <u a0\n 16546: a2 = a4 <u a2\n 16549: t1 = u64 [s1 + 0x18]\n 16552: a3 = u64 [s1 + 0xb0]\n 16556: a3 = a3 + t1\n 16559: a1 = a1 + a3\n 16562: a0 = a0 + a1\n 16565: a5 = a0 + a2\n 16568: a0 = a5 >u 0\n 16570: a1 = a4 >u 0\n 16572: a1 = a0 if a5 != 0\n 16575: a0 = a4 | a5\n 16578: a2 = ra >u 0\n 16580: a2 = a1 if a0 != 0\n 16583: jump @791 if a2 != 0\n      : @632 (gas: 6)\n 16587: a0 = u64 [s1 + 0x30]\n 16590: a1 = u64 [s1 + 0xb8]\n 16594: a0 = a1 <u a0\n 16597: a1 = ra ^ t0\n 16600: a2 = ra <u t0\n 16603: t0 = 622, jump @1387\n      : @633 [@dyn 311] (gas: 1)\n 16609: jump @791 if a3 != 0\n      : @634 (gas: 11)\n 16613: a0 = u64 [s1 + 0xb8]\n 16617: u64 [s1 + 0x1c0] = a0\n 16621: u64 [s1 + 0x1c8] = ra\n 16625: u64 [s1 + 0x1d0] = a4\n 16629: a0 = 0x40\n 16632: a1 = s1 + 0x1c0\n 16636: u64 [s1 + 0x1d8] = a5\n 16640: u64 [s1 + 0xa8] = ra\n 16644: u64 [s1 + 0xa0] = a4\n 16648: u64 [s1 + 0xb0] = a5\n 16652: ra = 624, jump @19\n      : @635 [@dyn 312] (gas: 21)\n 16658: a0 = u64 [s1 + 0x18]\n 16661: a4 = s1 + 0x100\n 16665: u64 [a4 + 0x78] = a0\n 16668: a0 = u64 [s1 + 0x28]\n 16671: u64 [a4 + 0x70] = a0\n 16674: a0 = u64 [s1 + 0x20]\n 16677: u64 [a4 + 0x68] = a0\n 16680: a0 = u64 [s1 + 0x30]\n 16683: u64 [a4 + 0x60] = a0\n 16686: a0 = u64 [s1 + 0xb0]\n 16690: u64 [a4 + 0x98] = a0\n 16694: a0 = u64 [s1 + 0xa0]\n 16698: u64 [a4 + 0x90] = a0\n 16702: a0 = u64 [s1 + 0xa8]\n 16706: u64 [a4 + 0x88] = a0\n 16710: a0 = s1 + 0x1a0\n 16714: a1 = s1 + 0x180\n 16718: a2 = s1 + 0x160\n 16722: a3 = u64 [s1 + 0xb8]\n 16726: u64 [a4 + 0x80] = a3\n 16730: ra = 626, jump @1017\n      : @636 [@dyn 313] (gas: 12)\n 16736: a2 = u64 [s1 + 0xa0]\n 16740: a4 = u64 [s1 + 0xa8]\n 16744: t0 = u64 [s1 + 0xb8]\n 16748: a0 = t0 | a2\n 16751: a1 = u64 [s1 + 0xb0]\n 16755: a1 = a1 | a4\n 16758: a0 = a0 | a1\n 16761: a0 = a0 >> 0x20\n 16764: a1 = a1 | a2\n 16767: a1 = a1 << 0x20\n 16770: a0 = a0 | a1\n 16773: jump @673 if a0 != 0\n      : @637 (gas: 7)\n 16777: a5 = s1 + 0x100\n 16781: a0 = u64 [a5 + 0xa8]\n 16785: a1 = u64 [a5 + 0xb8]\n 16789: u64 [s1 + 0x98] = a1\n 16793: t1 = u64 [s1 + 0x1a0]\n 16797: a3 = u64 [a5 + 0xb0]\n 16801: fallthrough\n      : @638 (gas: 24)\n 16802: t2 = a0 ^ a4\n 16805: a5 = a0 <u a4\n 16808: ra = t1 <u t0\n 16811: a5 = ra if t2 == 0\n 16814: a1 = a3 - a2\n 16817: t2 = a1 - a5\n 16820: a1 = a1 <u a5\n 16823: a3 = a3 <u a2\n 16826: a2 = u64 [s1 + 0x98]\n 16830: a3 = a2 - a3\n 16833: a2 = u64 [s1 + 0xb0]\n 16837: a3 = a3 - a2\n 16840: a3 = a3 - a1\n 16843: a0 = a0 - a4\n 16846: a0 = a0 - ra\n 16849: a1 = t1 - t0\n 16852: a0 = a0 | a3\n 16855: a2 = a1 | t2\n 16858: a2 = a2 | a0\n 16861: a0 = a0 | t2\n 16864: a2 = a2 >> 0x20\n 16867: a0 = a0 << 0x20\n 16870: a0 = a0 | a2\n 16873: jump @673 if a0 != 0\n      : @639 (gas: 3)\n 16877: a0 = t0\n 16879: u64 [s1 + 0xb8] = a1\n 16883: ra = 628, jump @33\n      : @640 [@dyn 314] (gas: 6)\n 16889: i32 a1 = a0 + 0\n 16891: a2 = i32 [s1 + 0xb8]\n 16895: a0 = 0\n 16897: ra = 0x2fc\n 16901: ecalli 7 // 'seal_return'\n 16903: jump @802\n      : @641 (gas: 10)\n 16906: u64 [a2 + 1600] = 0\n 16910: u64 [a2 + 1592] = 0\n 16914: u64 [a2 + 1584] = 0\n 16918: u64 [a2 + 1576] = 0\n 16922: a0 = s1 + 0x1000\n 16926: i32 a0 = a0 + 0x660\n 16930: ra = 0x276\n 16934: ecalli 10 // 'value_transferred'\n 16936: t0 = 0x278\n 16940: jump @1421\n      : @642 [@dyn 315] (gas: 1)\n 16943: t0 = 632, jump @1421\n      : @643 [@dyn 316] (gas: 1)\n 16949: t0 = 634, jump @1415\n      : @644 [@dyn 317] (gas: 1)\n 16955: jump @773 if a0 != 0\n      : @645 (gas: 4)\n 16959: a0 = u64 [s1 + 0xb8]\n 16963: a0 = i32 [a0]\n 16965: a1 = 0x43\n 16968: jump @774 if a1 >=u a0\n      : @646 (gas: 4)\n 16972: a0 = s1 + 0x500\n 16976: ra = 0x27c\n 16980: t0 = 0x416\n 16984: jump @1417\n      : @647 [@dyn 318] (gas: 36)\n 16987: a1 = s1 + 0x500\n 16991: a0 = u64 [a1 + 0x10]\n 16994: u64 [s1 + 0x98] = a0\n 16998: a0 = u64 [a1 + 0x8]\n 17001: u64 [s1 + 0xb0] = a0\n 17005: a0 = u64 [a1]\n 17007: u64 [s1 + 0xb8] = a0\n 17011: a0 = sp + 0xffffffffffffffe0\n 17014: a0 = a0 & 0xffffffffffffffe0\n 17017: u64 [s1 + 0xa0] = a0\n 17021: sp = a0\n 17023: a0 = s1 + 0x1000\n 17027: i32 a0 = a0 + 0x680\n 17031: a1 = 0x24\n 17034: ecalli 1 // 'call_data_load'\n 17036: a0 = s1 + 0x1038\n 17040: a4 = a0 + 0x600\n 17044: a1 = u64 [a4 + 0x60]\n 17047: a2 = u64 [a4 + 0x58]\n 17050: a3 = u64 [a4 + 0x50]\n 17053: a0 = u64 [a4 + 0x48]\n 17056: u64 [s1 + 0x50] = a1\n 17059: a4 = u64 [s1 + 0xa0]\n 17063: u64 [a4 + 0x18] = a1\n 17066: u64 [s1 + 0x48] = a2\n 17069: u64 [a4 + 0x10] = a2\n 17072: u64 [s1 + 0x40] = a3\n 17075: u64 [a4 + 0x8] = a3\n 17078: u64 [s1 + 0x38] = a0\n 17081: u64 [a4] = a0\n 17083: a0 = 0x30280\n 17088: u64 [s1 + 0xa8] = a0\n 17092: i32 a0 = a0 + 0\n 17094: u64 [s1 + 0x90] = a0\n 17098: ecalli 3 // 'caller'\n 17100: fallthrough\n      : @648 (gas: 7)\n 17101: a2 = u64 [s1 + 0xa8]\n 17105: a0 = u32 [a2 + 0x10]\n 17108: a1 = u64 [a2]\n 17110: a2 = u64 [a2 + 0x8]\n 17113: a0 = a0 | a1\n 17116: a0 = a0 | a2\n 17119: jump @775 if a0 == 0\n      : @649 (gas: 9)\n 17123: a0 = u64 [s1 + 0x98]\n 17127: a0 = a0 << 0x20\n 17130: a1 = a0 >> 0x20\n 17133: a0 = u64 [s1 + 0xb0]\n 17137: a2 = u64 [s1 + 0xb8]\n 17141: a0 = a0 | a2\n 17144: u64 [s1 + 0x98] = a1\n 17148: a0 = a0 | a1\n 17151: jump @780 if a0 == 0\n      : @650 (gas: 6)\n 17155: a0 = u64 [s1 + 0x90]\n 17159: ra = 0x27e\n 17163: ecalli 3 // 'caller'\n 17165: a2 = u64 [s1 + 0xa8]\n 17169: t0 = 0x280\n 17173: jump @1344\n      : @651 [@dyn 319] (gas: 2)\n 17176: a2 = u64 [s1 + 0xa8]\n 17180: t0 = 640, jump @1344\n      : @652 [@dyn 320] (gas: 7)\n 17186: u64 [s1 + 1272] = 0\n 17190: u64 [s1 + 0x4f0] = a1\n 17194: u64 [s1 + 0x4e8] = a0\n 17198: a1 = s1 + 0x4e0\n 17202: u64 [s1 + 0x4e0] = a3\n 17206: a0 = 0\n 17208: ra = 642, jump @19\n      : @653 [@dyn 321] (gas: 7)\n 17214: u64 [s1 + 1240] = 0\n 17218: u64 [s1 + 1232] = 0\n 17222: u64 [s1 + 1216] = 0x1\n 17227: a0 = 0x20\n 17230: a1 = s1 + 0x4c0\n 17234: u64 [s1 + 1224] = 0\n 17238: ra = 644, jump @19\n      : @654 [@dyn 322] (gas: 3)\n 17244: a1 = 0x2026c\n 17249: a0 = i32 [0x2026c]\n 17254: jump @656 if a0 >u 63\n      : @655 (gas: 2)\n 17258: u32 [0x2026c] = 0x40\n 17264: fallthrough\n      : @656 (gas: 15)\n 17265: a0 = sp + 0xffffffffffffffe0\n 17268: a2 = a0 & 0xffffffffffffffe0\n 17271: u64 [s1 + 0x78] = a2\n 17274: sp = a2\n 17276: a0 = 0x20280\n 17281: i32 a0 = a0 + 0\n 17283: i32 a2 = a2 + 0\n 17285: u64 [s1 + 0x88] = a1\n 17289: a1 = 0x40\n 17292: u64 [s1 + 0x80] = a0\n 17296: ra = 0x286\n 17300: ecalli 6 // 'hash_keccak_256'\n 17302: a3 = u64 [s1 + 0x78]\n 17305: t0 = 0x288\n 17309: jump @1406\n      : @657 [@dyn 323] (gas: 2)\n 17312: a3 = u64 [s1 + 0x78]\n 17315: t0 = 648, jump @1406\n      : @658 [@dyn 324] (gas: 21)\n 17321: u64 [s1 + 0x70] = a0\n 17324: a0 = reverse a1\n 17326: u64 [s1 + 0x68] = a0\n 17329: a0 = reverse a2\n 17331: u64 [s1 + 0x60] = a0\n 17334: a0 = reverse a3\n 17336: u64 [s1 + 0x58] = a0\n 17339: a0 = sp + 0xffffffffffffffe0\n 17342: a0 = a0 & 0xffffffffffffffe0\n 17345: u64 [s1 + 0x78] = a0\n 17348: sp = a0\n 17350: u64 [s1 + 1208] = 0\n 17354: a0 = u64 [s1 + 0x98]\n 17358: u64 [s1 + 0x4b0] = a0\n 17362: a0 = u64 [s1 + 0xb0]\n 17366: u64 [s1 + 0x4a8] = a0\n 17370: a1 = s1 + 0x4a0\n 17374: a0 = u64 [s1 + 0xb8]\n 17378: u64 [s1 + 0x4a0] = a0\n 17382: a0 = 0\n 17384: ra = 650, jump @19\n      : @659 [@dyn 325] (gas: 12)\n 17390: a0 = u64 [s1 + 0x58]\n 17393: a3 = s1 + 0x400\n 17397: u64 [a3 + 0x98] = a0\n 17401: a0 = u64 [s1 + 0x60]\n 17404: u64 [a3 + 0x90] = a0\n 17408: a0 = u64 [s1 + 0x68]\n 17411: u64 [a3 + 0x88] = a0\n 17415: a0 = 0x20\n 17418: a1 = s1 + 0x480\n 17422: a2 = u64 [s1 + 0x70]\n 17425: u64 [a3 + 0x80] = a2\n 17429: ra = 652, jump @19\n      : @660 [@dyn 326] (gas: 3)\n 17435: a1 = u64 [s1 + 0x88]\n 17439: a0 = i32 [a1]\n 17441: jump @662 if a0 >u 63\n      : @661 (gas: 2)\n 17445: u32 [a1 + 0] = 0x40\n 17448: fallthrough\n      : @662 (gas: 24)\n 17449: a0 = sp + 0xffffffffffffffe0\n 17452: a0 = a0 & 0xffffffffffffffe0\n 17455: u64 [s1 + 0x88] = a0\n 17459: sp = a0\n 17461: i32 a2 = a0 + 0\n 17463: a1 = 0x40\n 17466: a0 = u64 [s1 + 0x80]\n 17470: ecalli 6 // 'hash_keccak_256'\n 17472: a3 = u64 [s1 + 0x88]\n 17476: a0 = u64 [a3 + 0x18]\n 17479: a1 = u64 [a3 + 0x10]\n 17482: a2 = u64 [a3 + 0x8]\n 17485: a3 = u64 [a3]\n 17487: a4 = reverse a0\n 17489: a1 = reverse a1\n 17491: a2 = reverse a2\n 17493: a3 = reverse a3\n 17495: a0 = u64 [s1 + 0x78]\n 17498: u64 [a0 + 0x18] = a3\n 17501: u64 [a0 + 0x10] = a2\n 17504: u64 [a0 + 0x8] = a1\n 17507: u64 [a0] = a4\n 17509: a1 = u64 [s1 + 0xa0]\n 17513: ra = 654, jump @24\n      : @663 [@dyn 327] (gas: 3)\n 17519: a0 = s1 + 0x460\n 17523: a1 = 0x40\n 17526: ra = 656, jump @17\n      : @664 [@dyn 328] (gas: 6)\n 17532: a4 = s1 + 0x400\n 17536: a0 = u64 [a4 + 0x78]\n 17539: a1 = u64 [a4 + 0x70]\n 17542: a2 = u64 [a4 + 0x68]\n 17545: a3 = u64 [a4 + 0x60]\n 17548: t0 = 658, jump @1407\n      : @665 [@dyn 329] (gas: 1)\n 17554: jump @673 if a0 != 0\n      : @666 (gas: 12)\n 17558: a0 = u64 [s1 + 0x38]\n 17561: u64 [s1 + 0x440] = a0\n 17565: a0 = u64 [s1 + 0x40]\n 17568: u64 [s1 + 0x448] = a0\n 17572: a0 = u64 [s1 + 0x48]\n 17575: u64 [s1 + 0x450] = a0\n 17579: a1 = s1 + 0x440\n 17583: a0 = u64 [s1 + 0x50]\n 17586: u64 [s1 + 0x458] = a0\n 17590: a0 = a3\n 17592: u64 [s1 + 0xa0] = a3\n 17596: ra = 660, jump @19\n      : @667 [@dyn 330] (gas: 6)\n 17602: a0 = u64 [s1 + 0x90]\n 17606: ra = 0x296\n 17610: ecalli 3 // 'caller'\n 17612: a2 = u64 [s1 + 0xa8]\n 17616: t0 = 0x298\n 17620: jump @1347\n      : @668 [@dyn 331] (gas: 2)\n 17623: a2 = u64 [s1 + 0xa8]\n 17627: t0 = 664, jump @1347\n      : @669 [@dyn 332] (gas: 32)\n 17633: t0 = a1 | a0\n 17636: a3 = a3 >> 0x20\n 17639: a2 = reverse a2\n 17641: a1 = a2 << 0x20\n 17644: a1 = a1 | a3\n 17647: a2 = a2 >> 0x20\n 17650: u64 [s1 + 1016] = 0\n 17654: a0 = u64 [s1 + 0x98]\n 17658: u64 [s1 + 0x3f0] = a0\n 17662: a0 = u64 [s1 + 0xb0]\n 17666: u64 [s1 + 0x3e8] = a0\n 17670: a0 = u64 [s1 + 0xb8]\n 17674: u64 [s1 + 0x3e0] = a0\n 17678: u64 [s1 + 1048] = 0\n 17682: a3 = u64 [0x200e8]\n 17687: a4 = u64 [0x200f0]\n 17692: a5 = u64 [0x200f8]\n 17697: a0 = u64 [0x20100]\n 17702: u64 [s1 + 0x438] = a3\n 17706: a3 = s1 + 0x400\n 17710: u64 [a3 + 0x30] = a4\n 17713: u64 [a3 + 0x28] = a5\n 17716: u64 [a3 + 0x20] = a0\n 17719: u64 [a3 + 0x10] = a2\n 17722: u64 [a3 + 0x8] = a1\n 17725: a1 = 0x20\n 17728: a2 = s1 + 0x420\n 17732: a3 = s1 + 0x400\n 17736: a4 = s1 + 0x3e0\n 17740: u64 [s1 + 0x400] = t0\n 17744: a0 = u64 [s1 + 0xa0]\n 17748: ra = 666, jump @27\n      : @670 [@dyn 333] (gas: 3)\n 17754: a0 = s1 + 0x3c0\n 17758: a1 = 0x40\n 17761: ra = 668, jump @17\n      : @671 [@dyn 334] (gas: 6)\n 17767: a4 = s1 + 0x300\n 17771: a3 = u64 [a4 + 0xd8]\n 17775: a1 = u64 [a4 + 0xd0]\n 17779: a2 = u64 [a4 + 0xc8]\n 17783: a0 = u64 [a4 + 0xc0]\n 17787: t0 = 670, jump @1356\n      : @672 [@dyn 335] (gas: 1)\n 17793: jump @798 if a1 == 0\n      : @673 (gas: 1)\n 17797: trap\n      : @674 (gas: 8)\n 17798: a2 = s1 + 0x1038\n 17802: u64 [a2 + 320] = 0\n 17806: u64 [a2 + 312] = 0\n 17810: u64 [a2 + 304] = 0\n 17814: a1 = s1 + 0x1160\n 17818: u64 [a2 + 296] = 0x4\n 17823: a0 = 0\n 17825: ra = 672, jump @19\n      : @675 [@dyn 336] (gas: 1)\n 17831: t0 = 674, jump @1414\n      : @676 [@dyn 337] (gas: 30)\n 17837: t0 = u64 [0x20068]\n 17842: a3 = u64 [0x20070]\n 17847: a1 = u64 [s1 + 0x30]\n 17850: a0 = a1 + 0x20\n 17853: u64 [s1 + 0x50] = a0\n 17856: a0 = a0 <u a1\n 17859: a1 = u64 [s1 + 0x20]\n 17862: a2 = a1 + a0\n 17865: u64 [s1 + 0x48] = a2\n 17868: a1 = a2 <u a1\n 17871: a1 = a0 if a0 == 0\n 17874: a5 = u64 [0x20078]\n 17879: a0 = u64 [0x20080]\n 17884: ra = t0\n 17886: u64 [a4 + 0x18] = t0\n 17889: u64 [s1 + 0x78] = a3\n 17892: u64 [a4 + 0x10] = a3\n 17895: t0 = a5\n 17897: u64 [a4 + 0x8] = a5\n 17900: u64 [s1 + 0x98] = a4\n 17904: a2 = a0\n 17906: u64 [a4] = a0\n 17908: a0 = u64 [s1 + 0x28]\n 17911: a1 = a1 + a0\n 17914: u64 [s1 + 0x40] = a1\n 17917: a0 = a1 <u a0\n 17920: a1 = u64 [s1 + 0x18]\n 17923: a0 = a0 + a1\n 17926: u64 [s1 + 0x38] = a0\n 17929: fallthrough\n      : @677 (gas: 3)\n 17930: u64 [s1 + 0x80] = a2\n 17934: u64 [s1 + 0x88] = t0\n 17938: t0 = 676, jump @1363\n      : @678 [@dyn 338] (gas: 1)\n 17944: jump @680 if a3 != 0\n      : @679 (gas: 1)\n 17947: jump @331\n      : @680 (gas: 5)\n 17950: a0 = s1 + 0x1140\n 17954: a1 = u64 [s1 + 0x98]\n 17958: u64 [s1 + 0xa8] = t1\n 17962: u64 [s1 + 0xa0] = t2\n 17966: ra = 678, jump @21\n      : @681 [@dyn 339] (gas: 1)\n 17972: t0 = 680, jump @1367\n      : @682 [@dyn 340] (gas: 6)\n 17978: t0 = a1 <u a5\n 17981: a5 = u64 [s1 + 0xb0]\n 17985: a3 = u64 [s1 + 0x38]\n 17988: a5 = a5 + a3\n 17991: a5 = a5 + t0\n 17994: t0 = 682, jump @1401\n      : @683 [@dyn 341] (gas: 1)\n 18000: jump @673 if a1 != 0\n      : @684 (gas: 13)\n 18004: a5 = s1 + 0x1038\n 18008: t0 = u64 [a5 + 0x120]\n 18012: a3 = a5 + 0x100\n 18016: a1 = u64 [a3 + 0x18]\n 18019: a2 = u64 [a3 + 0x10]\n 18022: a4 = u64 [a3 + 0x8]\n 18025: u64 [a5 + 0xe8] = a4\n 18029: u64 [a5 + 0xf0] = a2\n 18033: u64 [a5 + 0xf8] = a1\n 18037: a1 = s1 + 0x1120\n 18041: u64 [a5 + 0x100] = t0\n 18045: u64 [s1 + 0xb8] = t2\n 18049: ra = 684, jump @19\n      : @685 [@dyn 342] (gas: 1)\n 18055: t0 = 686, jump @1349\n      : @686 [@dyn 343] (gas: 14)\n 18061: t0 = ra\n 18063: a5 = u64 [s1 + 0x98]\n 18067: u64 [a5 + 0x8] = ra\n 18070: a2 = a3\n 18072: u64 [a5] = a3\n 18074: a3 = t2\n 18076: u64 [a5 + 0x10] = a3\n 18079: ra = a0\n 18081: u64 [a5 + 0x18] = a0\n 18084: u64 [s1 + 0x78] = a3\n 18087: u64 [s1 + 0xb8] = t1\n 18091: t2 = a1\n 18093: t1 = a4\n 18095: jump @677\n      : @687 (gas: 7)\n 18098: u64 [s1 + 600] = 0\n 18102: u64 [s1 + 592] = 0\n 18106: u64 [s1 + 584] = 0\n 18110: a1 = s1 + 0x240\n 18114: u64 [s1 + 576] = 0x3\n 18119: a0 = 0\n 18121: ra = 688, jump @19\n      : @688 [@dyn 344] (gas: 1)\n 18127: t0 = 690, jump @1414\n      : @689 [@dyn 345] (gas: 30)\n 18133: t0 = u64 [0x20108]\n 18138: a3 = u64 [0x20110]\n 18143: a1 = u64 [s1 + 0x30]\n 18146: a0 = a1 + 0x20\n 18149: u64 [s1 + 0x50] = a0\n 18152: a0 = a0 <u a1\n 18155: a1 = u64 [s1 + 0x20]\n 18158: a2 = a1 + a0\n 18161: u64 [s1 + 0x48] = a2\n 18164: a1 = a2 <u a1\n 18167: a1 = a0 if a0 == 0\n 18170: a5 = u64 [0x20118]\n 18175: a0 = u64 [0x20120]\n 18180: ra = t0\n 18182: u64 [a4 + 0x18] = t0\n 18185: u64 [s1 + 0x78] = a3\n 18188: u64 [a4 + 0x10] = a3\n 18191: t0 = a5\n 18193: u64 [a4 + 0x8] = a5\n 18196: u64 [s1 + 0x98] = a4\n 18200: a2 = a0\n 18202: u64 [a4] = a0\n 18204: a0 = u64 [s1 + 0x28]\n 18207: a1 = a1 + a0\n 18210: u64 [s1 + 0x40] = a1\n 18213: a0 = a1 <u a0\n 18216: a1 = u64 [s1 + 0x18]\n 18219: a0 = a0 + a1\n 18222: u64 [s1 + 0x38] = a0\n 18225: fallthrough\n      : @690 (gas: 3)\n 18226: u64 [s1 + 0x80] = a2\n 18230: u64 [s1 + 0x88] = t0\n 18234: t0 = 692, jump @1363\n      : @691 [@dyn 346] (gas: 1)\n 18240: jump @630 if a3 == 0\n      : @692 (gas: 5)\n 18244: a0 = s1 + 0x220\n 18248: a1 = u64 [s1 + 0x98]\n 18252: u64 [s1 + 0xa8] = t1\n 18256: u64 [s1 + 0xa0] = t2\n 18260: ra = 694, jump @21\n      : @693 [@dyn 347] (gas: 1)\n 18266: t0 = 696, jump @1367\n      : @694 [@dyn 348] (gas: 6)\n 18272: t0 = a1 <u a5\n 18275: a5 = u64 [s1 + 0xb0]\n 18279: a3 = u64 [s1 + 0x38]\n 18282: a5 = a5 + a3\n 18285: a5 = a5 + t0\n 18288: t0 = 698, jump @1401\n      : @695 [@dyn 349] (gas: 1)\n 18294: jump @673 if a1 != 0\n      : @696 (gas: 12)\n 18298: a3 = s1 + 0x200\n 18302: a2 = u64 [a3 + 0x38]\n 18305: a1 = u64 [a3 + 0x30]\n 18308: a5 = u64 [a3 + 0x28]\n 18311: a4 = u64 [a3 + 0x20]\n 18314: u64 [a3] = a4\n 18316: u64 [a3 + 0x8] = a5\n 18319: u64 [a3 + 0x10] = a1\n 18322: a1 = s1 + 0x200\n 18326: u64 [a3 + 0x18] = a2\n 18329: u64 [s1 + 0xb8] = t2\n 18333: ra = 700, jump @19\n      : @697 [@dyn 350] (gas: 1)\n 18339: t0 = 702, jump @1349\n      : @698 [@dyn 351] (gas: 14)\n 18345: t0 = ra\n 18347: a5 = u64 [s1 + 0x98]\n 18351: u64 [a5 + 0x8] = ra\n 18354: a2 = a3\n 18356: u64 [a5] = a3\n 18358: a3 = t2\n 18360: u64 [a5 + 0x10] = a3\n 18363: ra = a0\n 18365: u64 [a5 + 0x18] = a0\n 18368: u64 [s1 + 0x78] = a3\n 18371: u64 [s1 + 0xb8] = t1\n 18375: t2 = a1\n 18377: t1 = a4\n 18379: jump @690\n      : @699 (gas: 6)\n 18382: a1 = 0x20280\n 18387: i32 a1 = a1 + 0\n 18389: a0 = 0x1\n 18392: a2 = 0\n 18394: ecalli 7 // 'seal_return'\n 18396: jump @847\n      : @700 (gas: 6)\n 18399: a1 = 0x20280\n 18404: i32 a1 = a1 + 0\n 18406: a0 = 0x1\n 18409: a2 = 0\n 18411: ecalli 7 // 'seal_return'\n 18413: jump @847\n      : @701 (gas: 6)\n 18416: a1 = 0x20280\n 18421: i32 a1 = a1 + 0\n 18423: a0 = 0x1\n 18426: a2 = 0\n 18428: ecalli 7 // 'seal_return'\n 18430: jump @847\n      : @702 (gas: 6)\n 18433: a1 = 0x20280\n 18438: i32 a1 = a1 + 0\n 18440: a0 = 0x1\n 18443: a2 = 0\n 18445: ecalli 7 // 'seal_return'\n 18447: jump @847\n      : @703 (gas: 11)\n 18450: a0 = s1 + 0x7ff\n 18454: a0 = a0 + 0x39\n 18457: u64 [a0 + 2040] = 0\n 18461: u64 [a0 + 2032] = 0\n 18465: u64 [a0 + 2024] = 0\n 18469: a0 = 0x4e487b7100000000\n 18479: a1 = s1 + 0x1020\n 18483: a2 = s1 + 0x1038\n 18487: u64 [a2] = a0\n 18489: a0 = 0\n 18491: ra = 704, jump @19\n      : @704 [@dyn 352] (gas: 10)\n 18497: a1 = s1 + 0x7ff\n 18501: a1 = a1 + 0x39\n 18504: u64 [a1 + 2016] = 0\n 18508: u64 [a1 + 2008] = 0\n 18512: u64 [a1 + 1992] = 0x22\n 18517: a2 = a1\n 18519: a0 = 0x4\n 18522: a1 = s1 + 0x1000\n 18526: u64 [a2 + 2000] = 0\n 18530: ra = 706, jump @19\n      : @705 [@dyn 353] (gas: 2)\n 18536: a1 = i32 [0x2026c]\n 18541: jump @707 if a1 >u 63\n      : @706 (gas: 3)\n 18545: u32 [0x2026c] = 0x40\n 18551: a1 = 0x20280\n 18556: jump @797\n      : @707 (gas: 2)\n 18559: a1 = 0x20280\n 18564: jump @797\n      : @708 (gas: 6)\n 18567: a1 = 0x20280\n 18572: i32 a1 = a1 + 0\n 18574: a0 = 0x1\n 18577: a2 = 0\n 18579: ecalli 7 // 'seal_return'\n 18581: jump @847\n      : @709 (gas: 6)\n 18584: a1 = 0x20280\n 18589: i32 a1 = a1 + 0\n 18591: a0 = 0x1\n 18594: a2 = 0\n 18596: ecalli 7 // 'seal_return'\n 18598: jump @847\n      : @710 (gas: 6)\n 18601: a1 = 0x20280\n 18606: i32 a1 = a1 + 0\n 18608: a0 = 0x1\n 18611: a2 = 0\n 18613: ecalli 7 // 'seal_return'\n 18615: jump @847\n      : @711 (gas: 6)\n 18618: a1 = 0x20280\n 18623: i32 a1 = a1 + 0\n 18625: a0 = 0x1\n 18628: a2 = 0\n 18630: ecalli 7 // 'seal_return'\n 18632: jump @847\n      : @712 (gas: 6)\n 18635: a1 = 0x20280\n 18640: i32 a1 = a1 + 0\n 18642: a0 = 0x1\n 18645: a2 = 0\n 18647: ecalli 7 // 'seal_return'\n 18649: jump @847\n      : @713 (gas: 6)\n 18652: a1 = 0x20280\n 18657: i32 a1 = a1 + 0\n 18659: a0 = 0x1\n 18662: a2 = 0\n 18664: ecalli 7 // 'seal_return'\n 18666: jump @847\n      : @714 (gas: 6)\n 18669: a1 = 0x20280\n 18674: i32 a1 = a1 + 0\n 18676: a0 = 0x1\n 18679: a2 = 0\n 18681: ecalli 7 // 'seal_return'\n 18683: jump @847\n      : @715 (gas: 6)\n 18686: a1 = 0x20280\n 18691: i32 a1 = a1 + 0\n 18693: a0 = 0x1\n 18696: a2 = 0\n 18698: ecalli 7 // 'seal_return'\n 18700: jump @847\n      : @716 (gas: 6)\n 18703: a1 = 0x20280\n 18708: i32 a1 = a1 + 0\n 18710: a0 = 0x1\n 18713: a2 = 0\n 18715: ecalli 7 // 'seal_return'\n 18717: jump @847\n      : @717 (gas: 6)\n 18720: a1 = 0x20280\n 18725: i32 a1 = a1 + 0\n 18727: a0 = 0x1\n 18730: a2 = 0\n 18732: ecalli 7 // 'seal_return'\n 18734: jump @847\n      : @718 (gas: 6)\n 18737: a1 = 0x20280\n 18742: i32 a1 = a1 + 0\n 18744: a0 = 0x1\n 18747: a2 = 0\n 18749: ecalli 7 // 'seal_return'\n 18751: jump @847\n      : @719 (gas: 6)\n 18754: a1 = 0x20280\n 18759: i32 a1 = a1 + 0\n 18761: a0 = 0x1\n 18764: a2 = 0\n 18766: ecalli 7 // 'seal_return'\n 18768: jump @847\n      : @720 (gas: 9)\n 18771: u64 [a2 + 440] = 0\n 18775: u64 [a2 + 432] = 0\n 18779: u64 [a2 + 424] = 0\n 18783: a0 = 0xe2517d3f00000000\n 18793: a1 = s1 + 0x7ff\n 18797: a1 = a1 + 0x1e1\n 18801: u64 [a2 + 0x1c0] = a0\n 18805: a0 = 0\n 18807: ra = 708, jump @19\n      : @721 [@dyn 354] (gas: 6)\n 18813: a0 = u64 [s1 + 0x20]\n 18816: ra = 0x2c6\n 18820: ecalli 3 // 'caller'\n 18822: a2 = u64 [s1 + 0x70]\n 18825: t0 = 0x2c8\n 18829: jump @1343\n      : @722 [@dyn 355] (gas: 2)\n 18832: a2 = u64 [s1 + 0x70]\n 18835: t0 = 712, jump @1343\n      : @723 [@dyn 356] (gas: 9)\n 18841: u64 [a2 + 416] = 0\n 18845: a4 = a2 + 0x100\n 18849: u64 [a4 + 0x98] = a1\n 18853: u64 [a4 + 0x90] = a0\n 18857: a0 = 0x4\n 18860: a1 = s1 + 0x7ff\n 18864: a1 = a1 + 0x1c1\n 18868: u64 [a4 + 0x88] = a3\n 18872: ra = 714, jump @19\n      : @724 [@dyn 357] (gas: 16)\n 18878: a0 = u64 [s1 + 0x40]\n 18881: a1 = s1 + 0x7ff\n 18885: a1 = a1 + 0x39\n 18888: a2 = a1 + 0x100\n 18892: u64 [a2 + 0x80] = a0\n 18896: a0 = u64 [s1 + 0x30]\n 18899: u64 [a2 + 0x78] = a0\n 18902: a0 = u64 [s1 + 0x28]\n 18905: u64 [a2 + 0x70] = a0\n 18908: a3 = a1\n 18910: a0 = 0x24\n 18913: a1 = s1 + 0x7ff\n 18917: a1 = a1 + 0x1a1\n 18921: a2 = u64 [s1 + 0x38]\n 18924: u64 [a3 + 0x168] = a2\n 18928: ra = 716, jump @19\n      : @725 [@dyn 358] (gas: 3)\n 18934: a0 = u64 [s1 + 0x98]\n 18938: a0 = i32 [a0]\n 18940: jump @727 if a0 >u 95\n      : @726 (gas: 7)\n 18944: a1 = u64 [s1 + 0x98]\n 18948: u32 [a1 + 0] = 0x60\n 18951: a0 = 0x1\n 18954: a2 = 0x44\n 18957: a1 = u64 [s1 + 0xb8]\n 18961: ecalli 7 // 'seal_return'\n 18963: jump @736\n      : @727 (gas: 5)\n 18966: a0 = 0x1\n 18969: a2 = 0x44\n 18972: a1 = u64 [s1 + 0xb8]\n 18976: ecalli 7 // 'seal_return'\n 18978: jump @736\n      : @728 (gas: 12)\n 18981: a0 = s1 + 0x7ff\n 18985: a0 = a0 + 0x39\n 18988: u64 [a0 + 504] = 0\n 18992: u64 [a0 + 496] = 0\n 18996: u64 [a0 + 488] = 0\n 19000: a2 = a0\n 19002: a0 = 0xec442f0500000000\n 19012: a1 = s1 + 0x7ff\n 19016: a1 = a1 + 0x221\n 19020: u64 [a2 + 0x200] = a0\n 19024: a0 = 0\n 19026: ra = 718, jump @19\n      : @729 [@dyn 359] (gas: 12)\n 19032: a0 = s1 + 0x7ff\n 19036: a0 = a0 + 0x39\n 19039: u64 [a0 + 480] = 0\n 19043: u64 [a0 + 472] = 0\n 19047: u64 [a0 + 464] = 0\n 19051: a2 = a0\n 19053: a0 = 0x4\n 19056: a1 = s1 + 0x7ff\n 19060: a1 = a1 + 0x201\n 19064: u64 [a2 + 456] = 0\n 19068: ra = 0x2d4\n 19072: jump @19\n      : @730 (gas: 9)\n 19075: a0 = s1 + 0x7ff\n 19079: a0 = a0 + 0x39\n 19082: u64 [a0 + 568] = 0\n 19086: u64 [a0 + 560] = 0\n 19090: u64 [a0 + 552] = 0\n 19094: a2 = a0\n 19096: t0 = 0x2d0\n 19100: a0 = 0x4e487b7100000000\n 19110: fallthrough\n      : @731 [@dyn 360] (gas: 5)\n 19111: a1 = s1 + 0x7ff\n 19115: a1 = a1 + 0x261\n 19119: u64 [a2 + 0x240] = a0\n 19123: a0 = 0\n 19125: ra = 722, jump @19\n      : @732 [@dyn 361] (gas: 11)\n 19131: a1 = s1 + 0x7ff\n 19135: a1 = a1 + 0x39\n 19138: u64 [a1 + 544] = 0\n 19142: u64 [a1 + 536] = 0\n 19146: u64 [a1 + 520] = 0x11\n 19151: a2 = a1\n 19153: a0 = 0x4\n 19156: a1 = s1 + 0x7ff\n 19160: a1 = a1 + 0x241\n 19164: u64 [a2 + 528] = 0\n 19168: ra = 724, jump @19\n      : @733 [@dyn 362] (gas: 3)\n 19174: a0 = u64 [s1 + 0x98]\n 19178: a0 = i32 [a0]\n 19180: jump @735 if a0 >u 63\n      : @734 (gas: 7)\n 19184: a1 = u64 [s1 + 0x98]\n 19188: u32 [a1 + 0] = 0x40\n 19191: a0 = 0x1\n 19194: a2 = 0x24\n 19197: a1 = u64 [s1 + 0xb8]\n 19201: ecalli 7 // 'seal_return'\n 19203: jump @736\n      : @735 (gas: 5)\n 19205: a0 = 0x1\n 19208: a2 = 0x24\n 19211: a1 = u64 [s1 + 0xb8]\n 19215: ecalli 7 // 'seal_return'\n 19217: fallthrough\n      : @736 (gas: 6)\n 19218: a1 = 0x20280\n 19223: i32 a1 = a1 + 0\n 19225: a0 = 0x1\n 19228: a2 = 0\n 19230: ecalli 7 // 'seal_return'\n 19232: jump @847\n      : @737 (gas: 6)\n 19235: a1 = 0x20280\n 19240: i32 a1 = a1 + 0\n 19242: a0 = 0x1\n 19245: a2 = 0\n 19247: ecalli 7 // 'seal_return'\n 19249: jump @847\n      : @738 (gas: 6)\n 19252: a1 = 0x20280\n 19257: i32 a1 = a1 + 0\n 19259: a0 = 0x1\n 19262: a2 = 0\n 19264: ecalli 7 // 'seal_return'\n 19266: jump @847\n      : @739 (gas: 6)\n 19269: a1 = 0x20280\n 19274: i32 a1 = a1 + 0\n 19276: a0 = 0x1\n 19279: a2 = 0\n 19281: ecalli 7 // 'seal_return'\n 19283: jump @847\n      : @740 (gas: 9)\n 19286: u64 [a3 + 216] = 0\n 19290: u64 [a3 + 208] = 0\n 19294: a0 = 0x8dfc202b00000000\n 19304: u64 [a3 + 0xe0] = a0\n 19308: a1 = s1 + 0x7ff\n 19312: a1 = a1 + 0x101\n 19316: u64 [a3 + 200] = 0\n 19320: a0 = 0\n 19322: ra = 726, jump @19\n      : @741 [@dyn 363] (gas: 2)\n 19328: a1 = i32 [0x2026c]\n 19333: jump @743 if a1 >u 31\n      : @742 (gas: 3)\n 19337: u32 [0x2026c] = 0x20\n 19343: a1 = 0x20280\n 19348: jump @744\n      : @743 (gas: 2)\n 19350: a1 = 0x20280\n 19355: fallthrough\n      : @744 (gas: 5)\n 19356: i32 a1 = a1 + 0\n 19358: a0 = 0x1\n 19361: a2 = 0x4\n 19364: ecalli 7 // 'seal_return'\n 19366: fallthrough\n      : @745 (gas: 6)\n 19367: a1 = 0x20280\n 19372: i32 a1 = a1 + 0\n 19374: a0 = 0x1\n 19377: a2 = 0\n 19379: ecalli 7 // 'seal_return'\n 19381: jump @847\n      : @746 (gas: 6)\n 19384: a1 = 0x20280\n 19389: i32 a1 = a1 + 0\n 19391: a0 = 0x1\n 19394: a2 = 0\n 19396: ecalli 7 // 'seal_return'\n 19398: jump @847\n      : @747 (gas: 1)\n 19401: jump @802 if a0 != 3578229791\n      : @748 (gas: 11)\n 19409: a0 = s1 + 0x1838\n 19413: u64 [a0 + 896] = 0\n 19417: u64 [a0 + 888] = 0\n 19421: u64 [a0 + 880] = 0\n 19425: u64 [a0 + 872] = 0\n 19429: a0 = s1 + 0x2000\n 19433: i32 a0 = a0 + 0xfffffffffffffba0\n 19437: ra = 0x2d8\n 19441: ecalli 10 // 'value_transferred'\n 19443: t0 = 0x2da\n 19447: jump @1384\n      : @749 [@dyn 364] (gas: 1)\n 19450: t0 = 730, jump @1384\n      : @750 [@dyn 365] (gas: 1)\n 19456: t0 = 732, jump @1382\n      : @751 [@dyn 366] (gas: 1)\n 19462: jump @813 if a0 == 0\n      : @752 (gas: 6)\n 19466: a1 = 0x20280\n 19471: i32 a1 = a1 + 0\n 19473: a0 = 0x1\n 19476: a2 = 0\n 19478: ecalli 7 // 'seal_return'\n 19480: jump @847\n      : @753 (gas: 6)\n 19483: a1 = 0x20280\n 19488: i32 a1 = a1 + 0\n 19490: a0 = 0x1\n 19493: a2 = 0\n 19495: ecalli 7 // 'seal_return'\n 19497: jump @847\n      : @754 (gas: 6)\n 19500: a1 = 0x20280\n 19505: i32 a1 = a1 + 0\n 19507: a0 = 0x1\n 19510: a2 = 0\n 19512: ecalli 7 // 'seal_return'\n 19514: jump @847\n      : @755 (gas: 6)\n 19517: a1 = 0x20280\n 19522: i32 a1 = a1 + 0\n 19524: a0 = 0x1\n 19527: a2 = 0\n 19529: ecalli 7 // 'seal_return'\n 19531: jump @847\n      : @756 (gas: 6)\n 19534: a1 = 0x20280\n 19539: i32 a1 = a1 + 0\n 19541: a0 = 0x1\n 19544: a2 = 0\n 19546: ecalli 7 // 'seal_return'\n 19548: jump @847\n      : @757 (gas: 6)\n 19551: a1 = 0x20280\n 19556: i32 a1 = a1 + 0\n 19558: a0 = 0x1\n 19561: a2 = 0\n 19563: ecalli 7 // 'seal_return'\n 19565: jump @847\n      : @758 (gas: 6)\n 19568: a1 = 0x20280\n 19573: i32 a1 = a1 + 0\n 19575: a0 = 0x1\n 19578: a2 = 0\n 19580: ecalli 7 // 'seal_return'\n 19582: jump @847\n      : @759 (gas: 6)\n 19585: a1 = 0x20280\n 19590: i32 a1 = a1 + 0\n 19592: a0 = 0x1\n 19595: a2 = 0\n 19597: ecalli 7 // 'seal_return'\n 19599: jump @847\n      : @760 (gas: 6)\n 19602: a1 = 0x20280\n 19607: i32 a1 = a1 + 0\n 19609: a0 = 0x1\n 19612: a2 = 0\n 19614: ecalli 7 // 'seal_return'\n 19616: jump @847\n      : @761 (gas: 6)\n 19619: a1 = 0x20280\n 19624: i32 a1 = a1 + 0\n 19626: a0 = 0x1\n 19629: a2 = 0\n 19631: ecalli 7 // 'seal_return'\n 19633: jump @847\n      : @762 (gas: 6)\n 19636: a1 = 0x20280\n 19641: i32 a1 = a1 + 0\n 19643: a0 = 0x1\n 19646: a2 = 0\n 19648: ecalli 7 // 'seal_return'\n 19650: jump @847\n      : @763 (gas: 6)\n 19653: a1 = 0x20280\n 19658: i32 a1 = a1 + 0\n 19660: a0 = 0x1\n 19663: a2 = 0\n 19665: ecalli 7 // 'seal_return'\n 19667: jump @847\n      : @764 (gas: 6)\n 19670: a1 = 0x20280\n 19675: i32 a1 = a1 + 0\n 19677: a0 = 0x1\n 19680: a2 = 0\n 19682: ecalli 7 // 'seal_return'\n 19684: jump @847\n      : @765 (gas: 6)\n 19687: a1 = 0x20280\n 19692: i32 a1 = a1 + 0\n 19694: a0 = 0x1\n 19697: a2 = 0\n 19699: ecalli 7 // 'seal_return'\n 19701: jump @847\n      : @766 (gas: 6)\n 19704: a1 = 0x20280\n 19709: i32 a1 = a1 + 0\n 19711: a0 = 0x1\n 19714: a2 = 0\n 19716: ecalli 7 // 'seal_return'\n 19718: jump @847\n      : @767 (gas: 6)\n 19721: u64 [s1 + 272] = 0\n 19725: u64 [s1 + 264] = 0\n 19729: u64 [s1 + 256] = 0\n 19733: t0 = 0x2de\n 19737: a0 = 0x4e487b7100000000\n 19747: fallthrough\n      : @768 [@dyn 367] (gas: 4)\n 19748: a1 = s1 + 0x100\n 19752: u64 [s1 + 0x118] = a0\n 19756: a0 = 0\n 19758: ra = 736, jump @19\n      : @769 [@dyn 368] (gas: 7)\n 19764: u64 [s1 + 248] = 0\n 19768: u64 [s1 + 240] = 0\n 19772: u64 [s1 + 224] = 0x22\n 19777: a0 = 0x4\n 19780: a1 = s1 + 0xe0\n 19784: u64 [s1 + 232] = 0\n 19788: ra = 738, jump @19\n      : @770 [@dyn 369] (gas: 2)\n 19794: a1 = i32 [0x2026c]\n 19799: jump @772 if a1 >u 63\n      : @771 (gas: 3)\n 19803: u32 [0x2026c] = 0x40\n 19809: a1 = 0x20280\n 19814: jump @797\n      : @772 (gas: 2)\n 19817: a1 = 0x20280\n 19822: jump @797\n      : @773 (gas: 6)\n 19825: a1 = 0x20280\n 19830: i32 a1 = a1 + 0\n 19832: a0 = 0x1\n 19835: a2 = 0\n 19837: ecalli 7 // 'seal_return'\n 19839: jump @847\n      : @774 (gas: 6)\n 19842: a1 = 0x20280\n 19847: i32 a1 = a1 + 0\n 19849: a0 = 0x1\n 19852: a2 = 0\n 19854: ecalli 7 // 'seal_return'\n 19856: jump @847\n      : @775 (gas: 8)\n 19859: u64 [s1 + 848] = 0\n 19863: u64 [s1 + 840] = 0\n 19867: u64 [s1 + 832] = 0\n 19871: a0 = 0xe602df0500000000\n 19881: a1 = s1 + 0x340\n 19885: u64 [s1 + 0x358] = a0\n 19889: a0 = 0\n 19891: ra = 740, jump @19\n      : @776 [@dyn 370] (gas: 7)\n 19897: u64 [s1 + 824] = 0\n 19901: u64 [s1 + 816] = 0\n 19905: u64 [s1 + 808] = 0\n 19909: a0 = 0x4\n 19912: a1 = s1 + 0x320\n 19916: u64 [s1 + 800] = 0\n 19920: ra = 742, jump @19\n      : @777 [@dyn 371] (gas: 2)\n 19926: a1 = i32 [0x2026c]\n 19931: jump @779 if a1 >u 63\n      : @778 (gas: 3)\n 19935: u32 [0x2026c] = 0x40\n 19941: a1 = 0x20280\n 19946: jump @797\n      : @779 (gas: 2)\n 19949: a1 = 0x20280\n 19954: jump @797\n      : @780 (gas: 8)\n 19957: u64 [s1 + 912] = 0\n 19961: u64 [s1 + 904] = 0\n 19965: u64 [s1 + 896] = 0\n 19969: a0 = 0x94280d6200000000\n 19979: a1 = s1 + 0x380\n 19983: u64 [s1 + 0x398] = a0\n 19987: a0 = 0\n 19989: ra = 744, jump @19\n      : @781 [@dyn 372] (gas: 7)\n 19995: u64 [s1 + 888] = 0\n 19999: u64 [s1 + 880] = 0\n 20003: u64 [s1 + 872] = 0\n 20007: a0 = 0x4\n 20010: a1 = s1 + 0x360\n 20014: u64 [s1 + 864] = 0\n 20018: ra = 746, jump @19\n      : @782 [@dyn 373] (gas: 2)\n 20024: a1 = i32 [0x2026c]\n 20029: jump @784 if a1 >u 63\n      : @783 (gas: 3)\n 20033: u32 [0x2026c] = 0x40\n 20039: a1 = 0x20280\n 20044: jump @797\n      : @784 (gas: 2)\n 20047: a1 = 0x20280\n 20052: jump @797\n      : @785 (gas: 10)\n 20055: a0 = s1 + 0x1038\n 20059: u64 [a0 + 56] = 0\n 20062: u64 [a0 + 48] = 0\n 20065: u64 [a0 + 40] = 0\n 20068: a2 = a0\n 20070: a0 = 0x4e487b7100000000\n 20080: a1 = s1 + 0x1060\n 20084: u64 [a2 + 0x40] = a0\n 20087: a0 = 0\n 20089: ra = 748, jump @19\n      : @786 [@dyn 374] (gas: 3)\n 20095: t0 = 0x2ee\n 20099: a1 = s1 + 0x1038\n 20103: fallthrough\n      : @787 [@dyn 375] (gas: 8)\n 20104: u64 [a1 + 32] = 0\n 20107: u64 [a1 + 24] = 0\n 20110: u64 [a1 + 8] = 0x41\n 20114: a2 = a1\n 20116: a0 = 0x4\n 20119: a1 = s1 + 0x1040\n 20123: u64 [a2 + 16] = 0\n 20126: ra = 752, jump @19\n      : @788 [@dyn 376] (gas: 2)\n 20132: a1 = i32 [0x2026c]\n 20137: jump @790 if a1 >u 63\n      : @789 (gas: 3)\n 20141: u32 [0x2026c] = 0x40\n 20147: a1 = 0x20280\n 20152: jump @797\n      : @790 (gas: 2)\n 20154: a1 = 0x20280\n 20159: jump @797\n      : @791 (gas: 6)\n 20161: u64 [s1 + 336] = 0\n 20165: u64 [s1 + 328] = 0\n 20169: u64 [s1 + 320] = 0\n 20173: t0 = 0x2f2\n 20177: a0 = 0x4e487b7100000000\n 20187: fallthrough\n      : @792 [@dyn 377] (gas: 4)\n 20188: a1 = s1 + 0x140\n 20192: u64 [s1 + 0x158] = a0\n 20196: a0 = 0\n 20198: ra = 756, jump @19\n      : @793 [@dyn 378] (gas: 7)\n 20204: u64 [s1 + 312] = 0\n 20208: u64 [s1 + 304] = 0\n 20212: u64 [s1 + 288] = 0x41\n 20217: a0 = 0x4\n 20220: a1 = s1 + 0x120\n 20224: u64 [s1 + 296] = 0\n 20228: ra = 758, jump @19\n      : @794 [@dyn 379] (gas: 2)\n 20234: a1 = i32 [0x2026c]\n 20239: jump @796 if a1 >u 63\n      : @795 (gas: 3)\n 20243: u32 [0x2026c] = 0x40\n 20249: a1 = 0x20280\n 20254: jump @797\n      : @796 (gas: 2)\n 20256: a1 = 0x20280\n 20261: fallthrough\n      : @797 (gas: 5)\n 20262: i32 a1 = a1 + 0\n 20264: a0 = 0x1\n 20267: a2 = 0x24\n 20270: ecalli 7 // 'seal_return'\n 20272: fallthrough\n      : @798 (gas: 7)\n 20273: u64 [s1 + 952] = 0\n 20277: u64 [s1 + 944] = 0\n 20281: u64 [s1 + 936] = 0\n 20285: a1 = s1 + 0x3a0\n 20289: u64 [s1 + 928] = 0x1\n 20294: u64 [s1 + 0xb8] = a0\n 20298: ra = 760, jump @19\n      : @799 [@dyn 380] (gas: 3)\n 20304: a1 = 0x20\n 20307: a0 = u64 [s1 + 0xb8]\n 20311: ra = 762, jump @33\n      : @800 [@dyn 381] (gas: 6)\n 20317: i32 a1 = a0 + 0\n 20319: a2 = 0x20\n 20322: a0 = 0\n 20324: ra = 0x2fc\n 20328: ecalli 7 // 'seal_return'\n 20330: jump @802\n      : @801 (gas: 5)\n 20332: a2 = 0x20\n 20335: a0 = 0\n 20337: ra = 0x2fc\n 20341: ecalli 7 // 'seal_return'\n 20343: fallthrough\n      : @802 [@dyn 382] (gas: 1)\n 20344: jump @807 if a0 != 33540519\n      : @803 (gas: 10)\n 20351: a0 = s1 + 0x1038\n 20355: u64 [a0 + 1408] = 0\n 20359: u64 [a0 + 1400] = 0\n 20363: u64 [a0 + 1392] = 0\n 20367: u64 [a0 + 1384] = 0\n 20371: a0 = s1 + 0x1000\n 20375: i32 a0 = a0 + 0x5a0\n 20379: ra = 0x2fe\n 20383: ecalli 10 // 'value_transferred'\n 20385: fallthrough\n      : @804 [@dyn 383] (gas: 3)\n 20386: a3 = s1 + 0x1038\n 20390: a4 = a3 + 0x500\n 20394: t0 = 768, jump @1382\n      : @805 [@dyn 384] (gas: 1)\n 20400: jump @820 if a0 == 0\n      : @806 (gas: 6)\n 20404: a1 = 0x20280\n 20409: i32 a1 = a1 + 0\n 20411: a0 = 0x1\n 20414: a2 = 0\n 20416: ecalli 7 // 'seal_return'\n 20418: jump @847\n      : @807 (gas: 1)\n 20421: jump @815 if a0 != 791671133\n      : @808 (gas: 11)\n 20428: a0 = s1 + 0x1038\n 20432: u64 [a0 + 1856] = 0\n 20436: u64 [a0 + 1848] = 0\n 20440: u64 [a0 + 1840] = 0\n 20444: u64 [a0 + 1832] = 0\n 20448: a0 = s1 + 0x1000\n 20452: i32 a0 = a0 + 0x760\n 20456: ra = 0x302\n 20460: ecalli 10 // 'value_transferred'\n 20462: t0 = 0x304\n 20466: jump @1385\n      : @809 [@dyn 385] (gas: 1)\n 20469: t0 = 772, jump @1385\n      : @810 [@dyn 386] (gas: 1)\n 20475: t0 = 774, jump @1415\n      : @811 [@dyn 387] (gas: 1)\n 20481: jump @832 if a0 == 0\n      : @812 (gas: 6)\n 20485: a1 = 0x20280\n 20490: i32 a1 = a1 + 0\n 20492: a0 = 0x1\n 20495: a2 = 0\n 20497: ecalli 7 // 'seal_return'\n 20499: jump @847\n      : @813 (gas: 3)\n 20502: a0 = u64 [s1 + 0xb8]\n 20506: a0 = i32 [a0]\n 20508: jump @822 if a0 >u 67\n      : @814 (gas: 6)\n 20513: a1 = 0x20280\n 20518: i32 a1 = a1 + 0\n 20520: a0 = 0x1\n 20523: a2 = 0\n 20525: ecalli 7 // 'seal_return'\n 20527: jump @847\n      : @815 (gas: 1)\n 20530: jump @828 if a0 != 911641278\n      : @816 (gas: 11)\n 20538: a0 = s1 + 0x1038\n 20542: u64 [a0 + 1952] = 0\n 20546: u64 [a0 + 1944] = 0\n 20550: u64 [a0 + 1936] = 0\n 20554: u64 [a0 + 1928] = 0\n 20558: a0 = s1 + 0x1000\n 20562: i32 a0 = a0 + 0x7c0\n 20566: ra = 0x308\n 20570: ecalli 10 // 'value_transferred'\n 20572: t0 = 0x30a\n 20576: jump @1385\n      : @817 [@dyn 388] (gas: 1)\n 20579: t0 = 778, jump @1385\n      : @818 [@dyn 389] (gas: 8)\n 20585: a0 = u64 [a4 + 0x98]\n 20589: a1 = u64 [a4 + 0xa0]\n 20593: a2 = u64 [a4 + 0x90]\n 20597: a3 = u64 [a4 + 0x88]\n 20601: a1 = a1 | a2\n 20604: a0 = a0 | a3\n 20607: a0 = a0 | a1\n 20610: jump @837 if a0 == 0\n      : @819 (gas: 6)\n 20614: a1 = 0x20280\n 20619: i32 a1 = a1 + 0\n 20621: a0 = 0x1\n 20624: a2 = 0\n 20626: ecalli 7 // 'seal_return'\n 20628: jump @847\n      : @820 (gas: 3)\n 20631: a0 = u64 [s1 + 0xb8]\n 20635: a0 = i32 [a0]\n 20637: jump @834 if a0 >u 35\n      : @821 (gas: 6)\n 20642: a1 = 0x20280\n 20647: i32 a1 = a1 + 0\n 20649: a0 = 0x1\n 20652: a2 = 0\n 20654: ecalli 7 // 'seal_return'\n 20656: jump @847\n      : @822 (gas: 18)\n 20659: a0 = s1 + 0x2000\n 20663: i32 a0 = a0 + 0xfffffffffffffbc0\n 20667: a1 = 0x4\n 20670: ecalli 1 // 'call_data_load'\n 20672: a0 = s1 + 0x1838\n 20676: a2 = a0 + 0x300\n 20680: a1 = u64 [a2 + 0x88]\n 20684: u64 [s1 + 0xb8] = a1\n 20688: a1 = u64 [a2 + 0x90]\n 20692: u64 [s1 + 0xb0] = a1\n 20696: a1 = u64 [a2 + 0x98]\n 20700: u64 [s1 + 0xa8] = a1\n 20704: a0 = u64 [a2 + 0xa0]\n 20708: u64 [s1 + 0xa0] = a0\n 20712: a0 = s1 + 0x13e0\n 20716: ra = 0x30c\n 20720: t0 = 0x420\n 20724: jump @1417\n      : @823 [@dyn 390] (gas: 3)\n 20727: t0 = 0x30e\n 20731: a1 = s1 + 0x1038\n 20735: fallthrough\n      : @824 [@dyn 391] (gas: 21)\n 20736: a2 = a1 + 0x300\n 20740: a0 = u64 [a2 + 0xa8]\n 20744: u64 [s1 + 0x98] = a0\n 20748: a0 = u64 [a2 + 0xb0]\n 20752: u64 [s1 + 0x90] = a0\n 20756: a0 = u64 [a2 + 0xb8]\n 20760: u64 [s1 + 0x88] = a0\n 20764: a0 = u64 [a2 + 0xc0]\n 20768: u64 [s1 + 0x80] = a0\n 20772: a0 = u64 [s1 + 0xa0]\n 20776: u64 [a2 + 0x80] = a0\n 20780: a0 = u64 [s1 + 0xa8]\n 20784: u64 [a2 + 0x78] = a0\n 20787: a0 = u64 [s1 + 0xb0]\n 20791: u64 [a2 + 0x70] = a0\n 20794: a3 = a1\n 20796: a0 = s1 + 0x13c0\n 20800: a1 = s1 + 0x13a0\n 20804: a2 = u64 [s1 + 0xb8]\n 20808: u64 [a3 + 0x368] = a2\n 20812: ra = 784, jump @1046\n      : @825 [@dyn 392] (gas: 12)\n 20818: a4 = s1 + 0x1038\n 20822: a5 = a4 + 0x300\n 20826: a1 = u64 [a5 + 0x88]\n 20830: a0 = u64 [a5 + 0x90]\n 20834: a2 = u64 [a5 + 0x98]\n 20838: a3 = u64 [a5 + 0xa0]\n 20842: u64 [a5 + 0x60] = a3\n 20845: u64 [a5 + 0x58] = a2\n 20848: u64 [a5 + 0x50] = a0\n 20851: a0 = s1 + 0x1380\n 20855: u64 [a5 + 0x48] = a1\n 20858: ra = 786, jump @1182\n      : @826 [@dyn 393] (gas: 26)\n 20864: a0 = s1 + 0x1038\n 20868: a1 = u64 [s1 + 0x80]\n 20872: a2 = a0 + 0x300\n 20876: u64 [a2] = a1\n 20878: a1 = u64 [s1 + 0x88]\n 20882: a3 = a0 + 0x200\n 20886: u64 [a3 + 0xf8] = a1\n 20890: a1 = u64 [s1 + 0x90]\n 20894: u64 [a3 + 0xf0] = a1\n 20898: a1 = u64 [s1 + 0x98]\n 20902: u64 [a3 + 0xe8] = a1\n 20906: a1 = u64 [s1 + 0xa0]\n 20910: u64 [a2 + 0x20] = a1\n 20913: a1 = u64 [s1 + 0xa8]\n 20917: u64 [a2 + 0x18] = a1\n 20920: a1 = u64 [s1 + 0xb0]\n 20924: u64 [a2 + 0x10] = a1\n 20927: a4 = a0\n 20929: a0 = s1 + 0x1360\n 20933: a1 = s1 + 0x1340\n 20937: a2 = s1 + 0x1320\n 20941: a3 = u64 [s1 + 0xb8]\n 20945: u64 [a4 + 0x308] = a3\n 20949: ra = 0x314\n 20953: t0 = 0x53e\n 20957: jump @1404\n      : @827 [@dyn 394] (gas: 2)\n 20960: a1 = 0x20280\n 20965: jump @615\n      : @828 (gas: 1)\n 20968: jump @839 if a0 != 1117154408\n      : @829 (gas: 9)\n 20976: a0 = s1 + 0x1838\n 20980: u64 [a0 + 256] = 0\n 20984: u64 [a0 + 248] = 0\n 20988: u64 [a0 + 240] = 0\n 20992: u64 [a0 + 232] = 0\n 20996: a0 = s1 + 0x2000\n 21000: i32 a0 = a0 + 0xfffffffffffff920\n 21004: ecalli 10 // 'value_transferred'\n 21006: fallthrough\n      : @830 (gas: 9)\n 21007: a3 = s1 + 0x1838\n 21011: a0 = u64 [a3 + 0xf8]\n 21015: a1 = u64 [a3 + 0x100]\n 21019: a2 = u64 [a3 + 0xf0]\n 21023: a3 = u64 [a3 + 0xe8]\n 21027: a1 = a1 | a2\n 21030: a0 = a0 | a3\n 21033: a0 = a0 | a1\n 21036: jump @847 if a0 == 0\n      : @831 (gas: 6)\n 21040: a1 = 0x20280\n 21045: i32 a1 = a1 + 0\n 21047: a0 = 0x1\n 21050: a2 = 0\n 21052: ecalli 7 // 'seal_return'\n 21054: jump @847\n      : @832 (gas: 3)\n 21057: a0 = u64 [s1 + 0xb8]\n 21061: a0 = i32 [a0]\n 21063: jump @849 if a0 >u 67\n      : @833 (gas: 6)\n 21068: a1 = 0x20280\n 21073: i32 a1 = a1 + 0\n 21075: a0 = 0x1\n 21078: a2 = 0\n 21080: ecalli 7 // 'seal_return'\n 21082: jump @847\n      : @834 (gas: 7)\n 21085: a0 = s1 + 0x1000\n 21089: i32 a0 = a0 + 0x5c0\n 21093: a1 = 0x4\n 21096: ecalli 1 // 'call_data_load'\n 21098: t0 = 0x316\n 21102: a1 = s1 + 0x1038\n 21106: fallthrough\n      : @835 [@dyn 395] (gas: 11)\n 21107: a4 = a1 + 0x500\n 21111: a0 = u64 [a4 + 0xa0]\n 21115: a2 = u64 [a4 + 0x98]\n 21119: a3 = u64 [a4 + 0x88]\n 21123: a1 = u64 [a4 + 0x90]\n 21127: a4 = a0 << 0x20\n 21130: a4 = a4 >> 0x20\n 21133: a2 = a2 | a3\n 21136: a4 = a4 | a1\n 21139: a4 = a4 | a2\n 21142: jump @854 if a4 == 0\n      : @836 (gas: 6)\n 21146: a1 = 0x20280\n 21151: i32 a1 = a1 + 0\n 21153: a0 = 0x1\n 21156: a2 = 0\n 21158: ecalli 7 // 'seal_return'\n 21160: jump @847\n      : @837 (gas: 4)\n 21163: a0 = u64 [s1 + 0xb8]\n 21167: a0 = i32 [a0]\n 21169: a1 = 0x43\n 21172: jump @858 if a1 <u a0\n      : @838 (gas: 6)\n 21176: a1 = 0x20280\n 21181: i32 a1 = a1 + 0\n 21183: a0 = 0x1\n 21186: a2 = 0\n 21188: ecalli 7 // 'seal_return'\n 21190: jump @847\n      : @839 (gas: 1)\n 21192: jump @845 if a0 != 2043438992\n      : @840 (gas: 11)\n 21199: a0 = s1 + 0x1838\n 21203: u64 [a0 + 448] = 0\n 21207: u64 [a0 + 440] = 0\n 21211: u64 [a0 + 432] = 0\n 21215: u64 [a0 + 424] = 0\n 21219: a0 = s1 + 0x2000\n 21223: i32 a0 = a0 + 0xfffffffffffff9e0\n 21227: ra = 0x318\n 21231: ecalli 10 // 'value_transferred'\n 21233: t0 = 0x31a\n 21237: jump @1399\n      : @841 [@dyn 396] (gas: 1)\n 21240: t0 = 794, jump @1399\n      : @842 [@dyn 397] (gas: 1)\n 21246: t0 = 796, jump @1381\n      : @843 [@dyn 398] (gas: 1)\n 21252: jump @863 if a0 == 0\n      : @844 (gas: 6)\n 21256: a1 = 0x20280\n 21261: i32 a1 = a1 + 0\n 21263: a0 = 0x1\n 21266: a2 = 0\n 21268: ecalli 7 // 'seal_return'\n 21270: jump @847\n      : @845 (gas: 6)\n 21272: a1 = 0x20280\n 21277: i32 a1 = a1 + 0\n 21279: a0 = 0x1\n 21282: a2 = 0\n 21284: ecalli 7 // 'seal_return'\n 21286: jump @847\n      : @846 (gas: 5)\n 21288: i32 a1 = a1 + 0\n 21290: a0 = 0x1\n 21293: a2 = 0\n 21295: ecalli 7 // 'seal_return'\n 21297: fallthrough\n      : @847 (gas: 3)\n 21298: a0 = u64 [s1 + 0xb8]\n 21302: a0 = i32 [a0]\n 21304: jump @865 if a0 >u 35\n      : @848 (gas: 2)\n 21309: a1 = 0x20280\n 21314: jump @846\n      : @849 (gas: 19)\n 21316: a0 = s1 + 0x1000\n 21320: i32 a0 = a0 + 0x780\n 21324: a1 = 0x4\n 21327: ecalli 1 // 'call_data_load'\n 21329: a0 = s1 + 0x1038\n 21333: a2 = a0 + 0x700\n 21337: a1 = u64 [a2 + 0x48]\n 21340: u64 [s1 + 0xb8] = a1\n 21344: a1 = u64 [a2 + 0x50]\n 21347: u64 [s1 + 0xb0] = a1\n 21351: a1 = u64 [a2 + 0x58]\n 21354: u64 [s1 + 0xa8] = a1\n 21358: a0 = u64 [a2 + 0x60]\n 21361: u64 [s1 + 0xa0] = a0\n 21365: a0 = s1 + 0x7ff\n 21369: a0 = a0 + 0x1\n 21372: ra = 0x31e\n 21376: t0 = 0x420\n 21380: jump @1417\n      : @850 [@dyn 399] (gas: 23)\n 21383: a0 = s1 + 0x1000\n 21387: a0 = u64 [a0 + 0xfffffffffffff800]\n 21391: u64 [s1 + 0x98] = a0\n 21395: a0 = s1 + 0x1000\n 21399: a0 = u64 [a0 + 0xfffffffffffff808]\n 21403: u64 [s1 + 0x90] = a0\n 21407: a0 = s1 + 0x1000\n 21411: a0 = u64 [a0 + 0xfffffffffffff810]\n 21415: u64 [s1 + 0x88] = a0\n 21419: a0 = s1 + 0x1000\n 21423: a0 = u64 [a0 + 0xfffffffffffff818]\n 21427: u64 [s1 + 0x80] = a0\n 21431: a0 = u64 [s1 + 0xa0]\n 21435: u64 [s1 + 0x7d8] = a0\n 21439: a0 = u64 [s1 + 0xa8]\n 21443: u64 [s1 + 0x7d0] = a0\n 21447: a0 = u64 [s1 + 0xb0]\n 21451: u64 [s1 + 0x7c8] = a0\n 21455: a0 = s1 + 0x7e0\n 21459: a1 = s1 + 0x7c0\n 21463: a2 = u64 [s1 + 0xb8]\n 21467: u64 [s1 + 0x7c0] = a2\n 21471: ra = 800, jump @1046\n      : @851 [@dyn 400] (gas: 10)\n 21477: a1 = u64 [s1 + 0x7e0]\n 21481: a0 = u64 [s1 + 0x7e8]\n 21485: a2 = u64 [s1 + 0x7f0]\n 21489: a3 = u64 [s1 + 0x7f8]\n 21493: u64 [s1 + 0x7b8] = a3\n 21497: u64 [s1 + 0x7b0] = a2\n 21501: u64 [s1 + 0x7a8] = a0\n 21505: a0 = s1 + 0x7a0\n 21509: u64 [s1 + 0x7a0] = a1\n 21513: ra = 802, jump @1182\n      : @852 [@dyn 401] (gas: 23)\n 21519: a0 = u64 [s1 + 0x80]\n 21523: a4 = s1 + 0x700\n 21527: u64 [a4 + 0x58] = a0\n 21530: a0 = u64 [s1 + 0x88]\n 21534: u64 [a4 + 0x50] = a0\n 21537: a0 = u64 [s1 + 0x90]\n 21541: u64 [a4 + 0x48] = a0\n 21544: a0 = u64 [s1 + 0x98]\n 21548: u64 [a4 + 0x40] = a0\n 21551: a0 = u64 [s1 + 0xa0]\n 21555: u64 [a4 + 0x78] = a0\n 21558: a0 = u64 [s1 + 0xa8]\n 21562: u64 [a4 + 0x70] = a0\n 21565: a0 = u64 [s1 + 0xb0]\n 21569: u64 [a4 + 0x68] = a0\n 21572: a0 = s1 + 0x780\n 21576: a1 = s1 + 0x760\n 21580: a2 = s1 + 0x740\n 21584: a3 = u64 [s1 + 0xb8]\n 21588: u64 [a4 + 0x60] = a3\n 21591: ra = 0x324\n 21595: t0 = 0x4fc\n 21599: jump @1404\n      : @853 [@dyn 402] (gas: 2)\n 21602: a1 = 0x20280\n 21607: jump @615\n      : @854 (gas: 18)\n 21610: a3 = 0x7965db0b00000000\n 21620: a3 = a3 ^ a0\n 21623: a3 = a3 | a1\n 21626: a3 = a3 | a2\n 21629: a3 = a3 <u 0x1\n 21632: a4 = 0x1ffc9a700000000\n 21642: a0 = a0 ^ a4\n 21645: a0 = a0 | a1\n 21648: a0 = a0 | a2\n 21651: a0 = a0 <u 0x1\n 21654: a0 = a0 | a3\n 21657: u64 [s1 + 216] = 0\n 21661: u64 [s1 + 208] = 0\n 21665: u64 [s1 + 0xc0] = a0\n 21669: a0 = 0x80\n 21673: a1 = s1 + 0xc0\n 21677: u64 [s1 + 200] = 0\n 21681: ra = 806, jump @19\n      : @855 [@dyn 403] (gas: 2)\n 21687: a1 = i32 [0x2026c]\n 21692: jump @857 if a1 >u 159\n      : @856 (gas: 4)\n 21697: u32 [0x2026c] = 0xa0\n 21704: a0 = 0x20280\n 21709: i32 a1 = a0 + 0x80\n 21713: jump @801\n      : @857 (gas: 3)\n 21716: a0 = 0x20280\n 21721: i32 a1 = a0 + 0x80\n 21725: jump @801\n      : @858 (gas: 5)\n 21728: a0 = s1 + 0x7ff\n 21732: a0 = a0 + 0xe1\n 21736: ra = 0x328\n 21740: t0 = 0x420\n 21744: jump @1417\n      : @859 [@dyn 404] (gas: 15)\n 21747: a0 = s1 + 0x7ff\n 21751: a0 = a0 + 0x39\n 21754: a1 = u64 [a0 + 0xc0]\n 21758: u64 [s1 + 0xa0] = a1\n 21762: a1 = u64 [a0 + 0xb8]\n 21766: u64 [s1 + 0xa8] = a1\n 21770: a1 = u64 [a0 + 0xb0]\n 21774: u64 [s1 + 0xb0] = a1\n 21778: a0 = u64 [a0 + 0xa8]\n 21782: u64 [s1 + 0xb8] = a0\n 21786: a0 = 0x30280\n 21791: u64 [s1 + 0x98] = a0\n 21795: i32 a0 = a0 + 0\n 21797: ecalli 3 // 'caller'\n 21799: fallthrough\n      : @860 (gas: 25)\n 21800: a2 = u64 [s1 + 0x98]\n 21804: a0 = u64 [a2 + 0x8]\n 21807: a1 = u64 [a2]\n 21809: a2 = i32 [a2 + 0x10]\n 21812: a0 = reverse a0\n 21814: a3 = a0 >> 0x20\n 21817: a1 = reverse a1\n 21819: a4 = a1 << 0x20\n 21822: a3 = a3 | a4\n 21825: a0 = a0 << 0x20\n 21828: a2 = reverse a2\n 21830: a2 = a2 >> 0x20\n 21833: a0 = a0 | a2\n 21836: a1 = a1 >> 0x20\n 21839: a2 = u64 [s1 + 0xa8]\n 21843: a2 = a2 << 0x20\n 21846: a2 = a2 >> 0x20\n 21849: a1 = a1 ^ a2\n 21852: a2 = u64 [s1 + 0xb8]\n 21856: a0 = a0 ^ a2\n 21859: a0 = a0 | a1\n 21862: a1 = u64 [s1 + 0xb0]\n 21866: a1 = a1 ^ a3\n 21869: a0 = a0 | a1\n 21872: jump @869 if a0 != 0\n      : @861 (gas: 33)\n 21876: a0 = s1 + 0x1000\n 21880: i32 a0 = a0 + 0x7e0\n 21884: a1 = 0x4\n 21887: ecalli 1 // 'call_data_load'\n 21889: a2 = s1 + 0x1038\n 21893: a4 = a2 + 0x700\n 21897: a3 = u64 [a4 + 0xa8]\n 21901: a0 = u64 [a4 + 0xb0]\n 21905: a1 = u64 [a4 + 0xb8]\n 21909: a2 = u64 [a4 + 0xc0]\n 21913: a4 = s1 + 0x7ff\n 21917: a4 = a4 + 0x39\n 21920: a5 = u64 [s1 + 0xa0]\n 21924: u64 [a4 + 0x40] = a5\n 21927: a5 = u64 [s1 + 0xa8]\n 21931: u64 [a4 + 0x38] = a5\n 21934: a5 = u64 [s1 + 0xb0]\n 21938: u64 [a4 + 0x30] = a5\n 21941: a5 = u64 [s1 + 0xb8]\n 21945: u64 [a4 + 0x28] = a5\n 21948: u64 [a4 + 0x60] = a2\n 21951: u64 [a4 + 0x58] = a1\n 21954: u64 [a4 + 0x50] = a0\n 21957: a0 = s1 + 0x7ff\n 21961: a0 = a0 + 0xa1\n 21965: a1 = s1 + 0x7ff\n 21969: a1 = a1 + 0x81\n 21973: a2 = s1 + 0x7ff\n 21977: a2 = a2 + 0x61\n 21980: u64 [a4 + 0x48] = a3\n 21983: ra = 0x32a\n 21987: t0 = 0x53e\n 21991: jump @1404\n      : @862 [@dyn 405] (gas: 2)\n 21994: a1 = 0x20280\n 21999: jump @615\n      : @863 (gas: 4)\n 22002: a0 = u64 [s1 + 0xb8]\n 22006: a0 = i32 [a0]\n 22008: a1 = 0x43\n 22011: jump @873 if a1 <u a0\n      : @864 (gas: 2)\n 22015: a1 = 0x20280\n 22020: jump @846\n      : @865 (gas: 22)\n 22023: a0 = s1 + 0x2000\n 22027: i32 a0 = a0 + 0xfffffffffffff940\n 22031: a1 = 0x4\n 22034: ecalli 1 // 'call_data_load'\n 22036: a0 = s1 + 0x1838\n 22040: a2 = a0 + 0x100\n 22044: a1 = u64 [a2 + 0x8]\n 22047: u64 [s1 + 0xb8] = a1\n 22051: a1 = u64 [a2 + 0x10]\n 22054: u64 [s1 + 0xb0] = a1\n 22058: a1 = u64 [a2 + 0x18]\n 22061: u64 [s1 + 0xa8] = a1\n 22065: a0 = u64 [a2 + 0x20]\n 22068: u64 [s1 + 0xa0] = a0\n 22072: a0 = 0x30280\n 22077: u64 [s1 + 0x98] = a0\n 22081: i32 a0 = a0 + 0\n 22083: ra = 0x32c\n 22087: ecalli 3 // 'caller'\n 22089: a2 = u64 [s1 + 0x98]\n 22093: t0 = 0x32e\n 22097: jump @1343\n      : @866 [@dyn 406] (gas: 2)\n 22100: a2 = u64 [s1 + 0x98]\n 22104: t0 = 814, jump @1343\n      : @867 [@dyn 407] (gas: 18)\n 22110: a4 = u64 [s1 + 0xa0]\n 22114: a5 = a2 + 0x400\n 22118: u64 [a5 + 0x40] = a4\n 22121: a4 = u64 [s1 + 0xa8]\n 22125: u64 [a5 + 0x38] = a4\n 22128: a4 = u64 [s1 + 0xb0]\n 22132: u64 [a5 + 0x30] = a4\n 22135: a4 = u64 [s1 + 0xb8]\n 22139: u64 [a5 + 0x28] = a4\n 22142: u64 [a2 + 1120] = 0\n 22146: u64 [a5 + 0x58] = a1\n 22149: u64 [a5 + 0x50] = a0\n 22152: a0 = s1 + 0x7ff\n 22156: a0 = a0 + 0x481\n 22160: a1 = s1 + 0x7ff\n 22164: a1 = a1 + 0x461\n 22168: u64 [a5 + 0x48] = a3\n 22171: ra = 816, jump @1295\n      : @868 [@dyn 408] (gas: 2)\n 22177: a1 = 0x20280\n 22182: jump @615\n      : @869 (gas: 11)\n 22185: a2 = s1 + 0x7ff\n 22189: a2 = a2 + 0x39\n 22192: u64 [a2 + 152] = 0\n 22196: u64 [a2 + 144] = 0\n 22200: a0 = 0x6697b23200000000\n 22210: u64 [a2 + 0xa0] = a0\n 22214: a1 = s1 + 0x7ff\n 22218: a1 = a1 + 0xc1\n 22222: u64 [a2 + 136] = 0\n 22226: a0 = 0\n 22228: ra = 818, jump @19\n      : @870 [@dyn 409] (gas: 2)\n 22234: a1 = i32 [0x2026c]\n 22239: jump @872 if a1 >u 31\n      : @871 (gas: 3)\n 22243: u32 [0x2026c] = 0x20\n 22249: a1 = 0x20280\n 22254: jump @744\n      : @872 (gas: 2)\n 22257: a1 = 0x20280\n 22262: jump @744\n      : @873 (gas: 5)\n 22265: a0 = s1 + 0x7ff\n 22269: a0 = a0 + 0x661\n 22273: ra = 0x334\n 22277: t0 = 0x416\n 22281: jump @1417\n      : @874 [@dyn 410] (gas: 32)\n 22284: a1 = s1 + 0x7ff\n 22288: a1 = a1 + 0x39\n 22291: a2 = a1 + 0x600\n 22295: a0 = u64 [a2 + 0x28]\n 22298: u64 [s1 + 0xb8] = a0\n 22302: a0 = u64 [a2 + 0x30]\n 22305: u64 [s1 + 0xb0] = a0\n 22309: a0 = u64 [a2 + 0x38]\n 22312: u64 [s1 + 0xa8] = a0\n 22316: a0 = u64 [a2 + 0x40]\n 22319: u64 [s1 + 0xa0] = a0\n 22323: a0 = s1 + 0x2000\n 22327: i32 a0 = a0 + 0xfffffffffffffa00\n 22331: a1 = 0x24\n 22334: ecalli 1 // 'call_data_load'\n 22336: a0 = s1 + 0x1838\n 22340: a2 = a0 + 0x100\n 22344: a1 = u64 [a2 + 0xc8]\n 22348: u64 [s1 + 0x98] = a1\n 22352: a1 = u64 [a2 + 0xd0]\n 22356: u64 [s1 + 0x90] = a1\n 22360: a1 = u64 [a2 + 0xd8]\n 22364: u64 [s1 + 0x88] = a1\n 22368: a0 = u64 [a2 + 0xe0]\n 22372: u64 [s1 + 0x80] = a0\n 22376: a0 = 0x30280\n 22381: u64 [s1 + 0x78] = a0\n 22384: i32 a0 = a0 + 0\n 22386: ra = 0x336\n 22390: ecalli 3 // 'caller'\n 22392: t0 = 0x338\n 22396: jump @1375\n      : @875 [@dyn 411] (gas: 1)\n 22399: t0 = 824, jump @1375\n      : @876 [@dyn 412] (gas: 31)\n 22405: a3 = s1 + 0x7ff\n 22409: a3 = a3 + 0x39\n 22412: a4 = u64 [s1 + 0x80]\n 22416: a5 = a3 + 0x500\n 22420: u64 [a5 + 0xe0] = a4\n 22424: a4 = u64 [s1 + 0x88]\n 22428: u64 [a5 + 0xd8] = a4\n 22432: a4 = u64 [s1 + 0x90]\n 22436: u64 [a5 + 0xd0] = a4\n 22440: a4 = u64 [s1 + 0x98]\n 22444: u64 [a5 + 0xc8] = a4\n 22448: u64 [a3 + 1536] = 0\n 22452: a4 = u64 [s1 + 0xa0]\n 22456: u64 [a3 + 0x620] = a4\n 22460: a4 = u64 [s1 + 0xa8]\n 22464: u64 [a3 + 0x618] = a4\n 22468: a4 = u64 [s1 + 0xb0]\n 22472: u64 [a3 + 0x610] = a4\n 22476: u64 [a5 + 0xf8] = a2\n 22480: u64 [a5 + 0xf0] = a0\n 22484: u64 [a5 + 0xe8] = a1\n 22488: a4 = a3\n 22490: a0 = s1 + 0x7ff\n 22494: a0 = a0 + 0x641\n 22498: a1 = s1 + 0x7ff\n 22502: a1 = a1 + 0x621\n 22506: a2 = s1 + 0x7ff\n 22510: a2 = a2 + 0x601\n 22514: a3 = u64 [s1 + 0xb8]\n 22518: u64 [a4 + 0x608] = a3\n 22522: ra = 826, jump @1054\n      : @877 [@dyn 413] (gas: 25)\n 22528: a0 = u64 [s1 + 0x80]\n 22532: a1 = s1 + 0x7ff\n 22536: a1 = a1 + 0x39\n 22539: a2 = a1 + 0x500\n 22543: u64 [a2 + 0xa0] = a0\n 22547: a0 = u64 [s1 + 0x88]\n 22551: u64 [a2 + 0x98] = a0\n 22555: a0 = u64 [s1 + 0x90]\n 22559: u64 [a2 + 0x90] = a0\n 22563: a0 = u64 [s1 + 0x98]\n 22567: u64 [a2 + 0x88] = a0\n 22571: a0 = u64 [s1 + 0xa0]\n 22575: u64 [a2 + 0xc0] = a0\n 22579: a0 = u64 [s1 + 0xa8]\n 22583: u64 [a2 + 0xb8] = a0\n 22587: a0 = u64 [s1 + 0xb0]\n 22591: u64 [a2 + 0xb0] = a0\n 22595: a3 = a1\n 22597: a0 = s1 + 0x7ff\n 22601: a0 = a0 + 0x5e1\n 22605: a1 = s1 + 0x7ff\n 22609: a1 = a1 + 0x5c1\n 22613: a2 = u64 [s1 + 0xb8]\n 22617: u64 [a3 + 0x5a8] = a2\n 22621: ra = 828, jump @1295\n      : @878 [@dyn 414] (gas: 2)\n 22627: a1 = 0x20280\n 22632: jump @615\n      : @879 (gas: 17)\n 22635: sp = sp + 0xffffffffffffff30\n 22639: u64 [sp + 0xc8] = ra\n 22643: u64 [sp + 0xc0] = s0\n 22647: u64 [sp + 0xb8] = s1\n 22651: s0 = sp + 0xd0\n 22655: sp = sp & 0xfffffffffffffff0\n 22658: a2 = u64 [a1 + 0x18]\n 22661: u64 [sp + 0x10] = a2\n 22664: a2 = u64 [a1 + 0x10]\n 22667: u64 [sp + 0x8] = a2\n 22670: a2 = u64 [a1 + 0x8]\n 22673: u64 [sp] = a2\n 22675: s1 = u64 [a1]\n 22677: u64 [sp + 0x28] = a0\n 22680: a0 = sp + 0x90\n 22684: a1 = 0x40\n 22687: ra = 830, jump @17\n      : @880 [@dyn 415] (gas: 39)\n 22693: a1 = u64 [sp + 0x98]\n 22697: a2 = u64 [sp + 0x90]\n 22701: a0 = s1 + 0x1f\n 22704: ra = a0 <u s1\n 22707: a3 = u64 [sp]\n 22709: a4 = a3 + ra\n 22712: a0 = a0 & 0xffffffffffffffe0\n 22715: t1 = a1 + a4\n 22718: t0 = a2 + a0\n 22721: u64 [sp + 0x20] = a2\n 22724: a5 = t0 <u a2\n 22727: t1 = t1 + a5\n 22730: s1 = t1 ^ a1\n 22733: u64 [sp + 0x18] = a1\n 22736: a2 = t1 <u a1\n 22739: a2 = a5 if s1 == 0\n 22742: t2 = u64 [sp + 0xa8]\n 22746: a4 = a4 <u a3\n 22749: s1 = u64 [sp + 0xa0]\n 22753: a4 = ra if ra == 0\n 22756: a0 = u64 [sp + 0x8]\n 22759: a4 = a4 + a0\n 22762: a5 = a4 <u a0\n 22765: a4 = a4 + s1\n 22768: a3 = a4 + a2\n 22771: a0 = u64 [sp + 0x10]\n 22774: a0 = a0 + t2\n 22777: a0 = a0 + a5\n 22780: a5 = a3 <u a4\n 22783: a4 = a4 <u s1\n 22786: a0 = a0 + a4\n 22789: a4 = a0 + a5\n 22792: a0 = a4 >u 0\n 22794: a5 = a3 >u 0\n 22796: a5 = a0 if a4 != 0\n 22799: a0 = a3 | a4\n 22802: a1 = t1 >u 0\n 22804: a1 = a5 if a0 != 0\n 22807: jump @884 if a1 != 0\n      : @881 (gas: 8)\n 22810: a0 = a3 <u s1\n 22813: a1 = a4 ^ t2\n 22816: a5 = a4 <u t2\n 22819: a5 = a0 if a1 == 0\n 22822: a0 = a3 ^ s1\n 22825: a0 = a0 | a1\n 22828: a2 = a5 if a0 != 0\n 22831: jump @884 if a2 != 0\n      : @882 (gas: 8)\n 22834: u64 [sp + 0x70] = t0\n 22837: u64 [sp + 0x78] = t1\n 22840: u64 [sp + 0x80] = a3\n 22844: a0 = 0x40\n 22847: a1 = sp + 0x70\n 22850: u64 [sp + 0x88] = a4\n 22854: u64 [sp + 0x10] = t2\n 22857: ra = 832, jump @19\n      : @883 [@dyn 416] (gas: 14)\n 22863: a0 = u64 [sp + 0x28]\n 22866: a1 = u64 [sp + 0x10]\n 22869: u64 [a0 + 0x18] = a1\n 22872: u64 [a0 + 0x10] = s1\n 22875: a1 = u64 [sp + 0x18]\n 22878: u64 [a0 + 0x8] = a1\n 22881: a1 = u64 [sp + 0x20]\n 22884: u64 [a0] = a1\n 22886: sp = s0 + 0xffffffffffffff30\n 22890: ra = u64 [sp + 0xc8]\n 22894: s0 = u64 [sp + 0xc0]\n 22898: s1 = u64 [sp + 0xb8]\n 22902: sp = sp + 0xd0\n 22906: ret\n      : @884 (gas: 6)\n 22908: u64 [sp + 96] = 0\n 22911: u64 [sp + 88] = 0\n 22914: u64 [sp + 80] = 0\n 22917: t0 = 0x342\n 22921: a0 = 0x4e487b7100000000\n 22931: fallthrough\n      : @885 [@dyn 417] (gas: 4)\n 22932: a1 = sp + 0x50\n 22935: u64 [sp + 0x68] = a0\n 22938: a0 = 0\n 22940: ra = 836, jump @19\n      : @886 [@dyn 418] (gas: 7)\n 22946: u64 [sp + 72] = 0\n 22949: u64 [sp + 64] = 0\n 22952: u64 [sp + 48] = 0x41\n 22956: a0 = 0x4\n 22959: a1 = sp + 0x30\n 22962: u64 [sp + 56] = 0\n 22965: ra = 838, jump @19\n      : @887 [@dyn 419] (gas: 2)\n 22971: a1 = i32 [0x2026c]\n 22976: jump @889 if a1 >u 63\n      : @888 (gas: 2)\n 22980: u32 [0x2026c] = 0x40\n 22986: fallthrough\n      : @889 (gas: 7)\n 22987: a1 = 0x20280\n 22992: i32 a1 = a1 + 0\n 22994: a0 = 0x1\n 22997: a2 = 0x24\n 23000: ra = 0x348\n 23004: ecalli 7 // 'seal_return'\n 23006: fallthrough\n      : @890 [@dyn 420] (gas: 22)\n 23007: sp = sp + 0xfffffffffffffda0\n 23011: a2 = sp + 0x200\n 23015: u64 [a2 + 0x58] = ra\n 23018: u64 [a2 + 0x50] = s0\n 23021: u64 [a2 + 0x48] = s1\n 23024: s0 = sp + 0x260\n 23028: sp = sp & 0xffffffffffffffe0\n 23031: s1 = sp\n 23033: a2 = u64 [a1 + 0x10]\n 23036: u64 [s1 + 0x30] = a2\n 23039: a2 = u64 [a1 + 0x8]\n 23042: u64 [s1 + 0x50] = a2\n 23045: a1 = u64 [a1]\n 23047: u64 [s1 + 0x58] = a1\n 23050: u64 [s1 + 0x38] = a0\n 23053: u64 [s1 + 536] = 0\n 23057: u64 [s1 + 528] = 0\n 23061: u64 [s1 + 520] = 0\n 23065: a1 = s1 + 0x200\n 23069: u64 [s1 + 512] = 0\n 23073: a0 = 0\n 23075: ra = 842, jump @19\n      : @891 [@dyn 421] (gas: 7)\n 23081: u64 [s1 + 504] = 0\n 23085: u64 [s1 + 496] = 0\n 23089: u64 [s1 + 480] = 0x6\n 23094: a0 = 0x20\n 23097: a1 = s1 + 0x1e0\n 23101: u64 [s1 + 488] = 0\n 23105: ra = 844, jump @19\n      : @892 [@dyn 422] (gas: 3)\n 23111: a1 = 0x2026c\n 23116: a0 = i32 [0x2026c]\n 23121: jump @894 if a0 >u 63\n      : @893 (gas: 2)\n 23125: u32 [0x2026c] = 0x40\n 23131: fallthrough\n      : @894 (gas: 14)\n 23132: a0 = sp + 0xffffffffffffffe0\n 23135: a2 = a0 & 0xffffffffffffffe0\n 23138: u64 [s1 + 0x28] = a2\n 23141: sp = a2\n 23143: a0 = 0x20280\n 23148: i32 a0 = a0 + 0\n 23150: i32 a2 = a2 + 0\n 23152: u64 [s1 + 0x48] = a1\n 23155: a1 = 0x40\n 23158: u64 [s1 + 0x40] = a0\n 23161: ra = 0x34e\n 23165: ecalli 6 // 'hash_keccak_256'\n 23167: t0 = 0x350\n 23171: jump @1348\n      : @895 [@dyn 423] (gas: 1)\n 23174: t0 = 848, jump @1348\n      : @896 [@dyn 424] (gas: 13)\n 23180: a0 = u64 [s1 + 0x30]\n 23183: a0 = a0 << 0x20\n 23186: a0 = a0 >> 0x20\n 23189: u64 [s1 + 472] = 0\n 23193: u64 [s1] = a0\n 23195: u64 [s1 + 0x1d0] = a0\n 23199: a0 = u64 [s1 + 0x50]\n 23202: u64 [s1 + 0x1c8] = a0\n 23206: a1 = s1 + 0x1c0\n 23210: a0 = u64 [s1 + 0x58]\n 23213: u64 [s1 + 0x1c0] = a0\n 23217: a0 = 0\n 23219: ra = 850, jump @19\n      : @897 [@dyn 425] (gas: 12)\n 23225: a0 = u64 [s1 + 0x8]\n 23228: a3 = s1 + 0x100\n 23232: u64 [a3 + 0xb8] = a0\n 23236: a0 = u64 [s1 + 0x10]\n 23239: u64 [a3 + 0xb0] = a0\n 23243: a0 = u64 [s1 + 0x18]\n 23246: u64 [a3 + 0xa8] = a0\n 23250: a0 = 0x20\n 23253: a1 = s1 + 0x1a0\n 23257: a2 = u64 [s1 + 0x20]\n 23260: u64 [a3 + 0xa0] = a2\n 23264: ra = 852, jump @19\n      : @898 [@dyn 426] (gas: 3)\n 23270: a1 = u64 [s1 + 0x48]\n 23273: a0 = i32 [a1]\n 23275: jump @900 if a0 >u 63\n      : @899 (gas: 3)\n 23279: u32 [a1 + 0] = 0x40\n 23282: t0 = 0x356\n 23286: jump @1413\n      : @900 (gas: 1)\n 23289: t0 = 854, jump @1413\n      : @901 [@dyn 427] (gas: 5)\n 23295: ra = 0x358\n 23299: ecalli 6 // 'hash_keccak_256'\n 23301: a3 = u64 [s1 + 0x30]\n 23304: t0 = 0x35a\n 23308: jump @1361\n      : @902 [@dyn 428] (gas: 2)\n 23311: a3 = u64 [s1 + 0x30]\n 23314: t0 = 858, jump @1361\n      : @903 [@dyn 429] (gas: 2)\n 23320: a0 = s1 + 0x180\n 23324: ra = 860, jump @21\n      : @904 [@dyn 430] (gas: 2)\n 23330: a0 = u8 [s1 + 0x180]\n 23334: jump @906 if a0 == 0\n      : @905 (gas: 2)\n 23337: a1 = 0\n 23339: jump @926\n      : @906 (gas: 6)\n 23342: u64 [s1 + 376] = 0\n 23346: u64 [s1 + 368] = 0\n 23350: u64 [s1 + 360] = 0\n 23354: a1 = s1 + 0x160\n 23358: u64 [s1 + 352] = 0\n 23362: ra = 862, jump @19\n      : @907 [@dyn 431] (gas: 1)\n 23368: t0 = 864, jump @1369\n      : @908 [@dyn 432] (gas: 1)\n 23374: ra = 866, jump @19\n      : @909 [@dyn 433] (gas: 3)\n 23380: a1 = u64 [s1 + 0x48]\n 23383: a0 = i32 [a1]\n 23385: jump @911 if a0 >u 63\n      : @910 (gas: 3)\n 23389: u32 [a1 + 0] = 0x40\n 23392: t0 = 0x364\n 23396: jump @1413\n      : @911 (gas: 1)\n 23399: t0 = 868, jump @1413\n      : @912 [@dyn 434] (gas: 5)\n 23405: ra = 0x366\n 23409: ecalli 6 // 'hash_keccak_256'\n 23411: a3 = u64 [s1 + 0x30]\n 23414: t0 = 0x368\n 23418: jump @1406\n      : @913 [@dyn 435] (gas: 2)\n 23421: a3 = u64 [s1 + 0x30]\n 23424: t0 = 872, jump @1406\n      : @914 [@dyn 436] (gas: 21)\n 23430: u64 [s1 + 0x28] = a0\n 23433: a0 = reverse a1\n 23435: u64 [s1 + 0x20] = a0\n 23438: a0 = reverse a2\n 23440: u64 [s1 + 0x18] = a0\n 23443: a0 = reverse a3\n 23445: u64 [s1 + 0x10] = a0\n 23448: a0 = sp + 0xffffffffffffffe0\n 23451: a0 = a0 & 0xffffffffffffffe0\n 23454: u64 [s1 + 0x30] = a0\n 23457: sp = a0\n 23459: u64 [s1 + 312] = 0\n 23463: a0 = u64 [s1]\n 23465: u64 [s1 + 0x130] = a0\n 23469: a0 = u64 [s1 + 0x50]\n 23472: u64 [s1 + 0x128] = a0\n 23476: a1 = s1 + 0x120\n 23480: a0 = u64 [s1 + 0x58]\n 23483: u64 [s1 + 0x120] = a0\n 23487: a0 = 0\n 23489: ra = 874, jump @19\n      : @915 [@dyn 437] (gas: 12)\n 23495: a0 = u64 [s1 + 0x10]\n 23498: a3 = s1 + 0x100\n 23502: u64 [a3 + 0x18] = a0\n 23505: a0 = u64 [s1 + 0x18]\n 23508: u64 [a3 + 0x10] = a0\n 23511: a0 = u64 [s1 + 0x20]\n 23514: u64 [a3 + 0x8] = a0\n 23517: a0 = 0x20\n 23520: a1 = s1 + 0x100\n 23524: a2 = u64 [s1 + 0x28]\n 23527: u64 [a3] = a2\n 23529: ra = 876, jump @19\n      : @916 [@dyn 438] (gas: 3)\n 23535: a1 = u64 [s1 + 0x48]\n 23538: a0 = i32 [a1]\n 23540: jump @918 if a0 >u 63\n      : @917 (gas: 2)\n 23544: u32 [a1 + 0] = 0x40\n 23547: fallthrough\n      : @918 (gas: 12)\n 23548: a0 = sp + 0xffffffffffffffe0\n 23551: a0 = a0 & 0xffffffffffffffe0\n 23554: u64 [s1 + 0x48] = a0\n 23557: sp = a0\n 23559: i32 a2 = a0 + 0\n 23561: a1 = 0x40\n 23564: a0 = u64 [s1 + 0x40]\n 23567: ra = 0x36e\n 23571: ecalli 6 // 'hash_keccak_256'\n 23573: a3 = u64 [s1 + 0x48]\n 23576: t0 = 0x370\n 23580: jump @1352\n      : @919 [@dyn 439] (gas: 2)\n 23583: a3 = u64 [s1 + 0x48]\n 23586: t0 = 880, jump @1352\n      : @920 [@dyn 440] (gas: 7)\n 23592: a1 = u64 [s1 + 0x30]\n 23595: u64 [a1 + 0x18] = a3\n 23598: u64 [a1 + 0x10] = a2\n 23601: u64 [a1 + 0x8] = a4\n 23604: u64 [a1] = a0\n 23606: a0 = s1 + 0xe0\n 23610: ra = 882, jump @21\n      : @921 [@dyn 441] (gas: 14)\n 23616: a0 = u64 [s1 + 0xe0]\n 23620: a1 = u64 [s1 + 0xe8]\n 23624: a2 = u64 [s1 + 0xf8]\n 23628: a3 = u64 [s1 + 0xf0]\n 23632: a0 = a0 & 0xffffffffffffff00\n 23636: a0 = a0 | 0x1\n 23639: a4 = s1 + 0x200\n 23643: u64 [a4 + 0x38] = a2\n 23646: u64 [a4 + 0x30] = a3\n 23649: u64 [a4 + 0x28] = a1\n 23652: u64 [a4 + 0x20] = a0\n 23655: a1 = s1 + 0x220\n 23659: a0 = u64 [s1 + 0x30]\n 23662: ra = 884, jump @24\n      : @922 [@dyn 442] (gas: 8)\n 23668: a0 = 0x30280\n 23673: u64 [s1 + 0x48] = a0\n 23676: i32 a0 = a0 + 0\n 23678: ra = 0x376\n 23682: ecalli 3 // 'caller'\n 23684: a2 = u64 [s1 + 0x48]\n 23687: t0 = 0x378\n 23691: jump @1347\n      : @923 [@dyn 443] (gas: 2)\n 23694: a2 = u64 [s1 + 0x48]\n 23697: t0 = 888, jump @1347\n      : @924 [@dyn 444] (gas: 36)\n 23703: t0 = a1 | a0\n 23706: a3 = a3 >> 0x20\n 23709: a2 = reverse a2\n 23711: a1 = a2 << 0x20\n 23714: a1 = a1 | a3\n 23717: a2 = a2 >> 0x20\n 23720: u64 [s1 + 120] = 0\n 23723: u64 [s1 + 152] = 0\n 23727: a0 = u64 [s1]\n 23729: u64 [s1 + 0x90] = a0\n 23733: a0 = u64 [s1 + 0x50]\n 23736: u64 [s1 + 0x88] = a0\n 23740: a0 = u64 [s1 + 0x58]\n 23743: u64 [s1 + 0x80] = a0\n 23747: u64 [s1 + 184] = 0\n 23751: u64 [s1 + 176] = 0\n 23755: u64 [s1 + 168] = 0\n 23759: u64 [s1 + 160] = 0\n 23763: a3 = u64 [0x20128]\n 23768: a4 = u64 [0x20130]\n 23773: a5 = u64 [0x20138]\n 23778: a0 = u64 [0x20140]\n 23783: u64 [s1 + 0xd8] = a3\n 23787: u64 [s1 + 0xd0] = a4\n 23791: u64 [s1 + 0xc8] = a5\n 23795: u64 [s1 + 0xc0] = a0\n 23799: u64 [s1 + 0x70] = a2\n 23802: u64 [s1 + 0x68] = a1\n 23805: a2 = s1 + 0xc0\n 23809: a3 = s1 + 0xa0\n 23813: a4 = s1 + 0x80\n 23817: a5 = s1 + 0x60\n 23820: u64 [s1 + 0x60] = t0\n 23823: a0 = 0\n 23825: a1 = 0\n 23827: ra = 890, jump @30\n      : @925 [@dyn 445] (gas: 2)\n 23833: a1 = 0x1\n 23836: fallthrough\n      : @926 (gas: 12)\n 23837: a2 = u64 [s1 + 0x38]\n 23840: u64 [a2] = a1\n 23842: u64 [a2 + 8] = 0\n 23845: u64 [a2 + 16] = 0\n 23848: u64 [a2 + 24] = 0\n 23851: sp = s0 + 0xfffffffffffffda0\n 23855: a0 = sp + 0x200\n 23859: ra = u64 [a0 + 0x58]\n 23862: s0 = u64 [a0 + 0x50]\n 23865: s1 = u64 [a0 + 0x48]\n 23868: sp = sp + 0x260\n 23872: ret\n      : @927 [@dyn 446] (gas: 7)\n 23874: a0 = u64 [0x20148]\n 23879: u64 [s1 + 0x20] = a0\n 23882: u64 [s1 + 0x238] = a0\n 23886: a1 = u64 [0x20150]\n 23891: a2 = u64 [0x20158]\n 23896: a0 = u64 [0x20160]\n 23901: t0 = 894, jump @1403\n      : @928 [@dyn 447] (gas: 1)\n 23907: ra = 896, jump @19\n      : @929 [@dyn 448] (gas: 1)\n 23913: t0 = 898, jump @1359\n      : @930 [@dyn 449] (gas: 1)\n 23919: ra = 900, jump @19\n      : @931 [@dyn 450] (gas: 3)\n 23925: a1 = 0x2026c\n 23930: a0 = i32 [0x2026c]\n 23935: jump @933 if a0 >u 63\n      : @932 (gas: 2)\n 23939: u32 [0x2026c] = 0x40\n 23945: fallthrough\n      : @933 (gas: 6)\n 23946: a0 = sp + 0xffffffffffffffe0\n 23949: a2 = a0 & 0xffffffffffffffe0\n 23952: u64 [s1 + 0x48] = a2\n 23955: sp = a2\n 23957: a0 = 0x20280\n 23962: t0 = 902, jump @1419\n      : @934 [@dyn 451] (gas: 4)\n 23968: ra = 0x388\n 23972: ecalli 6 // 'hash_keccak_256'\n 23974: t0 = 0x38a\n 23978: jump @1345\n      : @935 [@dyn 452] (gas: 1)\n 23981: t0 = 906, jump @1345\n      : @936 [@dyn 453] (gas: 1)\n 23987: ra = 908, jump @19\n      : @937 [@dyn 454] (gas: 1)\n 23993: t0 = 910, jump @1366\n      : @938 [@dyn 455] (gas: 1)\n 23999: ra = 912, jump @19\n      : @939 [@dyn 456] (gas: 3)\n 24005: a1 = u64 [s1 + 0x68]\n 24008: a0 = i32 [a1]\n 24010: jump @941 if a0 >u 63\n      : @940 (gas: 3)\n 24014: u32 [a1 + 0] = 0x40\n 24017: t0 = 0x392\n 24021: jump @1353\n      : @941 (gas: 1)\n 24024: t0 = 914, jump @1353\n      : @942 [@dyn 457] (gas: 4)\n 24030: ra = 0x394\n 24034: ecalli 6 // 'hash_keccak_256'\n 24036: t0 = 0x396\n 24040: jump @1351\n      : @943 [@dyn 458] (gas: 1)\n 24043: t0 = 918, jump @1351\n      : @944 [@dyn 459] (gas: 1)\n 24049: ra = 920, jump @21\n      : @945 [@dyn 460] (gas: 2)\n 24055: a0 = u8 [s1 + 0x1a0]\n 24059: jump @947 if a0 == 0\n      : @946 (gas: 5)\n 24062: a1 = 0\n 24064: a0 = 0\n 24066: a2 = u64 [s1 + 0x58]\n 24069: t0 = 0x3c0\n 24073: jump @1357\n      : @947 (gas: 1)\n 24076: t0 = 922, jump @1388\n      : @948 [@dyn 461] (gas: 1)\n 24082: ra = 924, jump @19\n      : @949 [@dyn 462] (gas: 1)\n 24088: t0 = 926, jump @1358\n      : @950 [@dyn 463] (gas: 1)\n 24094: ra = 928, jump @19\n      : @951 [@dyn 464] (gas: 3)\n 24100: a1 = u64 [s1 + 0x68]\n 24103: a0 = i32 [a1]\n 24105: jump @953 if a0 >u 63\n      : @952 (gas: 3)\n 24109: u32 [a1 + 0] = 0x40\n 24112: t0 = 0x3a2\n 24116: jump @1353\n      : @953 (gas: 1)\n 24119: t0 = 930, jump @1353\n      : @954 [@dyn 465] (gas: 4)\n 24125: ra = 0x3a4\n 24129: ecalli 6 // 'hash_keccak_256'\n 24131: t0 = 0x3a6\n 24135: jump @1346\n      : @955 [@dyn 466] (gas: 1)\n 24138: t0 = 934, jump @1346\n      : @956 [@dyn 467] (gas: 1)\n 24144: ra = 936, jump @19\n      : @957 [@dyn 468] (gas: 1)\n 24150: t0 = 938, jump @1368\n      : @958 [@dyn 469] (gas: 1)\n 24156: ra = 940, jump @19\n      : @959 [@dyn 470] (gas: 3)\n 24162: a1 = u64 [s1 + 0x68]\n 24165: a0 = i32 [a1]\n 24167: jump @961 if a0 >u 63\n      : @960 (gas: 2)\n 24171: u32 [a1 + 0] = 0x40\n 24174: fallthrough\n      : @961 (gas: 4)\n 24175: a0 = sp + 0xffffffffffffffe0\n 24178: a0 = a0 & 0xffffffffffffffe0\n 24181: u64 [s1 + 0x68] = a0\n 24184: t0 = 942, jump @1362\n      : @962 [@dyn 471] (gas: 4)\n 24190: ra = 0x3b0\n 24194: ecalli 6 // 'hash_keccak_256'\n 24196: t0 = 0x3b2\n 24200: jump @1350\n      : @963 [@dyn 472] (gas: 1)\n 24203: t0 = 946, jump @1350\n      : @964 [@dyn 473] (gas: 1)\n 24209: ra = 948, jump @21\n      : @965 [@dyn 474] (gas: 1)\n 24215: t0 = 950, jump @1355\n      : @966 [@dyn 475] (gas: 1)\n 24221: ra = 952, jump @24\n      : @967 [@dyn 476] (gas: 8)\n 24227: a0 = 0x30280\n 24232: u64 [s1 + 0x68] = a0\n 24235: i32 a0 = a0 + 0\n 24237: ra = 0x3ba\n 24241: ecalli 3 // 'caller'\n 24243: a2 = u64 [s1 + 0x68]\n 24246: t0 = 0x3bc\n 24250: jump @1347\n      : @968 [@dyn 477] (gas: 2)\n 24253: a2 = u64 [s1 + 0x68]\n 24256: t0 = 956, jump @1347\n      : @969 [@dyn 478] (gas: 40)\n 24262: t0 = a1 | a0\n 24265: a3 = a3 >> 0x20\n 24268: a2 = reverse a2\n 24270: a1 = a2 << 0x20\n 24273: a1 = a1 | a3\n 24276: a2 = a2 >> 0x20\n 24279: u64 [s1 + 152] = 0\n 24283: u64 [s1 + 184] = 0\n 24287: a0 = u64 [s1]\n 24289: u64 [s1 + 0xb0] = a0\n 24293: a0 = u64 [s1 + 0x70]\n 24296: u64 [s1 + 0xa8] = a0\n 24300: a0 = u64 [s1 + 0x78]\n 24303: u64 [s1 + 0xa0] = a0\n 24307: a0 = u64 [s1 + 0x20]\n 24310: u64 [s1 + 0xd8] = a0\n 24314: a0 = u64 [s1 + 0x18]\n 24317: u64 [s1 + 0xd0] = a0\n 24321: a0 = u64 [s1 + 0x10]\n 24324: u64 [s1 + 0xc8] = a0\n 24328: a0 = u64 [s1 + 0x8]\n 24331: u64 [s1 + 0xc0] = a0\n 24335: a3 = u64 [0x20168]\n 24340: a4 = u64 [0x20170]\n 24345: a5 = u64 [0x20178]\n 24350: a0 = u64 [0x20180]\n 24355: u64 [s1 + 0xf8] = a3\n 24359: u64 [s1 + 0xf0] = a4\n 24363: u64 [s1 + 0xe8] = a5\n 24367: u64 [s1 + 0xe0] = a0\n 24371: u64 [s1 + 0x90] = a2\n 24375: u64 [s1 + 0x88] = a1\n 24379: a2 = s1 + 0xe0\n 24383: a3 = s1 + 0xc0\n 24387: a4 = s1 + 0xa0\n 24391: a5 = s1 + 0x80\n 24395: u64 [s1 + 0x80] = t0\n 24399: a0 = 0\n 24401: a1 = 0\n 24403: ra = 958, jump @30\n      : @970 [@dyn 479] (gas: 4)\n 24409: a0 = 0\n 24411: a1 = 0x1\n 24414: a2 = u64 [s1 + 0x58]\n 24417: t0 = 960, jump @1357\n      : @971 [@dyn 480] (gas: 1)\n 24423: ret\n      : @972 [@dyn 481] (gas: 7)\n 24425: a0 = u64 [0x20188]\n 24430: u64 [s1 + 0x20] = a0\n 24433: u64 [s1 + 0x238] = a0\n 24437: a1 = u64 [0x20190]\n 24442: a2 = u64 [0x20198]\n 24447: a0 = u64 [0x201a0]\n 24452: t0 = 964, jump @1403\n      : @973 [@dyn 482] (gas: 1)\n 24458: ra = 966, jump @19\n      : @974 [@dyn 483] (gas: 1)\n 24464: t0 = 968, jump @1359\n      : @975 [@dyn 484] (gas: 1)\n 24470: ra = 970, jump @19\n      : @976 [@dyn 485] (gas: 3)\n 24476: a1 = 0x2026c\n 24481: a0 = i32 [0x2026c]\n 24486: jump @978 if a0 >u 63\n      : @977 (gas: 2)\n 24490: u32 [0x2026c] = 0x40\n 24496: fallthrough\n      : @978 (gas: 6)\n 24497: a0 = sp + 0xffffffffffffffe0\n 24500: a2 = a0 & 0xffffffffffffffe0\n 24503: u64 [s1 + 0x48] = a2\n 24506: sp = a2\n 24508: a0 = 0x20280\n 24513: t0 = 972, jump @1419\n      : @979 [@dyn 486] (gas: 4)\n 24519: ra = 0x3ce\n 24523: ecalli 6 // 'hash_keccak_256'\n 24525: t0 = 0x3d0\n 24529: jump @1345\n      : @980 [@dyn 487] (gas: 1)\n 24532: t0 = 976, jump @1345\n      : @981 [@dyn 488] (gas: 1)\n 24538: ra = 978, jump @19\n      : @982 [@dyn 489] (gas: 1)\n 24544: t0 = 980, jump @1366\n      : @983 [@dyn 490] (gas: 1)\n 24550: ra = 982, jump @19\n      : @984 [@dyn 491] (gas: 3)\n 24556: a1 = u64 [s1 + 0x68]\n 24559: a0 = i32 [a1]\n 24561: jump @986 if a0 >u 63\n      : @985 (gas: 3)\n 24565: u32 [a1 + 0] = 0x40\n 24568: t0 = 0x3d8\n 24572: jump @1353\n      : @986 (gas: 1)\n 24575: t0 = 984, jump @1353\n      : @987 [@dyn 492] (gas: 4)\n 24581: ra = 0x3da\n 24585: ecalli 6 // 'hash_keccak_256'\n 24587: t0 = 0x3dc\n 24591: jump @1351\n      : @988 [@dyn 493] (gas: 1)\n 24594: t0 = 988, jump @1351\n      : @989 [@dyn 494] (gas: 1)\n 24600: ra = 990, jump @21\n      : @990 [@dyn 495] (gas: 2)\n 24606: a0 = u8 [s1 + 0x1a0]\n 24610: jump @992 if a0 == 0\n      : @991 (gas: 5)\n 24613: a1 = 0\n 24615: a0 = 0\n 24617: a2 = u64 [s1 + 0x58]\n 24620: t0 = 0x406\n 24624: jump @1357\n      : @992 (gas: 1)\n 24627: t0 = 992, jump @1388\n      : @993 [@dyn 496] (gas: 1)\n 24633: ra = 994, jump @19\n      : @994 [@dyn 497] (gas: 1)\n 24639: t0 = 996, jump @1358\n      : @995 [@dyn 498] (gas: 1)\n 24645: ra = 998, jump @19\n      : @996 [@dyn 499] (gas: 3)\n 24651: a1 = u64 [s1 + 0x68]\n 24654: a0 = i32 [a1]\n 24656: jump @998 if a0 >u 63\n      : @997 (gas: 3)\n 24660: u32 [a1 + 0] = 0x40\n 24663: t0 = 0x3e8\n 24667: jump @1353\n      : @998 (gas: 1)\n 24670: t0 = 1000, jump @1353\n      : @999 [@dyn 500] (gas: 4)\n 24676: ra = 0x3ea\n 24680: ecalli 6 // 'hash_keccak_256'\n 24682: t0 = 0x3ec\n 24686: jump @1346\n      : @1000 [@dyn 501] (gas: 1)\n 24689: t0 = 1004, jump @1346\n      : @1001 [@dyn 502] (gas: 1)\n 24695: ra = 1006, jump @19\n      : @1002 [@dyn 503] (gas: 1)\n 24701: t0 = 1008, jump @1368\n      : @1003 [@dyn 504] (gas: 1)\n 24707: ra = 1010, jump @19\n      : @1004 [@dyn 505] (gas: 3)\n 24713: a1 = u64 [s1 + 0x68]\n 24716: a0 = i32 [a1]\n 24718: jump @1006 if a0 >u 63\n      : @1005 (gas: 2)\n 24722: u32 [a1 + 0] = 0x40\n 24725: fallthrough\n      : @1006 (gas: 4)\n 24726: a0 = sp + 0xffffffffffffffe0\n 24729: a0 = a0 & 0xffffffffffffffe0\n 24732: u64 [s1 + 0x68] = a0\n 24735: t0 = 1012, jump @1362\n      : @1007 [@dyn 506] (gas: 4)\n 24741: ra = 0x3f6\n 24745: ecalli 6 // 'hash_keccak_256'\n 24747: t0 = 0x3f8\n 24751: jump @1350\n      : @1008 [@dyn 507] (gas: 1)\n 24754: t0 = 1016, jump @1350\n      : @1009 [@dyn 508] (gas: 1)\n 24760: ra = 1018, jump @21\n      : @1010 [@dyn 509] (gas: 1)\n 24766: t0 = 1020, jump @1355\n      : @1011 [@dyn 510] (gas: 1)\n 24772: ra = 1022, jump @24\n      : @1012 [@dyn 511] (gas: 8)\n 24778: a0 = 0x30280\n 24783: u64 [s1 + 0x68] = a0\n 24786: i32 a0 = a0 + 0\n 24788: ra = 0x400\n 24792: ecalli 3 // 'caller'\n 24794: a2 = u64 [s1 + 0x68]\n 24797: t0 = 0x402\n 24801: jump @1347\n      : @1013 [@dyn 512] (gas: 2)\n 24804: a2 = u64 [s1 + 0x68]\n 24807: t0 = 1026, jump @1347\n      : @1014 [@dyn 513] (gas: 40)\n 24813: t0 = a1 | a0\n 24816: a3 = a3 >> 0x20\n 24819: a2 = reverse a2\n 24821: a1 = a2 << 0x20\n 24824: a1 = a1 | a3\n 24827: a2 = a2 >> 0x20\n 24830: u64 [s1 + 152] = 0\n 24834: u64 [s1 + 184] = 0\n 24838: a0 = u64 [s1]\n 24840: u64 [s1 + 0xb0] = a0\n 24844: a0 = u64 [s1 + 0x70]\n 24847: u64 [s1 + 0xa8] = a0\n 24851: a0 = u64 [s1 + 0x78]\n 24854: u64 [s1 + 0xa0] = a0\n 24858: a0 = u64 [s1 + 0x20]\n 24861: u64 [s1 + 0xd8] = a0\n 24865: a0 = u64 [s1 + 0x18]\n 24868: u64 [s1 + 0xd0] = a0\n 24872: a0 = u64 [s1 + 0x10]\n 24875: u64 [s1 + 0xc8] = a0\n 24879: a0 = u64 [s1 + 0x8]\n 24882: u64 [s1 + 0xc0] = a0\n 24886: a3 = u64 [0x201a8]\n 24891: a4 = u64 [0x201b0]\n 24896: a5 = u64 [0x201b8]\n 24901: a0 = u64 [0x201c0]\n 24906: u64 [s1 + 0xf8] = a3\n 24910: u64 [s1 + 0xf0] = a4\n 24914: u64 [s1 + 0xe8] = a5\n 24918: u64 [s1 + 0xe0] = a0\n 24922: u64 [s1 + 0x90] = a2\n 24926: u64 [s1 + 0x88] = a1\n 24930: a2 = s1 + 0xe0\n 24934: a3 = s1 + 0xc0\n 24938: a4 = s1 + 0xa0\n 24942: a5 = s1 + 0x80\n 24946: u64 [s1 + 0x80] = t0\n 24950: a0 = 0\n 24952: a1 = 0\n 24954: ra = 1028, jump @30\n      : @1015 [@dyn 514] (gas: 4)\n 24960: a0 = 0\n 24962: a1 = 0x1\n 24965: a2 = u64 [s1 + 0x58]\n 24968: t0 = 1030, jump @1357\n      : @1016 [@dyn 515] (gas: 1)\n 24974: ret\n      : @1017 (gas: 22)\n 24976: sp = sp + 0xfffffffffffffee0\n 24980: u64 [sp + 0x118] = ra\n 24984: u64 [sp + 0x110] = s0\n 24988: u64 [sp + 0x108] = s1\n 24992: s0 = sp + 0x120\n 24996: sp = sp & 0xfffffffffffffff0\n 24999: a4 = u64 [a1 + 0x10]\n 25002: a3 = u64 [a1 + 0x18]\n 25005: a5 = u64 [a1 + 0x8]\n 25008: t0 = u64 [a1]\n 25010: u64 [sp + 0x68] = a3\n 25013: u64 [sp + 0x78] = a5\n 25016: a1 = a5 | a3\n 25019: a3 = t0 | a4\n 25022: a3 = a3 | a1\n 25025: a3 = a3 >> 0x20\n 25028: u64 [sp + 0x70] = a4\n 25031: a1 = a1 | a4\n 25034: a1 = a1 << 0x20\n 25037: a1 = a1 | a3\n 25040: u64 [sp + 0x8] = a0\n 25043: jump @1032 if a1 != 0\n      : @1018 (gas: 15)\n 25047: a0 = u64 [a2 + 0x18]\n 25050: u64 [sp + 0x48] = a0\n 25053: s1 = u64 [a2 + 0x10]\n 25056: a0 = u64 [a2 + 0x8]\n 25059: u64 [sp + 0x50] = a0\n 25062: a0 = u64 [a2]\n 25064: u64 [sp + 0x58] = a0\n 25067: u64 [sp + 248] = 0\n 25071: u64 [sp + 240] = 0\n 25075: u64 [sp + 232] = 0\n 25079: a1 = sp + 0xe0\n 25083: u64 [sp + 224] = 0x20\n 25088: a0 = t0\n 25090: u64 [sp + 0x60] = t0\n 25093: ra = 1032, jump @19\n      : @1019 [@dyn 516] (gas: 12)\n 25099: a1 = u64 [sp + 0x58]\n 25102: a0 = a1 | s1\n 25105: a2 = u64 [sp + 0x48]\n 25108: a3 = u64 [sp + 0x50]\n 25111: a2 = a2 | a3\n 25114: a0 = a0 | a2\n 25117: a0 = a0 >> 0x20\n 25120: u64 [sp + 0x20] = s1\n 25123: a2 = a2 | s1\n 25126: a2 = a2 << 0x20\n 25129: a0 = a0 | a2\n 25132: jump @1032 if a0 != 0\n      : @1020 (gas: 2)\n 25136: a0 = sp + 0xc0\n 25140: ra = 1034, jump @17\n      : @1021 [@dyn 517] (gas: 13)\n 25146: a0 = u64 [sp + 0x70]\n 25149: a1 = u64 [sp + 0x68]\n 25152: a1 = a1 | a0\n 25155: a0 = 0x100000000\n 25165: u64 [sp + 0x10] = a0\n 25168: a0 = 0xffffffe0\n 25178: a2 = u64 [sp + 0x60]\n 25181: a0 = a2 <u a0\n 25184: a3 = u64 [sp + 0x78]\n 25187: a0 = 0 if a3 != 0\n 25189: u64 [sp + 0x18] = a1\n 25192: a0 = 0 if a1 != 0\n 25194: jump @1032 if a0 == 0\n      : @1022 (gas: 16)\n 25198: a3 = u64 [sp + 0xd8]\n 25202: a4 = u64 [sp + 0xd0]\n 25206: a5 = u64 [sp + 0xc8]\n 25210: a1 = u64 [sp + 0xc0]\n 25214: i32 a0 = a2 + 0x20\n 25217: u64 [sp + 0x28] = a1\n 25220: u64 [sp + 0xa0] = a1\n 25224: u64 [sp + 0x30] = a5\n 25227: u64 [sp + 0xa8] = a5\n 25231: u64 [sp + 0x38] = a4\n 25234: u64 [sp + 0xb0] = a4\n 25238: a1 = sp + 0xa0\n 25242: u64 [sp + 0x40] = a3\n 25245: u64 [sp + 0xb8] = a3\n 25249: s1 = a2\n 25251: ra = 1036, jump @19\n      : @1023 [@dyn 518] (gas: 8)\n 25257: a0 = u64 [sp + 0x10]\n 25260: a0 = a0 + 0xffffffffffffffc0\n 25263: a0 = s1 <u a0\n 25266: a1 = u64 [sp + 0x78]\n 25269: a0 = 0 if a1 != 0\n 25271: a1 = u64 [sp + 0x18]\n 25274: a0 = 0 if a1 != 0\n 25276: jump @1032 if a0 == 0\n      : @1024 (gas: 10)\n 25280: a0 = u64 [sp + 0x48]\n 25283: a1 = u64 [sp + 0x20]\n 25286: a0 = a0 | a1\n 25289: a1 = 0xffffffe0\n 25299: a3 = u64 [sp + 0x58]\n 25302: a1 = a3 <u a1\n 25305: a4 = u64 [sp + 0x50]\n 25308: a1 = 0 if a4 != 0\n 25310: a1 = 0 if a0 != 0\n 25312: jump @1032 if a1 == 0\n      : @1025 (gas: 13)\n 25316: a2 = s1\n 25318: a1 = u64 [sp + 0x28]\n 25321: a5 = u64 [sp + 0x38]\n 25324: a0 = a1 | a5\n 25327: a4 = u64 [sp + 0x40]\n 25330: s1 = u64 [sp + 0x30]\n 25333: a4 = a4 | s1\n 25336: a0 = a0 | a4\n 25339: a0 = a0 >> 0x20\n 25342: a4 = a4 | a5\n 25345: a4 = a4 << 0x20\n 25348: a0 = a0 | a4\n 25351: jump @1032 if a0 != 0\n      : @1026 (gas: 5)\n 25355: i32 a0 = a2 + 0x40\n 25358: i32 a3 = a3 + 0x20\n 25361: u64 [sp + 0x58] = a3\n 25364: s1 = a1\n 25366: ra = 1038, jump @33\n      : @1027 [@dyn 519] (gas: 4)\n 25372: u64 [sp + 0x50] = a0\n 25375: a0 = u64 [sp + 0x58]\n 25378: a1 = s1\n 25380: ra = 1040, jump @33\n      : @1028 [@dyn 520] (gas: 4)\n 25386: a1 = a0\n 25388: a0 = u64 [sp + 0x50]\n 25391: a2 = s1\n 25393: ra = 1042, jump @0\n      : @1029 [@dyn 521] (gas: 27)\n 25399: a0 = u64 [sp + 0x60]\n 25402: a0 = a0 + s1\n 25405: a1 = a0 <u s1\n 25408: a2 = u64 [sp + 0x78]\n 25411: a4 = u64 [sp + 0x30]\n 25414: a2 = a2 + a4\n 25417: a2 = a2 + a1\n 25420: a3 = a2 ^ a4\n 25423: a4 = a2 <u a4\n 25426: a4 = a1 if a3 == 0\n 25429: a1 = u64 [sp + 0x70]\n 25432: a3 = u64 [sp + 0x38]\n 25435: a1 = a1 + a3\n 25438: a3 = a1 <u a3\n 25441: a5 = u64 [sp + 0x68]\n 25444: s1 = u64 [sp + 0x40]\n 25447: a5 = a5 + s1\n 25450: a3 = a3 + a5\n 25453: a4 = a4 + a1\n 25456: a1 = a4 <u a1\n 25459: a1 = a1 + a3\n 25462: a1 = a1 | a4\n 25465: a3 = 0xffffffc0\n 25475: a3 = a0 <u a3\n 25478: a3 = 0 if a2 != 0\n 25480: a3 = 0 if a1 != 0\n 25482: jump @1032 if a3 == 0\n      : @1030 (gas: 7)\n 25486: i32 a0 = a0 + 0x40\n 25489: u64 [sp + 152] = 0\n 25493: u64 [sp + 144] = 0\n 25497: u64 [sp + 136] = 0\n 25501: a1 = sp + 0x80\n 25505: u64 [sp + 128] = 0\n 25509: ra = 1044, jump @19\n      : @1031 [@dyn 522] (gas: 35)\n 25515: s1 = u64 [sp + 0x28]\n 25518: s1 = s1 + 0x1f\n 25521: a0 = 0x1ffffffe0\n 25531: a0 = a0 & s1\n 25534: a1 = u64 [sp + 0x60]\n 25537: a0 = a0 + a1\n 25540: a1 = a0 <u a1\n 25543: a3 = u64 [sp + 0x78]\n 25546: a2 = a3 + a1\n 25549: a3 = a2 <u a3\n 25552: a3 = a1 if a1 == 0\n 25555: a1 = u64 [sp + 0x70]\n 25558: a3 = a3 + a1\n 25561: a1 = a3 <u a1\n 25564: a4 = u64 [sp + 0x68]\n 25567: a1 = a1 + a4\n 25570: a4 = a0 + 0x40\n 25573: a0 = a4 <u a0\n 25576: a5 = a2 + a0\n 25579: a2 = a5 <u a2\n 25582: a2 = a0 if a0 == 0\n 25585: a2 = a2 + a3\n 25588: a0 = a2 <u a3\n 25591: a0 = a0 + a1\n 25594: a1 = u64 [sp + 0x8]\n 25597: u64 [a1] = a4\n 25599: u64 [a1 + 0x8] = a5\n 25602: u64 [a1 + 0x10] = a2\n 25605: u64 [a1 + 0x18] = a0\n 25608: sp = s0 + 0xfffffffffffffee0\n 25612: ra = u64 [sp + 0x118]\n 25616: s0 = u64 [sp + 0x110]\n 25620: s1 = u64 [sp + 0x108]\n 25624: sp = sp + 0x120\n 25628: ret\n      : @1032 (gas: 1)\n 25630: trap\n      : @1033 [@dyn 523] (gas: 5)\n 25631: a1 = 0x4\n 25634: ra = 0x418\n 25638: ecalli 1 // 'call_data_load'\n 25640: t0 = 0x41a\n 25644: jump @1394\n      : @1034 [@dyn 524] (gas: 1)\n 25647: t0 = 1050, jump @1394\n      : @1035 [@dyn 525] (gas: 1)\n 25653: jump @1038 if a3 == 0\n      : @1036 (gas: 1)\n 25656: t0 = 1052, jump @1405\n      : @1037 [@dyn 526] (gas: 1)\n 25662: ret\n      : @1038 (gas: 8)\n 25664: a1 = 0x20280\n 25669: i32 a1 = a1 + 0\n 25671: a0 = 0x1\n 25674: a2 = 0\n 25676: ra = 0x41e\n 25680: ecalli 7 // 'seal_return'\n 25682: t0 = 0x420\n 25686: jump @1417\n      : @1039 [@dyn 527] (gas: 1)\n 25689: t0 = 1056, jump @1417\n      : @1040 [@dyn 528] (gas: 5)\n 25695: a1 = 0x24\n 25698: ra = 0x422\n 25702: ecalli 1 // 'call_data_load'\n 25704: t0 = 0x424\n 25708: jump @1394\n      : @1041 [@dyn 529] (gas: 1)\n 25711: t0 = 1060, jump @1394\n      : @1042 [@dyn 530] (gas: 1)\n 25717: jump @1045 if a3 == 0\n      : @1043 (gas: 1)\n 25720: t0 = 1062, jump @1405\n      : @1044 [@dyn 531] (gas: 1)\n 25726: ret\n      : @1045 (gas: 7)\n 25728: a1 = 0x20280\n 25733: i32 a1 = a1 + 0\n 25735: a0 = 0x1\n 25738: a2 = 0\n 25740: ra = 0x428\n 25744: ecalli 7 // 'seal_return'\n 25746: fallthrough\n      : @1046 [@dyn 532] (gas: 19)\n 25747: sp = sp + 0xffffffffffffff40\n 25751: u64 [sp + 0xb8] = ra\n 25755: u64 [sp + 0xb0] = s0\n 25759: u64 [sp + 0xa8] = s1\n 25763: s0 = sp + 0xc0\n 25767: sp = sp & 0xffffffffffffffe0\n 25770: s1 = sp\n 25772: a2 = u64 [a1]\n 25774: a3 = u64 [a1 + 0x8]\n 25777: a4 = u64 [a1 + 0x10]\n 25780: a1 = u64 [a1 + 0x18]\n 25783: u64 [s1 + 0x18] = a0\n 25786: u64 [s1 + 0x78] = a1\n 25789: u64 [s1 + 0x70] = a4\n 25792: u64 [s1 + 0x68] = a3\n 25795: a1 = s1 + 0x60\n 25798: u64 [s1 + 0x60] = a2\n 25801: a0 = 0\n 25803: ra = 1066, jump @19\n      : @1047 [@dyn 533] (gas: 7)\n 25809: u64 [s1 + 88] = 0\n 25812: u64 [s1 + 80] = 0\n 25815: u64 [s1 + 64] = 0x6\n 25819: a0 = 0x20\n 25822: a1 = s1 + 0x40\n 25825: u64 [s1 + 72] = 0\n 25828: ra = 1068, jump @19\n      : @1048 [@dyn 534] (gas: 2)\n 25834: a1 = i32 [0x2026c]\n 25839: jump @1050 if a1 >u 63\n      : @1049 (gas: 2)\n 25843: u32 [0x2026c] = 0x40\n 25849: fallthrough\n      : @1050 (gas: 11)\n 25850: a0 = sp + 0xffffffffffffffe0\n 25853: a2 = a0 & 0xffffffffffffffe0\n 25856: u64 [s1 + 0x10] = a2\n 25859: sp = a2\n 25861: a0 = 0x20280\n 25866: i32 a0 = a0 + 0\n 25868: i32 a2 = a2 + 0\n 25870: a1 = 0x40\n 25873: ra = 0x42e\n 25877: ecalli 6 // 'hash_keccak_256'\n 25879: fallthrough\n      : @1051 [@dyn 535] (gas: 6)\n 25880: a3 = u64 [s1 + 0x10]\n 25883: a0 = u64 [a3]\n 25885: a1 = u64 [a3 + 0x8]\n 25888: a2 = u64 [a3 + 0x10]\n 25891: a3 = u64 [a3 + 0x18]\n 25894: t0 = 1072, jump @1373\n      : @1052 [@dyn 536] (gas: 15)\n 25900: a3 = a3 + 0x1\n 25903: a4 = a3 <u 0x1\n 25906: a2 = a2 + a4\n 25909: a4 = a3 | a2\n 25912: a4 = a4 <u 0x1\n 25915: a4 = a4 + a1\n 25918: a1 = a4 <u a1\n 25921: a0 = a0 + a1\n 25924: u64 [s1 + 0x80] = a3\n 25928: u64 [s1 + 0x88] = a2\n 25932: u64 [s1 + 0x90] = a4\n 25936: u64 [s1 + 0x98] = a0\n 25940: a0 = s1 + 0x20\n 25943: a1 = s1 + 0x80\n 25947: ra = 1074, jump @21\n      : @1053 [@dyn 537] (gas: 15)\n 25953: a0 = u64 [s1 + 0x30]\n 25956: a1 = u64 [s1 + 0x38]\n 25959: a2 = u64 [s1 + 0x20]\n 25962: a3 = u64 [s1 + 0x28]\n 25965: a4 = u64 [s1 + 0x18]\n 25968: u64 [a4 + 0x10] = a0\n 25971: u64 [a4 + 0x18] = a1\n 25974: u64 [a4] = a2\n 25976: u64 [a4 + 0x8] = a3\n 25979: sp = s0 + 0xffffffffffffff40\n 25983: ra = u64 [sp + 0xb8]\n 25987: s0 = u64 [sp + 0xb0]\n 25991: s1 = u64 [sp + 0xa8]\n 25995: sp = sp + 0xc0\n 25999: ret\n      : @1054 (gas: 37)\n 26001: sp = sp + 0xfffffffffffffce0\n 26005: a3 = sp + 0x300\n 26009: u64 [a3 + 0x18] = ra\n 26012: u64 [a3 + 0x10] = s0\n 26015: u64 [a3 + 0x8] = s1\n 26018: s0 = sp + 0x320\n 26022: sp = sp & 0xffffffffffffffe0\n 26025: s1 = sp\n 26027: a3 = u64 [a2 + 0x18]\n 26030: u64 [s1 + 0x98] = a3\n 26034: a3 = u64 [a2 + 0x10]\n 26037: u64 [s1 + 0x90] = a3\n 26041: a3 = u64 [a2 + 0x8]\n 26044: u64 [s1 + 0xa0] = a3\n 26048: a2 = u64 [a2]\n 26050: u64 [s1 + 0xa8] = a2\n 26054: a2 = u64 [a1 + 0x10]\n 26057: u64 [s1 + 0x88] = a2\n 26061: a2 = u64 [a1 + 0x8]\n 26064: u64 [s1 + 0x80] = a2\n 26068: a1 = u64 [a1]\n 26070: u64 [s1 + 0x78] = a1\n 26073: a2 = u64 [a0]\n 26075: a1 = u64 [a0 + 0x8]\n 26078: a0 = u32 [a0 + 0x10]\n 26081: a3 = 0xffffffff\n 26091: u64 [s1 + 0x70] = a3\n 26094: u64 [s1 + 728] = 0\n 26098: u64 [s1 + 0x40] = a0\n 26101: u64 [s1 + 0x2d0] = a0\n 26105: u64 [s1 + 0x30] = a1\n 26108: u64 [s1 + 0x2c8] = a1\n 26112: a1 = s1 + 0x2c0\n 26116: u64 [s1 + 0x38] = a2\n 26119: u64 [s1 + 0x2c0] = a2\n 26123: a0 = 0\n 26125: ra = 1076, jump @19\n      : @1055 [@dyn 538] (gas: 7)\n 26131: u64 [s1 + 696] = 0\n 26135: u64 [s1 + 688] = 0\n 26139: u64 [s1 + 672] = 0x1\n 26144: a0 = 0x20\n 26147: a1 = s1 + 0x2a0\n 26151: u64 [s1 + 680] = 0\n 26155: ra = 1078, jump @19\n      : @1056 [@dyn 539] (gas: 3)\n 26161: a1 = 0x2026c\n 26166: a0 = i32 [0x2026c]\n 26171: jump @1058 if a0 >u 63\n      : @1057 (gas: 2)\n 26175: u32 [0x2026c] = 0x40\n 26181: fallthrough\n      : @1058 (gas: 15)\n 26182: a0 = sp + 0xffffffffffffffe0\n 26185: a2 = a0 & 0xffffffffffffffe0\n 26188: u64 [s1 + 0x68] = a2\n 26191: sp = a2\n 26193: a0 = 0x20280\n 26198: i32 a0 = a0 + 0\n 26200: i32 a2 = a2 + 0\n 26202: u64 [s1 + 0xb0] = a1\n 26206: a1 = 0x40\n 26209: u64 [s1 + 0xb8] = a0\n 26213: ra = 0x438\n 26217: ecalli 6 // 'hash_keccak_256'\n 26219: a3 = u64 [s1 + 0x68]\n 26222: t0 = 0x43a\n 26226: jump @1371\n      : @1059 [@dyn 540] (gas: 2)\n 26229: a3 = u64 [s1 + 0x68]\n 26232: t0 = 1082, jump @1371\n      : @1060 [@dyn 541] (gas: 17)\n 26238: a0 = u64 [s1 + 0x78]\n 26241: a0 = a0 & 0xffffffffffffffff\n 26244: a1 = u64 [s1 + 0x80]\n 26248: a1 = a1 & 0xffffffffffffffff\n 26251: a2 = u64 [s1 + 0x88]\n 26255: a3 = u64 [s1 + 0x70]\n 26258: a2 = a2 & a3\n 26261: u64 [s1 + 664] = 0\n 26265: u64 [s1 + 0x78] = a2\n 26268: u64 [s1 + 0x290] = a2\n 26272: u64 [s1 + 0x80] = a1\n 26276: u64 [s1 + 0x288] = a1\n 26280: a1 = s1 + 0x280\n 26284: u64 [s1 + 0x88] = a0\n 26288: u64 [s1 + 0x280] = a0\n 26292: a0 = 0\n 26294: ra = 1084, jump @19\n      : @1061 [@dyn 542] (gas: 12)\n 26300: a0 = u64 [s1 + 0x48]\n 26303: a3 = s1 + 0x200\n 26307: u64 [a3 + 0x78] = a0\n 26310: a0 = u64 [s1 + 0x50]\n 26313: u64 [a3 + 0x70] = a0\n 26316: a0 = u64 [s1 + 0x58]\n 26319: u64 [a3 + 0x68] = a0\n 26322: a0 = 0x20\n 26325: a1 = s1 + 0x260\n 26329: a2 = u64 [s1 + 0x60]\n 26332: u64 [a3 + 0x60] = a2\n 26335: ra = 1086, jump @19\n      : @1062 [@dyn 543] (gas: 3)\n 26341: a1 = u64 [s1 + 0xb0]\n 26345: a0 = i32 [a1]\n 26347: jump @1064 if a0 >u 63\n      : @1063 (gas: 2)\n 26351: u32 [a1 + 0] = 0x40\n 26354: fallthrough\n      : @1064 (gas: 4)\n 26355: a0 = sp + 0xffffffffffffffe0\n 26358: a0 = a0 & 0xffffffffffffffe0\n 26361: u64 [s1 + 0x70] = a0\n 26364: t0 = 1088, jump @1408\n      : @1065 [@dyn 544] (gas: 5)\n 26370: ra = 0x442\n 26374: ecalli 6 // 'hash_keccak_256'\n 26376: a3 = u64 [s1 + 0x70]\n 26379: t0 = 0x444\n 26383: jump @1380\n      : @1066 [@dyn 545] (gas: 2)\n 26386: a3 = u64 [s1 + 0x70]\n 26389: t0 = 1092, jump @1380\n      : @1067 [@dyn 546] (gas: 2)\n 26395: a0 = s1 + 0x240\n 26399: ra = 1094, jump @21\n      : @1068 [@dyn 547] (gas: 9)\n 26405: ra = u64 [s1 + 0x258]\n 26409: t1 = u64 [s1 + 0x250]\n 26413: a4 = u64 [s1 + 0x248]\n 26417: t0 = u64 [s1 + 0x240]\n 26421: a0 = a4 & ra\n 26424: a1 = t0 & t1\n 26427: a0 = a0 & a1\n 26430: a1 = 0xffffffffffffffff\n 26433: jump @1085 if a0 == a1\n      : @1069 (gas: 23)\n 26437: a0 = u64 [s1 + 0xa8]\n 26441: a2 = t0 <u a0\n 26444: a1 = u64 [s1 + 0xa0]\n 26448: a0 = a4 ^ a1\n 26451: a5 = a4 <u a1\n 26454: u64 [s1 + 0x50] = a2\n 26457: a5 = a2 if a0 == 0\n 26460: a2 = u64 [s1 + 0x90]\n 26464: a3 = t1 <u a2\n 26467: a1 = u64 [s1 + 0x98]\n 26471: a0 = ra ^ a1\n 26474: a1 = ra <u a1\n 26477: u64 [s1 + 0x28] = a3\n 26480: a1 = a3 if a0 == 0\n 26483: a2 = t1 ^ a2\n 26486: a0 = a0 | a2\n 26489: u64 [s1 + 0x48] = a5\n 26492: a1 = a5 if a0 == 0\n 26495: u64 [s1 + 0x70] = t0\n 26498: u64 [s1 + 0x68] = a4\n 26501: u64 [s1 + 0x60] = ra\n 26504: u64 [s1 + 0x58] = t1\n 26507: jump @1086 if a1 != 0\n      : @1070 (gas: 6)\n 26511: a3 = u64 [s1 + 0x40]\n 26514: a2 = u64 [s1 + 0x38]\n 26517: a0 = a2 | a3\n 26520: t2 = u64 [s1 + 0x30]\n 26523: a0 = a0 | t2\n 26526: jump @1093 if a0 == 0\n      : @1071 (gas: 6)\n 26530: a0 = u64 [s1 + 0x88]\n 26534: a1 = u64 [s1 + 0x78]\n 26537: a0 = a0 | a1\n 26540: a1 = u64 [s1 + 0x80]\n 26544: a0 = a0 | a1\n 26547: jump @1095 if a0 == 0\n      : @1072 (gas: 7)\n 26551: u64 [s1 + 568] = 0\n 26555: u64 [s1 + 0x220] = a2\n 26559: u64 [s1 + 0x228] = t2\n 26563: a1 = s1 + 0x220\n 26567: u64 [s1 + 0x230] = a3\n 26571: a0 = 0\n 26573: ra = 1096, jump @19\n      : @1073 [@dyn 548] (gas: 7)\n 26579: u64 [s1 + 536] = 0\n 26583: u64 [s1 + 528] = 0\n 26587: u64 [s1 + 512] = 0x1\n 26592: a0 = 0x20\n 26595: a1 = s1 + 0x200\n 26599: u64 [s1 + 520] = 0\n 26603: ra = 1098, jump @19\n      : @1074 [@dyn 549] (gas: 3)\n 26609: a1 = u64 [s1 + 0xb0]\n 26613: a0 = i32 [a1]\n 26615: jump @1076 if a0 >u 63\n      : @1075 (gas: 2)\n 26619: u32 [a1 + 0] = 0x40\n 26622: fallthrough\n      : @1076 (gas: 4)\n 26623: a0 = sp + 0xffffffffffffffe0\n 26626: a0 = a0 & 0xffffffffffffffe0\n 26629: u64 [s1 + 0x40] = a0\n 26632: t0 = 1100, jump @1408\n      : @1077 [@dyn 550] (gas: 5)\n 26638: ra = 0x44e\n 26642: ecalli 6 // 'hash_keccak_256'\n 26644: a3 = u64 [s1 + 0x40]\n 26647: t0 = 0x450\n 26651: jump @1406\n      : @1078 [@dyn 551] (gas: 2)\n 26654: a3 = u64 [s1 + 0x40]\n 26657: t0 = 1104, jump @1406\n      : @1079 [@dyn 552] (gas: 21)\n 26663: u64 [s1 + 0x38] = a0\n 26666: a0 = reverse a1\n 26668: u64 [s1 + 0x30] = a0\n 26671: a0 = reverse a2\n 26673: u64 [s1 + 0x20] = a0\n 26676: a0 = reverse a3\n 26678: u64 [s1 + 0x18] = a0\n 26681: a0 = sp + 0xffffffffffffffe0\n 26684: a0 = a0 & 0xffffffffffffffe0\n 26687: u64 [s1 + 0x40] = a0\n 26690: sp = a0\n 26692: u64 [s1 + 504] = 0\n 26696: a0 = u64 [s1 + 0x78]\n 26699: u64 [s1 + 0x1f0] = a0\n 26703: a0 = u64 [s1 + 0x80]\n 26707: u64 [s1 + 0x1e8] = a0\n 26711: a1 = s1 + 0x1e0\n 26715: a0 = u64 [s1 + 0x88]\n 26719: u64 [s1 + 0x1e0] = a0\n 26723: a0 = 0\n 26725: ra = 1106, jump @19\n      : @1080 [@dyn 553] (gas: 12)\n 26731: a0 = u64 [s1 + 0x18]\n 26734: a3 = s1 + 0x100\n 26738: u64 [a3 + 0xd8] = a0\n 26742: a0 = u64 [s1 + 0x20]\n 26745: u64 [a3 + 0xd0] = a0\n 26749: a0 = u64 [s1 + 0x30]\n 26752: u64 [a3 + 0xc8] = a0\n 26756: a0 = 0x20\n 26759: a1 = s1 + 0x1c0\n 26763: a2 = u64 [s1 + 0x38]\n 26766: u64 [a3 + 0xc0] = a2\n 26770: ra = 1108, jump @19\n      : @1081 [@dyn 554] (gas: 3)\n 26776: a1 = u64 [s1 + 0xb0]\n 26780: a0 = i32 [a1]\n 26782: jump @1083 if a0 >u 63\n      : @1082 (gas: 2)\n 26786: u32 [a1 + 0] = 0x40\n 26789: fallthrough\n      : @1083 (gas: 4)\n 26790: a0 = sp + 0xffffffffffffffe0\n 26793: a0 = a0 & 0xffffffffffffffe0\n 26796: u64 [s1 + 0xb0] = a0\n 26800: t0 = 1110, jump @1408\n      : @1084 [@dyn 555] (gas: 43)\n 26806: ecalli 6 // 'hash_keccak_256'\n 26808: a2 = u64 [s1 + 0xb0]\n 26812: a0 = u64 [a2]\n 26814: a0 = reverse a0\n 26816: a1 = u64 [a2 + 0x8]\n 26819: a5 = u64 [s1 + 0x40]\n 26822: u64 [a5 + 0x18] = a0\n 26825: a0 = u64 [a2 + 0x10]\n 26828: a2 = u64 [a2 + 0x18]\n 26831: a1 = reverse a1\n 26833: u64 [a5 + 0x10] = a1\n 26836: a0 = reverse a0\n 26838: u64 [a5 + 0x8] = a0\n 26841: a0 = reverse a2\n 26843: u64 [a5] = a0\n 26845: a0 = u64 [s1 + 0x90]\n 26849: a1 = u64 [s1 + 0x58]\n 26852: a0 = a1 - a0\n 26855: a2 = u64 [s1 + 0x48]\n 26858: a1 = a0 - a2\n 26861: a0 = a0 <u a2\n 26864: a2 = u64 [s1 + 0x98]\n 26868: a3 = u64 [s1 + 0x60]\n 26871: a2 = a3 - a2\n 26874: a3 = u64 [s1 + 0x28]\n 26877: a2 = a2 - a3\n 26880: a2 = a2 - a0\n 26883: a0 = u64 [s1 + 0xa0]\n 26887: a3 = u64 [s1 + 0x68]\n 26890: a0 = a3 - a0\n 26893: a3 = u64 [s1 + 0x50]\n 26896: a0 = a0 - a3\n 26899: a3 = u64 [s1 + 0xa8]\n 26903: a4 = u64 [s1 + 0x70]\n 26906: a3 = a4 - a3\n 26909: a4 = s1 + 0x200\n 26913: u64 [a4 + 0xf8] = a2\n 26917: u64 [a4 + 0xf0] = a1\n 26921: u64 [a4 + 0xe8] = a0\n 26925: u64 [a4 + 0xe0] = a3\n 26929: a1 = s1 + 0x2e0\n 26933: a0 = a5\n 26935: ra = 1112, jump @24\n      : @1085 [@dyn 556] (gas: 7)\n 26941: sp = s0 + 0xfffffffffffffce0\n 26945: a0 = sp + 0x300\n 26949: ra = u64 [a0 + 0x18]\n 26952: s0 = u64 [a0 + 0x10]\n 26955: s1 = u64 [a0 + 0x8]\n 26958: sp = sp + 0x320\n 26962: ret\n      : @1086 (gas: 8)\n 26964: u64 [s1 + 304] = 0\n 26968: u64 [s1 + 296] = 0\n 26972: u64 [s1 + 288] = 0\n 26976: a0 = 0xfb8f41b200000000\n 26986: a1 = s1 + 0x120\n 26990: u64 [s1 + 0x138] = a0\n 26994: a0 = 0\n 26996: ra = 1114, jump @19\n      : @1087 [@dyn 557] (gas: 11)\n 27002: u64 [s1 + 280] = 0\n 27006: a0 = u64 [s1 + 0x78]\n 27009: a3 = s1 + 0x100\n 27013: u64 [a3 + 0x10] = a0\n 27016: a0 = u64 [s1 + 0x80]\n 27020: u64 [a3 + 0x8] = a0\n 27023: a0 = 0x4\n 27026: a1 = s1 + 0x100\n 27030: a2 = u64 [s1 + 0x88]\n 27034: u64 [a3] = a2\n 27036: ra = 1116, jump @19\n      : @1088 [@dyn 558] (gas: 11)\n 27042: a0 = u64 [s1 + 0x60]\n 27045: u64 [s1 + 0xf8] = a0\n 27049: a0 = u64 [s1 + 0x58]\n 27052: u64 [s1 + 0xf0] = a0\n 27056: a0 = u64 [s1 + 0x68]\n 27059: u64 [s1 + 0xe8] = a0\n 27063: a0 = 0x24\n 27066: a1 = s1 + 0xe0\n 27070: a2 = u64 [s1 + 0x70]\n 27073: u64 [s1 + 0xe0] = a2\n 27077: ra = 1118, jump @19\n      : @1089 [@dyn 559] (gas: 11)\n 27083: a0 = u64 [s1 + 0x98]\n 27087: u64 [s1 + 0xd8] = a0\n 27091: a0 = u64 [s1 + 0x90]\n 27095: u64 [s1 + 0xd0] = a0\n 27099: a0 = u64 [s1 + 0xa0]\n 27103: u64 [s1 + 0xc8] = a0\n 27107: a0 = 0x44\n 27110: a1 = s1 + 0xc0\n 27114: a2 = u64 [s1 + 0xa8]\n 27118: u64 [s1 + 0xc0] = a2\n 27122: ra = 1120, jump @19\n      : @1090 [@dyn 560] (gas: 3)\n 27128: a0 = u64 [s1 + 0xb0]\n 27132: a0 = i32 [a0]\n 27134: jump @1092 if a0 >u 127\n      : @1091 (gas: 5)\n 27138: a1 = u64 [s1 + 0xb0]\n 27142: u32 [a1 + 0] = 0x80\n 27146: a0 = 0x1\n 27149: a2 = 0x64\n 27152: jump @1100\n      : @1092 (gas: 6)\n 27155: a0 = 0x1\n 27158: a2 = 0x64\n 27161: a1 = u64 [s1 + 0xb8]\n 27165: ra = 0x468\n 27169: ecalli 7 // 'seal_return'\n 27171: jump @1101\n      : @1093 (gas: 8)\n 27174: u64 [s1 + 368] = 0\n 27178: u64 [s1 + 360] = 0\n 27182: u64 [s1 + 352] = 0\n 27186: a0 = 0xe602df0500000000\n 27196: a1 = s1 + 0x160\n 27200: u64 [s1 + 0x178] = a0\n 27204: a0 = 0\n 27206: ra = 1122, jump @19\n      : @1094 [@dyn 561] (gas: 8)\n 27212: u64 [s1 + 344] = 0\n 27216: u64 [s1 + 336] = 0\n 27220: u64 [s1 + 328] = 0\n 27224: a0 = 0x4\n 27227: a1 = s1 + 0x140\n 27231: u64 [s1 + 320] = 0\n 27235: ra = 0x466\n 27239: jump @19\n      : @1095 (gas: 8)\n 27242: u64 [s1 + 432] = 0\n 27246: u64 [s1 + 424] = 0\n 27250: u64 [s1 + 416] = 0\n 27254: a0 = 0x94280d6200000000\n 27264: a1 = s1 + 0x1a0\n 27268: u64 [s1 + 0x1b8] = a0\n 27272: a0 = 0\n 27274: ra = 1124, jump @19\n      : @1096 [@dyn 562] (gas: 7)\n 27280: u64 [s1 + 408] = 0\n 27284: u64 [s1 + 400] = 0\n 27288: u64 [s1 + 392] = 0\n 27292: a0 = 0x4\n 27295: a1 = s1 + 0x180\n 27299: u64 [s1 + 384] = 0\n 27303: ra = 1126, jump @19\n      : @1097 [@dyn 563] (gas: 3)\n 27309: a0 = u64 [s1 + 0xb0]\n 27313: a0 = i32 [a0]\n 27315: jump @1099 if a0 >u 63\n      : @1098 (gas: 5)\n 27319: a1 = u64 [s1 + 0xb0]\n 27323: u32 [a1 + 0] = 0x40\n 27326: a0 = 0x1\n 27329: a2 = 0x24\n 27332: jump @1100\n      : @1099 (gas: 6)\n 27334: a0 = 0x1\n 27337: a2 = 0x24\n 27340: a1 = u64 [s1 + 0xb8]\n 27344: ra = 0x468\n 27348: ecalli 7 // 'seal_return'\n 27350: jump @1101\n      : @1100 (gas: 4)\n 27352: a1 = u64 [s1 + 0xb8]\n 27356: ra = 0x468\n 27360: ecalli 7 // 'seal_return'\n 27362: fallthrough\n      : @1101 [@dyn 564] (gas: 17)\n 27363: sp = sp + 0xfffffffffffffc20\n 27367: a3 = sp + 0x300\n 27371: u64 [a3 + 0xd8] = ra\n 27375: u64 [a3 + 0xd0] = s0\n 27379: u64 [a3 + 0xc8] = s1\n 27383: s0 = sp + 0x3e0\n 27387: sp = sp & 0xffffffffffffffe0\n 27390: s1 = sp\n 27392: a5 = u32 [a0 + 0x10]\n 27395: a3 = u64 [a0]\n 27397: a4 = u64 [a0 + 0x8]\n 27400: u64 [s1 + 0x78] = a3\n 27403: u64 [s1 + 0x68] = a5\n 27406: a0 = a3 | a5\n 27409: u64 [s1 + 0x70] = a4\n 27412: a0 = a0 | a4\n 27415: jump @1135 if a0 == 0\n      : @1102 (gas: 14)\n 27419: a0 = u64 [a1 + 0x10]\n 27422: a3 = u64 [a1 + 0x8]\n 27425: a1 = u64 [a1]\n 27427: a4 = 0xffffffffffffffff\n 27430: a5 = 0xffffffff\n 27440: a3 = a3 & a4\n 27443: a1 = a1 & a4\n 27446: a0 = a0 & a5\n 27449: u64 [s1 + 0x48] = a1\n 27452: u64 [s1 + 0x38] = a0\n 27455: a0 = a0 | a1\n 27458: u64 [s1 + 0x40] = a3\n 27461: a0 = a0 | a3\n 27464: jump @1140 if a0 == 0\n      : @1103 (gas: 9)\n 27468: a0 = u64 [a2 + 0x18]\n 27471: u64 [s1 + 0x98] = a0\n 27475: a0 = u64 [a2 + 0x10]\n 27478: u64 [s1 + 0x88] = a0\n 27482: a0 = u64 [a2 + 0x8]\n 27485: u64 [s1 + 0x80] = a0\n 27489: a0 = u64 [a2]\n 27491: u64 [s1 + 0x90] = a0\n 27495: ra = 1130, jump @1334\n      : @1104 [@dyn 565] (gas: 11)\n 27501: u64 [s1 + 824] = 0\n 27505: a0 = u64 [s1 + 0x68]\n 27508: a2 = s1 + 0x300\n 27512: u64 [a2 + 0x30] = a0\n 27515: a0 = u64 [s1 + 0x70]\n 27518: u64 [a2 + 0x28] = a0\n 27521: a1 = s1 + 0x320\n 27525: a0 = u64 [s1 + 0x78]\n 27528: u64 [a2 + 0x20] = a0\n 27531: a0 = 0\n 27533: ra = 1132, jump @19\n      : @1105 [@dyn 566] (gas: 7)\n 27539: u64 [s1 + 792] = 0\n 27543: u64 [s1 + 784] = 0\n 27547: u64 [s1 + 776] = 0\n 27551: a0 = 0x20\n 27554: a1 = s1 + 0x300\n 27558: u64 [s1 + 768] = 0\n 27562: ra = 1134, jump @19\n      : @1106 [@dyn 567] (gas: 3)\n 27568: a2 = 0x2026c\n 27573: a0 = i32 [0x2026c]\n 27578: jump @1108 if a0 >u 63\n      : @1107 (gas: 2)\n 27582: u32 [0x2026c] = 0x40\n 27588: fallthrough\n      : @1108 (gas: 15)\n 27589: u64 [s1 + 0x58] = a2\n 27592: a0 = sp + 0xffffffffffffffe0\n 27595: a2 = a0 & 0xffffffffffffffe0\n 27598: u64 [s1 + 0x50] = a2\n 27601: sp = a2\n 27603: a0 = 0x20280\n 27608: i32 a0 = a0 + 0\n 27610: i32 a2 = a2 + 0\n 27612: a1 = 0x40\n 27615: u64 [s1 + 0x60] = a0\n 27618: ra = 0x470\n 27622: ecalli 6 // 'hash_keccak_256'\n 27624: a3 = u64 [s1 + 0x50]\n 27627: t0 = 0x472\n 27631: jump @1396\n      : @1109 [@dyn 568] (gas: 2)\n 27634: a3 = u64 [s1 + 0x50]\n 27637: t0 = 1138, jump @1396\n      : @1110 [@dyn 569] (gas: 7)\n 27643: u64 [a4 + 0x58] = a3\n 27646: u64 [a4 + 0x50] = a2\n 27649: u64 [a4 + 0x48] = a1\n 27652: u64 [a4 + 0x40] = a0\n 27655: a0 = s1 + 0x2e0\n 27659: a1 = s1 + 0x340\n 27663: ra = 1140, jump @21\n      : @1111 [@dyn 570] (gas: 28)\n 27669: a1 = s1 + 0x200\n 27673: a2 = u64 [a1 + 0xf8]\n 27677: a0 = u64 [a1 + 0xf0]\n 27681: a5 = u64 [a1 + 0xe8]\n 27685: a4 = u64 [a1 + 0xe0]\n 27689: a1 = u64 [s1 + 0x98]\n 27693: t1 = a2 ^ a1\n 27696: u64 [s1 + 0x28] = a2\n 27699: a1 = a2 <u a1\n 27702: a2 = u64 [s1 + 0x88]\n 27706: a3 = a0 <u a2\n 27709: u64 [s1 + 0x10] = a3\n 27712: a1 = a3 if t1 == 0\n 27715: a3 = u64 [s1 + 0x80]\n 27719: t0 = a5 ^ a3\n 27722: u64 [s1 + 0x30] = a5\n 27725: a5 = a5 <u a3\n 27728: a3 = u64 [s1 + 0x90]\n 27732: u64 [s1 + 0x50] = a4\n 27735: a3 = a4 <u a3\n 27738: u64 [s1 + 0x18] = a3\n 27741: a5 = a3 if t0 == 0\n 27744: u64 [s1 + 0x20] = a0\n 27747: a2 = a2 ^ a0\n 27750: a0 = a2 | t1\n 27753: u64 [s1 + 0x8] = a5\n 27756: a1 = a5 if a0 == 0\n 27759: jump @1146 if a1 != 0\n      : @1112 (gas: 11)\n 27763: u64 [s1 + 728] = 0\n 27767: a0 = u64 [s1 + 0x78]\n 27770: a2 = s1 + 0x200\n 27774: u64 [a2 + 0xc0] = a0\n 27778: a0 = u64 [s1 + 0x70]\n 27781: u64 [a2 + 0xc8] = a0\n 27785: a1 = s1 + 0x2c0\n 27789: a0 = u64 [s1 + 0x68]\n 27792: u64 [a2 + 0xd0] = a0\n 27796: a0 = 0\n 27798: ra = 1142, jump @19\n      : @1113 [@dyn 571] (gas: 7)\n 27804: u64 [s1 + 696] = 0\n 27808: u64 [s1 + 688] = 0\n 27812: u64 [s1 + 680] = 0\n 27816: a0 = 0x20\n 27819: a1 = s1 + 0x2a0\n 27823: u64 [s1 + 672] = 0\n 27827: ra = 1144, jump @19\n      : @1114 [@dyn 572] (gas: 28)\n 27833: a0 = u64 [s1 + 0x88]\n 27837: a1 = u64 [s1 + 0x20]\n 27840: a0 = a1 - a0\n 27843: a2 = u64 [s1 + 0x8]\n 27846: a1 = a0 - a2\n 27849: u64 [s1 + 0x20] = a1\n 27852: a0 = a0 <u a2\n 27855: a1 = u64 [s1 + 0x98]\n 27859: a2 = u64 [s1 + 0x28]\n 27862: a1 = a2 - a1\n 27865: a2 = u64 [s1 + 0x10]\n 27868: a1 = a1 - a2\n 27871: a1 = a1 - a0\n 27874: u64 [s1 + 0x28] = a1\n 27877: a2 = u64 [s1 + 0x58]\n 27880: a0 = i32 [a2]\n 27882: a1 = u64 [s1 + 0x80]\n 27886: a3 = u64 [s1 + 0x30]\n 27889: a1 = a3 - a1\n 27892: a3 = u64 [s1 + 0x18]\n 27895: a1 = a1 - a3\n 27898: u64 [s1 + 0x30] = a1\n 27901: a4 = 0x3f\n 27904: a1 = u64 [s1 + 0x90]\n 27908: a3 = u64 [s1 + 0x50]\n 27911: a3 = a3 - a1\n 27914: u64 [s1 + 0x50] = a3\n 27917: jump @1116 if a4 <u a0\n      : @1115 (gas: 2)\n 27920: u32 [a2 + 0] = 0x40\n 27923: fallthrough\n      : @1116 (gas: 4)\n 27924: a0 = sp + 0xffffffffffffffe0\n 27927: a0 = a0 & 0xffffffffffffffe0\n 27930: u64 [s1 + 0x18] = a0\n 27933: t0 = 1146, jump @1362\n      : @1117 [@dyn 573] (gas: 5)\n 27939: ra = 0x47c\n 27943: ecalli 6 // 'hash_keccak_256'\n 27945: a3 = u64 [s1 + 0x18]\n 27948: t0 = 0x47e\n 27952: jump @1396\n      : @1118 [@dyn 574] (gas: 2)\n 27955: a3 = u64 [s1 + 0x18]\n 27958: t0 = 1150, jump @1396\n      : @1119 [@dyn 575] (gas: 15)\n 27964: u64 [a4 + 0x78] = a3\n 27967: u64 [a4 + 0x70] = a2\n 27970: u64 [a4 + 0x68] = a1\n 27973: u64 [a4 + 0x60] = a0\n 27976: a0 = u64 [s1 + 0x28]\n 27979: u64 [a4 + 0x98] = a0\n 27983: a0 = u64 [s1 + 0x20]\n 27986: u64 [a4 + 0x90] = a0\n 27990: a0 = u64 [s1 + 0x30]\n 27993: u64 [a4 + 0x88] = a0\n 27997: a0 = u64 [s1 + 0x50]\n 28000: u64 [a4 + 0x80] = a0\n 28004: a0 = s1 + 0x360\n 28008: a1 = s1 + 0x380\n 28012: ra = 1152, jump @24\n      : @1120 [@dyn 576] (gas: 11)\n 28018: u64 [s1 + 664] = 0\n 28022: a0 = u64 [s1 + 0x38]\n 28025: a2 = s1 + 0x200\n 28029: u64 [a2 + 0x90] = a0\n 28033: a0 = u64 [s1 + 0x40]\n 28036: u64 [a2 + 0x88] = a0\n 28040: a1 = s1 + 0x280\n 28044: a0 = u64 [s1 + 0x48]\n 28047: u64 [a2 + 0x80] = a0\n 28051: a0 = 0\n 28053: ra = 1154, jump @19\n      : @1121 [@dyn 577] (gas: 1)\n 28059: t0 = 1156, jump @1400\n      : @1122 [@dyn 578] (gas: 1)\n 28065: ra = 1158, jump @19\n      : @1123 [@dyn 579] (gas: 7)\n 28071: a1 = u64 [s1 + 0x58]\n 28074: a0 = sp + 0xffffffffffffffe0\n 28077: a0 = a0 & 0xffffffffffffffe0\n 28080: u64 [s1 + 0x50] = a0\n 28083: sp = a0\n 28085: a0 = i32 [a1]\n 28087: jump @1125 if a0 >u 63\n      : @1124 (gas: 2)\n 28091: u32 [a1 + 0] = 0x40\n 28094: fallthrough\n      : @1125 (gas: 4)\n 28095: a0 = sp + 0xffffffffffffffe0\n 28098: a0 = a0 & 0xffffffffffffffe0\n 28101: u64 [s1 + 0x58] = a0\n 28104: t0 = 1160, jump @1362\n      : @1126 [@dyn 580] (gas: 17)\n 28110: ecalli 6 // 'hash_keccak_256'\n 28112: a3 = u64 [s1 + 0x58]\n 28115: a0 = u64 [a3 + 0x18]\n 28118: a1 = u64 [a3 + 0x10]\n 28121: a2 = u64 [a3 + 0x8]\n 28124: a3 = u64 [a3]\n 28126: a0 = reverse a0\n 28128: a4 = reverse a1\n 28130: a2 = reverse a2\n 28132: a3 = reverse a3\n 28134: a1 = u64 [s1 + 0x50]\n 28137: u64 [a1 + 0x18] = a3\n 28140: u64 [a1 + 0x10] = a2\n 28143: u64 [a1 + 0x8] = a4\n 28146: u64 [a1] = a0\n 28148: a0 = s1 + 0x240\n 28152: ra = 1162, jump @21\n      : @1127 [@dyn 581] (gas: 30)\n 28158: a0 = u64 [s1 + 0x248]\n 28162: a1 = u64 [s1 + 0x240]\n 28166: t0 = u64 [s1 + 0x258]\n 28170: a3 = u64 [s1 + 0x250]\n 28174: a4 = u64 [s1 + 0x80]\n 28178: a4 = a4 + a0\n 28181: a5 = u64 [s1 + 0x90]\n 28185: a5 = a5 + a1\n 28188: a1 = a5 <u a1\n 28191: a4 = a4 + a1\n 28194: a2 = a4 ^ a0\n 28197: a0 = a4 <u a0\n 28200: a0 = a1 if a2 == 0\n 28203: a1 = u64 [s1 + 0x88]\n 28207: a1 = a1 + a3\n 28210: a2 = u64 [s1 + 0x98]\n 28214: t0 = t0 + a2\n 28217: a2 = a1 <u a3\n 28220: a2 = a2 + t0\n 28223: a0 = a0 + a1\n 28226: a1 = a0 <u a1\n 28229: a1 = a1 + a2\n 28232: a2 = s1 + 0x300\n 28236: u64 [a2 + 0xa0] = a5\n 28240: u64 [a2 + 0xa8] = a4\n 28244: u64 [a2 + 0xb0] = a0\n 28248: u64 [a2 + 0xb8] = a1\n 28252: a1 = s1 + 0x3a0\n 28256: a0 = u64 [s1 + 0x50]\n 28259: ra = 1164, jump @24\n      : @1128 [@dyn 582] (gas: 3)\n 28265: a0 = s1 + 0x220\n 28269: a1 = 0x40\n 28272: ra = 1166, jump @17\n      : @1129 [@dyn 583] (gas: 6)\n 28278: a4 = s1 + 0x200\n 28282: a3 = u64 [a4 + 0x38]\n 28285: a1 = u64 [a4 + 0x30]\n 28288: a2 = u64 [a4 + 0x28]\n 28291: a0 = u64 [a4 + 0x20]\n 28294: t0 = 1168, jump @1356\n      : @1130 [@dyn 584] (gas: 1)\n 28300: jump @1134 if a1 != 0\n      : @1131 (gas: 12)\n 28304: a1 = u64 [s1 + 0x90]\n 28308: a3 = s1 + 0x200\n 28312: u64 [a3] = a1\n 28314: a1 = u64 [s1 + 0x80]\n 28318: u64 [a3 + 0x8] = a1\n 28321: a1 = u64 [s1 + 0x88]\n 28325: u64 [a3 + 0x10] = a1\n 28328: a1 = s1 + 0x200\n 28332: a2 = u64 [s1 + 0x98]\n 28336: u64 [a3 + 0x18] = a2\n 28339: u64 [s1 + 0x98] = a0\n 28343: ra = 1170, jump @19\n      : @1132 [@dyn 585] (gas: 29)\n 28349: u64 [s1 + 440] = 0\n 28353: a0 = u64 [s1 + 0x38]\n 28356: a5 = s1 + 0x100\n 28360: u64 [a5 + 0xb0] = a0\n 28364: a0 = u64 [s1 + 0x40]\n 28367: u64 [a5 + 0xa8] = a0\n 28371: a0 = u64 [s1 + 0x48]\n 28374: u64 [a5 + 0xa0] = a0\n 28378: u64 [s1 + 472] = 0\n 28382: a0 = u64 [s1 + 0x68]\n 28385: u64 [a5 + 0xd0] = a0\n 28389: a0 = u64 [s1 + 0x70]\n 28392: u64 [a5 + 0xc8] = a0\n 28396: a0 = u64 [0x201c8]\n 28401: a1 = u64 [0x201d0]\n 28406: a2 = u64 [0x201d8]\n 28411: a3 = u64 [s1 + 0x78]\n 28414: u64 [a5 + 0xc0] = a3\n 28418: u64 [a5 + 0xf8] = a0\n 28422: u64 [a5 + 0xf0] = a1\n 28426: u64 [a5 + 0xe8] = a2\n 28430: a0 = u64 [0x201e0]\n 28435: a1 = 0x20\n 28438: a2 = s1 + 0x1e0\n 28442: a3 = s1 + 0x1c0\n 28446: a4 = s1 + 0x1a0\n 28450: u64 [a5 + 0xe0] = a0\n 28454: a0 = u64 [s1 + 0x98]\n 28458: ra = 1172, jump @27\n      : @1133 [@dyn 586] (gas: 7)\n 28464: sp = s0 + 0xfffffffffffffc20\n 28468: a0 = sp + 0x300\n 28472: ra = u64 [a0 + 0xd8]\n 28476: s0 = u64 [a0 + 0xd0]\n 28480: s1 = u64 [a0 + 0xc8]\n 28484: sp = sp + 0x3e0\n 28488: ret\n      : @1134 (gas: 1)\n 28490: trap\n      : @1135 (gas: 8)\n 28491: u64 [s1 + 208] = 0\n 28495: u64 [s1 + 200] = 0\n 28499: u64 [s1 + 192] = 0\n 28503: a0 = 0x96c6fd1e00000000\n 28513: a1 = s1 + 0xc0\n 28517: u64 [s1 + 0xd8] = a0\n 28521: a0 = 0\n 28523: ra = 1174, jump @19\n      : @1136 [@dyn 587] (gas: 7)\n 28529: u64 [s1 + 184] = 0\n 28533: u64 [s1 + 176] = 0\n 28537: u64 [s1 + 168] = 0\n 28541: a0 = 0x4\n 28544: a1 = s1 + 0xa0\n 28548: u64 [s1 + 160] = 0\n 28552: ra = 1176, jump @19\n      : @1137 [@dyn 588] (gas: 2)\n 28558: a1 = i32 [0x2026c]\n 28563: jump @1139 if a1 >u 63\n      : @1138 (gas: 3)\n 28567: u32 [0x2026c] = 0x40\n 28573: a1 = 0x20280\n 28578: jump @1145\n      : @1139 (gas: 2)\n 28580: a1 = 0x20280\n 28585: jump @1145\n      : @1140 (gas: 8)\n 28587: u64 [s1 + 272] = 0\n 28591: u64 [s1 + 264] = 0\n 28595: u64 [s1 + 256] = 0\n 28599: a0 = 0xec442f0500000000\n 28609: a1 = s1 + 0x100\n 28613: u64 [s1 + 0x118] = a0\n 28617: a0 = 0\n 28619: ra = 1178, jump @19\n      : @1141 [@dyn 589] (gas: 7)\n 28625: u64 [s1 + 248] = 0\n 28629: u64 [s1 + 240] = 0\n 28633: u64 [s1 + 232] = 0\n 28637: a0 = 0x4\n 28640: a1 = s1 + 0xe0\n 28644: u64 [s1 + 224] = 0\n 28648: ra = 1180, jump @19\n      : @1142 [@dyn 590] (gas: 2)\n 28654: a1 = i32 [0x2026c]\n 28659: jump @1144 if a1 >u 63\n      : @1143 (gas: 3)\n 28663: u32 [0x2026c] = 0x40\n 28669: a1 = 0x20280\n 28674: jump @1145\n      : @1144 (gas: 2)\n 28676: a1 = 0x20280\n 28681: fallthrough\n      : @1145 (gas: 5)\n 28682: i32 a1 = a1 + 0\n 28684: a0 = 0x1\n 28687: a2 = 0x24\n 28690: ecalli 7 // 'seal_return'\n 28692: fallthrough\n      : @1146 (gas: 8)\n 28693: u64 [s1 + 400] = 0\n 28697: u64 [s1 + 392] = 0\n 28701: u64 [s1 + 384] = 0\n 28705: a0 = 0xe450d38c00000000\n 28715: a1 = s1 + 0x180\n 28719: u64 [s1 + 0x198] = a0\n 28723: a0 = 0\n 28725: ra = 1182, jump @19\n      : @1147 [@dyn 591] (gas: 10)\n 28731: u64 [s1 + 376] = 0\n 28735: a0 = u64 [s1 + 0x68]\n 28738: u64 [s1 + 0x170] = a0\n 28742: a0 = u64 [s1 + 0x70]\n 28745: u64 [s1 + 0x168] = a0\n 28749: a0 = 0x4\n 28752: a1 = s1 + 0x160\n 28756: a2 = u64 [s1 + 0x78]\n 28759: u64 [s1 + 0x160] = a2\n 28763: ra = 1184, jump @19\n      : @1148 [@dyn 592] (gas: 11)\n 28769: a0 = u64 [s1 + 0x28]\n 28772: u64 [s1 + 0x158] = a0\n 28776: a0 = u64 [s1 + 0x20]\n 28779: u64 [s1 + 0x150] = a0\n 28783: a0 = u64 [s1 + 0x30]\n 28786: u64 [s1 + 0x148] = a0\n 28790: a0 = 0x24\n 28793: a1 = s1 + 0x140\n 28797: a2 = u64 [s1 + 0x50]\n 28800: u64 [s1 + 0x140] = a2\n 28804: ra = 1186, jump @19\n      : @1149 [@dyn 593] (gas: 12)\n 28810: a0 = u64 [s1 + 0x98]\n 28814: a3 = s1 + 0x100\n 28818: u64 [a3 + 0x38] = a0\n 28821: a0 = u64 [s1 + 0x88]\n 28825: u64 [a3 + 0x30] = a0\n 28828: a0 = u64 [s1 + 0x80]\n 28832: u64 [a3 + 0x28] = a0\n 28835: a0 = 0x44\n 28838: a1 = s1 + 0x120\n 28842: a2 = u64 [s1 + 0x90]\n 28846: u64 [a3 + 0x20] = a2\n 28849: ra = 1188, jump @19\n      : @1150 [@dyn 594] (gas: 3)\n 28855: a0 = u64 [s1 + 0x58]\n 28858: a0 = i32 [a0]\n 28860: jump @1152 if a0 >u 127\n      : @1151 (gas: 3)\n 28864: a1 = u64 [s1 + 0x58]\n 28867: u32 [a1 + 0] = 0x80\n 28871: fallthrough\n      : @1152 (gas: 6)\n 28872: a0 = 0x1\n 28875: a2 = 0x64\n 28878: a1 = u64 [s1 + 0x60]\n 28881: ra = 0x4a6\n 28885: ecalli 7 // 'seal_return'\n 28887: fallthrough\n      : @1153 [@dyn 595] (gas: 22)\n 28888: sp = sp + 0xfffffffffffffe60\n 28892: u64 [sp + 0x198] = ra\n 28896: u64 [sp + 0x190] = s0\n 28900: u64 [sp + 0x188] = s1\n 28904: s0 = sp + 0x1a0\n 28908: sp = sp & 0xffffffffffffffe0\n 28911: s1 = sp\n 28913: a0 = u64 [0x201e8]\n 28918: u64 [s1 + 0x38] = a0\n 28921: u64 [s1 + 0x178] = a0\n 28925: a1 = u64 [0x201f0]\n 28930: a2 = u64 [0x201f8]\n 28935: a0 = u64 [0x20200]\n 28940: u64 [s1 + 0x28] = a1\n 28943: u64 [s1 + 0x170] = a1\n 28947: u64 [s1 + 0x20] = a2\n 28950: u64 [s1 + 0x168] = a2\n 28954: a1 = s1 + 0x160\n 28958: u64 [s1 + 0x30] = a0\n 28961: u64 [s1 + 0x160] = a0\n 28965: a0 = 0\n 28967: ra = 1192, jump @19\n      : @1154 [@dyn 596] (gas: 1)\n 28973: t0 = 1194, jump @1369\n      : @1155 [@dyn 597] (gas: 1)\n 28979: ra = 1196, jump @19\n      : @1156 [@dyn 598] (gas: 3)\n 28985: a1 = 0x2026c\n 28990: a0 = i32 [0x2026c]\n 28995: jump @1158 if a0 >u 63\n      : @1157 (gas: 2)\n 28999: u32 [0x2026c] = 0x40\n 29005: fallthrough\n      : @1158 (gas: 14)\n 29006: a0 = sp + 0xffffffffffffffe0\n 29009: a2 = a0 & 0xffffffffffffffe0\n 29012: u64 [s1 + 0x68] = a2\n 29015: sp = a2\n 29017: a0 = 0x20280\n 29022: i32 a0 = a0 + 0\n 29024: i32 a2 = a2 + 0\n 29026: u64 [s1 + 0x78] = a1\n 29029: a1 = 0x40\n 29032: u64 [s1 + 0x70] = a0\n 29035: ra = 0x4ae\n 29039: ecalli 6 // 'hash_keccak_256'\n 29041: t0 = 0x4b0\n 29045: jump @1370\n      : @1159 [@dyn 599] (gas: 1)\n 29048: t0 = 1200, jump @1370\n      : @1160 [@dyn 600] (gas: 8)\n 29054: a0 = 0x30280\n 29059: u64 [s1 + 0x68] = a0\n 29062: i32 a0 = a0 + 0\n 29064: u64 [s1 + 0x18] = a0\n 29067: ra = 0x4b2\n 29071: ecalli 3 // 'caller'\n 29073: t0 = 0x4b4\n 29077: jump @1360\n      : @1161 [@dyn 601] (gas: 1)\n 29080: t0 = 1204, jump @1360\n      : @1162 [@dyn 602] (gas: 1)\n 29086: ra = 1206, jump @19\n      : @1163 [@dyn 603] (gas: 1)\n 29092: t0 = 1208, jump @1393\n      : @1164 [@dyn 604] (gas: 1)\n 29098: ra = 1210, jump @19\n      : @1165 [@dyn 605] (gas: 3)\n 29104: a1 = u64 [s1 + 0x78]\n 29107: a0 = i32 [a1]\n 29109: jump @1167 if a0 >u 63\n      : @1166 (gas: 3)\n 29113: u32 [a1 + 0] = 0x40\n 29116: t0 = 0x4bc\n 29120: jump @1412\n      : @1167 (gas: 1)\n 29123: t0 = 1212, jump @1412\n      : @1168 [@dyn 606] (gas: 4)\n 29129: ra = 0x4be\n 29133: ecalli 6 // 'hash_keccak_256'\n 29135: t0 = 0x4c0\n 29139: jump @1372\n      : @1169 [@dyn 607] (gas: 1)\n 29142: t0 = 1216, jump @1372\n      : @1170 [@dyn 608] (gas: 1)\n 29148: ra = 1218, jump @21\n      : @1171 [@dyn 609] (gas: 2)\n 29154: a0 = u8 [s1 + 0xe0]\n 29158: jump @1173 if a0 == 0\n      : @1172 (gas: 6)\n 29161: sp = s0 + 0xfffffffffffffe60\n 29165: ra = u64 [sp + 0x198]\n 29169: s0 = u64 [sp + 0x190]\n 29173: s1 = u64 [sp + 0x188]\n 29177: sp = sp + 0x1a0\n 29181: ret\n      : @1173 (gas: 1)\n 29183: t0 = 1220, jump @1386\n      : @1174 [@dyn 610] (gas: 1)\n 29189: ra = 1222, jump @19\n      : @1175 [@dyn 611] (gas: 5)\n 29195: a0 = u64 [s1 + 0x18]\n 29198: ra = 0x4c8\n 29202: ecalli 3 // 'caller'\n 29204: t0 = 0x4ca\n 29208: jump @1365\n      : @1176 [@dyn 612] (gas: 1)\n 29211: t0 = 1226, jump @1365\n      : @1177 [@dyn 613] (gas: 1)\n 29217: ra = 1228, jump @19\n      : @1178 [@dyn 614] (gas: 11)\n 29223: a0 = u64 [s1 + 0x38]\n 29226: u64 [s1 + 0x98] = a0\n 29230: a0 = u64 [s1 + 0x28]\n 29233: u64 [s1 + 0x90] = a0\n 29237: a0 = u64 [s1 + 0x20]\n 29240: u64 [s1 + 0x88] = a0\n 29244: a0 = 0x24\n 29247: a1 = s1 + 0x80\n 29251: a2 = u64 [s1 + 0x30]\n 29254: u64 [s1 + 0x80] = a2\n 29258: ra = 1230, jump @19\n      : @1179 [@dyn 615] (gas: 3)\n 29264: a0 = u64 [s1 + 0x78]\n 29267: a0 = i32 [a0]\n 29269: jump @1181 if a0 >u 95\n      : @1180 (gas: 3)\n 29273: a1 = u64 [s1 + 0x78]\n 29276: u32 [a1 + 0] = 0x60\n 29279: fallthrough\n      : @1181 (gas: 6)\n 29280: a0 = 0x1\n 29283: a2 = 0x44\n 29286: a1 = u64 [s1 + 0x70]\n 29289: ra = 0x4d0\n 29293: ecalli 7 // 'seal_return'\n 29295: fallthrough\n      : @1182 [@dyn 616] (gas: 22)\n 29296: sp = sp + 0xfffffffffffffe60\n 29300: u64 [sp + 0x198] = ra\n 29304: u64 [sp + 0x190] = s0\n 29308: u64 [sp + 0x188] = s1\n 29312: s0 = sp + 0x1a0\n 29316: sp = sp & 0xffffffffffffffe0\n 29319: s1 = sp\n 29321: a2 = u64 [a0]\n 29323: a1 = u64 [a0 + 0x8]\n 29326: a3 = u64 [a0 + 0x10]\n 29329: a0 = u64 [a0 + 0x18]\n 29332: u64 [s1 + 0x20] = a0\n 29335: u64 [s1 + 0x178] = a0\n 29339: u64 [s1 + 0x28] = a3\n 29342: u64 [s1 + 0x170] = a3\n 29346: u64 [s1 + 0x30] = a1\n 29349: u64 [s1 + 0x168] = a1\n 29353: a1 = s1 + 0x160\n 29357: u64 [s1 + 0x38] = a2\n 29360: u64 [s1 + 0x160] = a2\n 29364: a0 = 0\n 29366: ra = 1234, jump @19\n      : @1183 [@dyn 617] (gas: 1)\n 29372: t0 = 1236, jump @1369\n      : @1184 [@dyn 618] (gas: 1)\n 29378: ra = 1238, jump @19\n      : @1185 [@dyn 619] (gas: 3)\n 29384: a1 = 0x2026c\n 29389: a0 = i32 [0x2026c]\n 29394: jump @1187 if a0 >u 63\n      : @1186 (gas: 2)\n 29398: u32 [0x2026c] = 0x40\n 29404: fallthrough\n      : @1187 (gas: 14)\n 29405: a0 = sp + 0xffffffffffffffe0\n 29408: a2 = a0 & 0xffffffffffffffe0\n 29411: u64 [s1 + 0x68] = a2\n 29414: sp = a2\n 29416: a0 = 0x20280\n 29421: i32 a0 = a0 + 0\n 29423: i32 a2 = a2 + 0\n 29425: u64 [s1 + 0x78] = a1\n 29428: a1 = 0x40\n 29431: u64 [s1 + 0x70] = a0\n 29434: ra = 0x4d8\n 29438: ecalli 6 // 'hash_keccak_256'\n 29440: t0 = 0x4da\n 29444: jump @1370\n      : @1188 [@dyn 620] (gas: 1)\n 29447: t0 = 1242, jump @1370\n      : @1189 [@dyn 621] (gas: 8)\n 29453: a0 = 0x30280\n 29458: u64 [s1 + 0x68] = a0\n 29461: i32 a0 = a0 + 0\n 29463: u64 [s1 + 0x18] = a0\n 29466: ra = 0x4dc\n 29470: ecalli 3 // 'caller'\n 29472: t0 = 0x4de\n 29476: jump @1360\n      : @1190 [@dyn 622] (gas: 1)\n 29479: t0 = 1246, jump @1360\n      : @1191 [@dyn 623] (gas: 1)\n 29485: ra = 1248, jump @19\n      : @1192 [@dyn 624] (gas: 1)\n 29491: t0 = 1250, jump @1393\n      : @1193 [@dyn 625] (gas: 1)\n 29497: ra = 1252, jump @19\n      : @1194 [@dyn 626] (gas: 3)\n 29503: a1 = u64 [s1 + 0x78]\n 29506: a0 = i32 [a1]\n 29508: jump @1196 if a0 >u 63\n      : @1195 (gas: 3)\n 29512: u32 [a1 + 0] = 0x40\n 29515: t0 = 0x4e6\n 29519: jump @1412\n      : @1196 (gas: 1)\n 29522: t0 = 1254, jump @1412\n      : @1197 [@dyn 627] (gas: 4)\n 29528: ra = 0x4e8\n 29532: ecalli 6 // 'hash_keccak_256'\n 29534: t0 = 0x4ea\n 29538: jump @1372\n      : @1198 [@dyn 628] (gas: 1)\n 29541: t0 = 1258, jump @1372\n      : @1199 [@dyn 629] (gas: 1)\n 29547: ra = 1260, jump @21\n      : @1200 [@dyn 630] (gas: 2)\n 29553: a0 = u8 [s1 + 0xe0]\n 29557: jump @1202 if a0 == 0\n      : @1201 (gas: 6)\n 29560: sp = s0 + 0xfffffffffffffe60\n 29564: ra = u64 [sp + 0x198]\n 29568: s0 = u64 [sp + 0x190]\n 29572: s1 = u64 [sp + 0x188]\n 29576: sp = sp + 0x1a0\n 29580: ret\n      : @1202 (gas: 1)\n 29582: t0 = 1262, jump @1386\n      : @1203 [@dyn 631] (gas: 1)\n 29588: ra = 1264, jump @19\n      : @1204 [@dyn 632] (gas: 5)\n 29594: a0 = u64 [s1 + 0x18]\n 29597: ra = 0x4f2\n 29601: ecalli 3 // 'caller'\n 29603: t0 = 0x4f4\n 29607: jump @1365\n      : @1205 [@dyn 633] (gas: 1)\n 29610: t0 = 1268, jump @1365\n      : @1206 [@dyn 634] (gas: 1)\n 29616: ra = 1270, jump @19\n      : @1207 [@dyn 635] (gas: 11)\n 29622: a0 = u64 [s1 + 0x20]\n 29625: u64 [s1 + 0x98] = a0\n 29629: a0 = u64 [s1 + 0x28]\n 29632: u64 [s1 + 0x90] = a0\n 29636: a0 = u64 [s1 + 0x30]\n 29639: u64 [s1 + 0x88] = a0\n 29643: a0 = 0x24\n 29646: a1 = s1 + 0x80\n 29650: a2 = u64 [s1 + 0x38]\n 29653: u64 [s1 + 0x80] = a2\n 29657: ra = 1272, jump @19\n      : @1208 [@dyn 636] (gas: 3)\n 29663: a0 = u64 [s1 + 0x78]\n 29666: a0 = i32 [a0]\n 29668: jump @1210 if a0 >u 95\n      : @1209 (gas: 3)\n 29672: a1 = u64 [s1 + 0x78]\n 29675: u32 [a1 + 0] = 0x60\n 29678: fallthrough\n      : @1210 (gas: 7)\n 29679: a0 = 0x1\n 29682: a2 = 0x44\n 29685: a1 = u64 [s1 + 0x70]\n 29688: ra = 0x4fa\n 29692: ecalli 7 // 'seal_return'\n 29694: t0 = 0x4fc\n 29698: jump @1404\n      : @1211 [@dyn 637] (gas: 1)\n 29701: t0 = 1276, jump @1404\n      : @1212 [@dyn 638] (gas: 21)\n 29707: u64 [s1 + 0x50] = a3\n 29710: a3 = u64 [a2 + 0x8]\n 29713: u64 [s1 + 0x70] = a3\n 29716: a2 = u64 [a2]\n 29718: u64 [s1 + 0x78] = a2\n 29721: a2 = u64 [a1]\n 29723: a3 = u64 [a1 + 0x8]\n 29726: a4 = u64 [a1 + 0x10]\n 29729: a1 = u64 [a1 + 0x18]\n 29732: u64 [s1 + 0x58] = a0\n 29735: u64 [s1 + 0x8] = a1\n 29738: u64 [s1 + 0x238] = a1\n 29742: u64 [s1 + 0x10] = a4\n 29745: u64 [s1 + 0x230] = a4\n 29749: u64 [s1 + 0x18] = a3\n 29752: u64 [s1 + 0x228] = a3\n 29756: a1 = s1 + 0x220\n 29760: u64 [s1 + 0x20] = a2\n 29763: u64 [s1 + 0x220] = a2\n 29767: a0 = 0\n 29769: ra = 1278, jump @19\n      : @1213 [@dyn 639] (gas: 1)\n 29775: t0 = 1280, jump @1359\n      : @1214 [@dyn 640] (gas: 1)\n 29781: ra = 1282, jump @19\n      : @1215 [@dyn 641] (gas: 3)\n 29787: a1 = 0x2026c\n 29792: a0 = i32 [0x2026c]\n 29797: jump @1217 if a0 >u 63\n      : @1216 (gas: 2)\n 29801: u32 [0x2026c] = 0x40\n 29807: fallthrough\n      : @1217 (gas: 6)\n 29808: a0 = sp + 0xffffffffffffffe0\n 29811: a2 = a0 & 0xffffffffffffffe0\n 29814: u64 [s1 + 0x48] = a2\n 29817: sp = a2\n 29819: a0 = 0x20280\n 29824: t0 = 1284, jump @1419\n      : @1218 [@dyn 642] (gas: 4)\n 29830: ra = 0x506\n 29834: ecalli 6 // 'hash_keccak_256'\n 29836: t0 = 0x508\n 29840: jump @1345\n      : @1219 [@dyn 643] (gas: 1)\n 29843: t0 = 1288, jump @1345\n      : @1220 [@dyn 644] (gas: 1)\n 29849: ra = 1290, jump @19\n      : @1221 [@dyn 645] (gas: 1)\n 29855: t0 = 1292, jump @1366\n      : @1222 [@dyn 646] (gas: 1)\n 29861: ra = 1294, jump @19\n      : @1223 [@dyn 647] (gas: 3)\n 29867: a1 = u64 [s1 + 0x68]\n 29870: a0 = i32 [a1]\n 29872: jump @1225 if a0 >u 63\n      : @1224 (gas: 3)\n 29876: u32 [a1 + 0] = 0x40\n 29879: t0 = 0x510\n 29883: jump @1353\n      : @1225 (gas: 1)\n 29886: t0 = 1296, jump @1353\n      : @1226 [@dyn 648] (gas: 4)\n 29892: ra = 0x512\n 29896: ecalli 6 // 'hash_keccak_256'\n 29898: t0 = 0x514\n 29902: jump @1351\n      : @1227 [@dyn 649] (gas: 1)\n 29905: t0 = 1300, jump @1351\n      : @1228 [@dyn 650] (gas: 1)\n 29911: ra = 1302, jump @21\n      : @1229 [@dyn 651] (gas: 2)\n 29917: a0 = u8 [s1 + 0x1a0]\n 29921: jump @1231 if a0 == 0\n      : @1230 (gas: 5)\n 29924: a1 = 0\n 29926: a0 = 0\n 29928: a2 = u64 [s1 + 0x58]\n 29931: t0 = 0x53c\n 29935: jump @1357\n      : @1231 (gas: 11)\n 29938: a0 = u64 [s1 + 0x20]\n 29941: u64 [s1 + 0x180] = a0\n 29945: a0 = u64 [s1 + 0x18]\n 29948: u64 [s1 + 0x188] = a0\n 29952: a0 = u64 [s1 + 0x10]\n 29955: u64 [s1 + 0x190] = a0\n 29959: a1 = s1 + 0x180\n 29963: a0 = u64 [s1 + 0x8]\n 29966: u64 [s1 + 0x198] = a0\n 29970: a0 = 0\n 29972: ra = 1304, jump @19\n      : @1232 [@dyn 652] (gas: 1)\n 29978: t0 = 1306, jump @1358\n      : @1233 [@dyn 653] (gas: 1)\n 29984: ra = 1308, jump @19\n      : @1234 [@dyn 654] (gas: 3)\n 29990: a1 = u64 [s1 + 0x68]\n 29993: a0 = i32 [a1]\n 29995: jump @1236 if a0 >u 63\n      : @1235 (gas: 3)\n 29999: u32 [a1 + 0] = 0x40\n 30002: t0 = 0x51e\n 30006: jump @1353\n      : @1236 (gas: 1)\n 30009: t0 = 1310, jump @1353\n      : @1237 [@dyn 655] (gas: 4)\n 30015: ra = 0x520\n 30019: ecalli 6 // 'hash_keccak_256'\n 30021: t0 = 0x522\n 30025: jump @1346\n      : @1238 [@dyn 656] (gas: 1)\n 30028: t0 = 1314, jump @1346\n      : @1239 [@dyn 657] (gas: 1)\n 30034: ra = 1316, jump @19\n      : @1240 [@dyn 658] (gas: 1)\n 30040: t0 = 1318, jump @1368\n      : @1241 [@dyn 659] (gas: 1)\n 30046: ra = 1320, jump @19\n      : @1242 [@dyn 660] (gas: 3)\n 30052: a1 = u64 [s1 + 0x68]\n 30055: a0 = i32 [a1]\n 30057: jump @1244 if a0 >u 63\n      : @1243 (gas: 2)\n 30061: u32 [a1 + 0] = 0x40\n 30064: fallthrough\n      : @1244 (gas: 4)\n 30065: a0 = sp + 0xffffffffffffffe0\n 30068: a0 = a0 & 0xffffffffffffffe0\n 30071: u64 [s1 + 0x68] = a0\n 30074: t0 = 1322, jump @1362\n      : @1245 [@dyn 661] (gas: 4)\n 30080: ra = 0x52c\n 30084: ecalli 6 // 'hash_keccak_256'\n 30086: t0 = 0x52e\n 30090: jump @1350\n      : @1246 [@dyn 662] (gas: 1)\n 30093: t0 = 1326, jump @1350\n      : @1247 [@dyn 663] (gas: 1)\n 30099: ra = 1328, jump @21\n      : @1248 [@dyn 664] (gas: 1)\n 30105: t0 = 1330, jump @1355\n      : @1249 [@dyn 665] (gas: 1)\n 30111: ra = 1332, jump @24\n      : @1250 [@dyn 666] (gas: 8)\n 30117: a0 = 0x30280\n 30122: u64 [s1 + 0x68] = a0\n 30125: i32 a0 = a0 + 0\n 30127: ra = 0x536\n 30131: ecalli 3 // 'caller'\n 30133: a2 = u64 [s1 + 0x68]\n 30136: t0 = 0x538\n 30140: jump @1347\n      : @1251 [@dyn 667] (gas: 2)\n 30143: a2 = u64 [s1 + 0x68]\n 30146: t0 = 1336, jump @1347\n      : @1252 [@dyn 668] (gas: 40)\n 30152: t0 = a1 | a0\n 30155: a3 = a3 >> 0x20\n 30158: a2 = reverse a2\n 30160: a1 = a2 << 0x20\n 30163: a1 = a1 | a3\n 30166: a2 = a2 >> 0x20\n 30169: u64 [s1 + 152] = 0\n 30173: u64 [s1 + 184] = 0\n 30177: a0 = u64 [s1]\n 30179: u64 [s1 + 0xb0] = a0\n 30183: a0 = u64 [s1 + 0x70]\n 30186: u64 [s1 + 0xa8] = a0\n 30190: a0 = u64 [s1 + 0x78]\n 30193: u64 [s1 + 0xa0] = a0\n 30197: a0 = u64 [s1 + 0x8]\n 30200: u64 [s1 + 0xd8] = a0\n 30204: a0 = u64 [s1 + 0x10]\n 30207: u64 [s1 + 0xd0] = a0\n 30211: a0 = u64 [s1 + 0x18]\n 30214: u64 [s1 + 0xc8] = a0\n 30218: a0 = u64 [s1 + 0x20]\n 30221: u64 [s1 + 0xc0] = a0\n 30225: a3 = u64 [0x20208]\n 30230: a4 = u64 [0x20210]\n 30235: a5 = u64 [0x20218]\n 30240: a0 = u64 [0x20220]\n 30245: u64 [s1 + 0xf8] = a3\n 30249: u64 [s1 + 0xf0] = a4\n 30253: u64 [s1 + 0xe8] = a5\n 30257: u64 [s1 + 0xe0] = a0\n 30261: u64 [s1 + 0x90] = a2\n 30265: u64 [s1 + 0x88] = a1\n 30269: a2 = s1 + 0xe0\n 30273: a3 = s1 + 0xc0\n 30277: a4 = s1 + 0xa0\n 30281: a5 = s1 + 0x80\n 30285: u64 [s1 + 0x80] = t0\n 30289: a0 = 0\n 30291: a1 = 0\n 30293: ra = 1338, jump @30\n      : @1253 [@dyn 669] (gas: 4)\n 30299: a0 = 0\n 30301: a1 = 0x1\n 30304: a2 = u64 [s1 + 0x58]\n 30307: t0 = 1340, jump @1357\n      : @1254 [@dyn 670] (gas: 1)\n 30313: ret\n      : @1255 [@dyn 671] (gas: 21)\n 30315: u64 [s1 + 0x38] = a3\n 30318: a3 = u64 [a2 + 0x8]\n 30321: u64 [s1 + 0x70] = a3\n 30324: a2 = u64 [a2]\n 30326: u64 [s1 + 0x78] = a2\n 30329: a2 = u64 [a1]\n 30331: a3 = u64 [a1 + 0x8]\n 30334: a4 = u64 [a1 + 0x10]\n 30337: a1 = u64 [a1 + 0x18]\n 30340: u64 [s1 + 0x30] = a0\n 30343: u64 [s1 + 0x40] = a1\n 30346: u64 [s1 + 0x238] = a1\n 30350: u64 [s1 + 0x48] = a4\n 30353: u64 [s1 + 0x230] = a4\n 30357: u64 [s1 + 0x50] = a3\n 30360: u64 [s1 + 0x228] = a3\n 30364: a1 = s1 + 0x220\n 30368: u64 [s1 + 0x58] = a2\n 30371: u64 [s1 + 0x220] = a2\n 30375: a0 = 0\n 30377: ra = 1344, jump @19\n      : @1256 [@dyn 672] (gas: 1)\n 30383: t0 = 1346, jump @1359\n      : @1257 [@dyn 673] (gas: 1)\n 30389: ra = 1348, jump @19\n      : @1258 [@dyn 674] (gas: 3)\n 30395: a1 = 0x2026c\n 30400: a0 = i32 [0x2026c]\n 30405: jump @1260 if a0 >u 63\n      : @1259 (gas: 2)\n 30409: u32 [0x2026c] = 0x40\n 30415: fallthrough\n      : @1260 (gas: 6)\n 30416: a0 = sp + 0xffffffffffffffe0\n 30419: a2 = a0 & 0xffffffffffffffe0\n 30422: u64 [s1 + 0x28] = a2\n 30425: sp = a2\n 30427: a0 = 0x20280\n 30432: t0 = 1350, jump @1419\n      : @1261 [@dyn 675] (gas: 4)\n 30438: ra = 0x548\n 30442: ecalli 6 // 'hash_keccak_256'\n 30444: t0 = 0x54a\n 30448: jump @1348\n      : @1262 [@dyn 676] (gas: 1)\n 30451: t0 = 1354, jump @1348\n      : @1263 [@dyn 677] (gas: 13)\n 30457: a0 = u64 [s1 + 0x38]\n 30460: a0 = a0 << 0x20\n 30463: a0 = a0 >> 0x20\n 30466: u64 [s1 + 504] = 0\n 30470: u64 [s1 + 0x38] = a0\n 30473: u64 [s1 + 0x1f0] = a0\n 30477: a0 = u64 [s1 + 0x70]\n 30480: u64 [s1 + 0x1e8] = a0\n 30484: a1 = s1 + 0x1e0\n 30488: a0 = u64 [s1 + 0x78]\n 30491: u64 [s1 + 0x1e0] = a0\n 30495: a0 = 0\n 30497: ra = 1356, jump @19\n      : @1264 [@dyn 678] (gas: 12)\n 30503: a0 = u64 [s1 + 0x8]\n 30506: a3 = s1 + 0x100\n 30510: u64 [a3 + 0xd8] = a0\n 30514: a0 = u64 [s1 + 0x10]\n 30517: u64 [a3 + 0xd0] = a0\n 30521: a0 = u64 [s1 + 0x18]\n 30524: u64 [a3 + 0xc8] = a0\n 30528: a0 = 0x20\n 30531: a1 = s1 + 0x1c0\n 30535: a2 = u64 [s1 + 0x20]\n 30538: u64 [a3 + 0xc0] = a2\n 30542: ra = 1358, jump @19\n      : @1265 [@dyn 679] (gas: 3)\n 30548: a1 = u64 [s1 + 0x68]\n 30551: a0 = i32 [a1]\n 30553: jump @1267 if a0 >u 63\n      : @1266 (gas: 2)\n 30557: u32 [a1 + 0] = 0x40\n 30560: fallthrough\n      : @1267 (gas: 4)\n 30561: a0 = sp + 0xffffffffffffffe0\n 30564: a0 = a0 & 0xffffffffffffffe0\n 30567: u64 [s1 + 0x20] = a0\n 30570: t0 = 1360, jump @1362\n      : @1268 [@dyn 680] (gas: 5)\n 30576: ra = 0x552\n 30580: ecalli 6 // 'hash_keccak_256'\n 30582: a3 = u64 [s1 + 0x20]\n 30585: t0 = 0x554\n 30589: jump @1361\n      : @1269 [@dyn 681] (gas: 2)\n 30592: a3 = u64 [s1 + 0x20]\n 30595: t0 = 1364, jump @1361\n      : @1270 [@dyn 682] (gas: 2)\n 30601: a0 = s1 + 0x1a0\n 30605: ra = 1366, jump @21\n      : @1271 [@dyn 683] (gas: 2)\n 30611: a0 = u8 [s1 + 0x1a0]\n 30615: jump @1293 if a0 == 0\n      : @1272 (gas: 11)\n 30619: a0 = u64 [s1 + 0x58]\n 30622: u64 [s1 + 0x180] = a0\n 30626: a0 = u64 [s1 + 0x50]\n 30629: u64 [s1 + 0x188] = a0\n 30633: a0 = u64 [s1 + 0x48]\n 30636: u64 [s1 + 0x190] = a0\n 30640: a1 = s1 + 0x180\n 30644: a0 = u64 [s1 + 0x40]\n 30647: u64 [s1 + 0x198] = a0\n 30651: a0 = 0\n 30653: ra = 1368, jump @19\n      : @1273 [@dyn 684] (gas: 1)\n 30659: t0 = 1370, jump @1358\n      : @1274 [@dyn 685] (gas: 1)\n 30665: ra = 1372, jump @19\n      : @1275 [@dyn 686] (gas: 3)\n 30671: a1 = u64 [s1 + 0x68]\n 30674: a0 = i32 [a1]\n 30676: jump @1277 if a0 >u 63\n      : @1276 (gas: 2)\n 30680: u32 [a1 + 0] = 0x40\n 30683: fallthrough\n      : @1277 (gas: 4)\n 30684: a0 = sp + 0xffffffffffffffe0\n 30687: a0 = a0 & 0xffffffffffffffe0\n 30690: u64 [s1 + 0x28] = a0\n 30693: t0 = 1374, jump @1362\n      : @1278 [@dyn 687] (gas: 4)\n 30699: ra = 0x560\n 30703: ecalli 6 // 'hash_keccak_256'\n 30705: t0 = 0x562\n 30709: jump @1348\n      : @1279 [@dyn 688] (gas: 1)\n 30712: t0 = 1378, jump @1348\n      : @1280 [@dyn 689] (gas: 10)\n 30718: u64 [s1 + 344] = 0\n 30722: a0 = u64 [s1 + 0x38]\n 30725: u64 [s1 + 0x150] = a0\n 30729: a0 = u64 [s1 + 0x70]\n 30732: u64 [s1 + 0x148] = a0\n 30736: a1 = s1 + 0x140\n 30740: a0 = u64 [s1 + 0x78]\n 30743: u64 [s1 + 0x140] = a0\n 30747: a0 = 0\n 30749: ra = 1380, jump @19\n      : @1281 [@dyn 690] (gas: 12)\n 30755: a0 = u64 [s1 + 0x8]\n 30758: a3 = s1 + 0x100\n 30762: u64 [a3 + 0x38] = a0\n 30765: a0 = u64 [s1 + 0x10]\n 30768: u64 [a3 + 0x30] = a0\n 30771: a0 = u64 [s1 + 0x18]\n 30774: u64 [a3 + 0x28] = a0\n 30777: a0 = 0x20\n 30780: a1 = s1 + 0x120\n 30784: a2 = u64 [s1 + 0x20]\n 30787: u64 [a3 + 0x20] = a2\n 30790: ra = 1382, jump @19\n      : @1282 [@dyn 691] (gas: 3)\n 30796: a1 = u64 [s1 + 0x68]\n 30799: a0 = i32 [a1]\n 30801: jump @1284 if a0 >u 63\n      : @1283 (gas: 2)\n 30805: u32 [a1 + 0] = 0x40\n 30808: fallthrough\n      : @1284 (gas: 4)\n 30809: a0 = sp + 0xffffffffffffffe0\n 30812: a0 = a0 & 0xffffffffffffffe0\n 30815: u64 [s1 + 0x68] = a0\n 30818: t0 = 1384, jump @1362\n      : @1285 [@dyn 692] (gas: 5)\n 30824: ra = 0x56a\n 30828: ecalli 6 // 'hash_keccak_256'\n 30830: a3 = u64 [s1 + 0x68]\n 30833: t0 = 0x56c\n 30837: jump @1361\n      : @1286 [@dyn 693] (gas: 2)\n 30840: a3 = u64 [s1 + 0x68]\n 30843: t0 = 1388, jump @1361\n      : @1287 [@dyn 694] (gas: 2)\n 30849: a0 = s1 + 0x100\n 30853: ra = 1390, jump @21\n      : @1288 [@dyn 695] (gas: 14)\n 30859: a4 = s1 + 0x100\n 30863: a0 = u64 [a4]\n 30865: a1 = u64 [a4 + 0x18]\n 30868: a2 = u64 [a4 + 0x10]\n 30871: a3 = u64 [a4 + 0x8]\n 30874: a0 = a0 & 0xffffffffffffff00\n 30878: a4 = s1 + 0x200\n 30882: u64 [a4 + 0x58] = a1\n 30885: u64 [a4 + 0x50] = a2\n 30888: u64 [a4 + 0x48] = a3\n 30891: u64 [a4 + 0x40] = a0\n 30894: a1 = s1 + 0x240\n 30898: a0 = u64 [s1 + 0x28]\n 30901: ra = 1392, jump @24\n      : @1289 [@dyn 696] (gas: 8)\n 30907: a0 = 0x30280\n 30912: u64 [s1 + 0x68] = a0\n 30915: i32 a0 = a0 + 0\n 30917: ra = 0x572\n 30921: ecalli 3 // 'caller'\n 30923: a2 = u64 [s1 + 0x68]\n 30926: t0 = 0x574\n 30930: jump @1347\n      : @1290 [@dyn 697] (gas: 2)\n 30933: a2 = u64 [s1 + 0x68]\n 30936: t0 = 1396, jump @1347\n      : @1291 [@dyn 698] (gas: 40)\n 30942: t0 = a1 | a0\n 30945: a3 = a3 >> 0x20\n 30948: a2 = reverse a2\n 30950: a1 = a2 << 0x20\n 30953: a1 = a1 | a3\n 30956: a2 = a2 >> 0x20\n 30959: u64 [s1 + 152] = 0\n 30963: u64 [s1 + 184] = 0\n 30967: a0 = u64 [s1 + 0x38]\n 30970: u64 [s1 + 0xb0] = a0\n 30974: a0 = u64 [s1 + 0x70]\n 30977: u64 [s1 + 0xa8] = a0\n 30981: a0 = u64 [s1 + 0x78]\n 30984: u64 [s1 + 0xa0] = a0\n 30988: a0 = u64 [s1 + 0x40]\n 30991: u64 [s1 + 0xd8] = a0\n 30995: a0 = u64 [s1 + 0x48]\n 30998: u64 [s1 + 0xd0] = a0\n 31002: a0 = u64 [s1 + 0x50]\n 31005: u64 [s1 + 0xc8] = a0\n 31009: a0 = u64 [s1 + 0x58]\n 31012: u64 [s1 + 0xc0] = a0\n 31016: a3 = u64 [0x20228]\n 31021: a4 = u64 [0x20230]\n 31026: a5 = u64 [0x20238]\n 31031: a0 = u64 [0x20240]\n 31036: u64 [s1 + 0xf8] = a3\n 31040: u64 [s1 + 0xf0] = a4\n 31044: u64 [s1 + 0xe8] = a5\n 31048: u64 [s1 + 0xe0] = a0\n 31052: u64 [s1 + 0x90] = a2\n 31056: u64 [s1 + 0x88] = a1\n 31060: a2 = s1 + 0xe0\n 31064: a3 = s1 + 0xc0\n 31068: a4 = s1 + 0xa0\n 31072: a5 = s1 + 0x80\n 31076: u64 [s1 + 0x80] = t0\n 31080: a0 = 0\n 31082: a1 = 0\n 31084: ra = 1398, jump @30\n      : @1292 [@dyn 699] (gas: 5)\n 31090: a0 = 0\n 31092: a1 = 0x1\n 31095: a2 = u64 [s1 + 0x30]\n 31098: t0 = 0x578\n 31102: jump @1357\n      : @1293 (gas: 3)\n 31105: a1 = 0\n 31107: a2 = u64 [s1 + 0x30]\n 31110: t0 = 1400, jump @1357\n      : @1294 [@dyn 700] (gas: 1)\n 31116: ret\n      : @1295 (gas: 17)\n 31118: sp = sp + 0xfffffffffffffc80\n 31122: a2 = sp + 0x300\n 31126: u64 [a2 + 0x78] = ra\n 31129: u64 [a2 + 0x70] = s0\n 31132: u64 [a2 + 0x68] = s1\n 31135: s0 = sp + 0x380\n 31139: sp = sp & 0xffffffffffffffe0\n 31142: s1 = sp\n 31144: a3 = u32 [a0 + 0x10]\n 31147: a2 = u64 [a0]\n 31149: a4 = u64 [a0 + 0x8]\n 31152: u64 [s1 + 0x58] = a2\n 31155: u64 [s1 + 0x48] = a3\n 31158: a0 = a2 | a3\n 31161: u64 [s1 + 0x50] = a4\n 31164: a0 = a0 | a4\n 31167: jump @1322 if a0 == 0\n      : @1296 (gas: 9)\n 31171: a0 = u64 [a1 + 0x18]\n 31174: u64 [s1 + 0x78] = a0\n 31177: a0 = u64 [a1 + 0x10]\n 31180: u64 [s1 + 0x68] = a0\n 31183: a0 = u64 [a1 + 0x8]\n 31186: u64 [s1 + 0x60] = a0\n 31189: a0 = u64 [a1]\n 31191: u64 [s1 + 0x70] = a0\n 31194: ra = 1402, jump @1334\n      : @1297 [@dyn 701] (gas: 11)\n 31200: u64 [s1 + 664] = 0\n 31204: a0 = u64 [s1 + 0x48]\n 31207: a2 = s1 + 0x200\n 31211: u64 [a2 + 0x90] = a0\n 31215: a0 = u64 [s1 + 0x50]\n 31218: u64 [a2 + 0x88] = a0\n 31222: a1 = s1 + 0x280\n 31226: a0 = u64 [s1 + 0x58]\n 31229: u64 [a2 + 0x80] = a0\n 31233: a0 = 0\n 31235: ra = 1404, jump @19\n      : @1298 [@dyn 702] (gas: 1)\n 31241: t0 = 1406, jump @1400\n      : @1299 [@dyn 703] (gas: 1)\n 31247: ra = 1408, jump @19\n      : @1300 [@dyn 704] (gas: 3)\n 31253: a2 = 0x2026c\n 31258: a0 = i32 [0x2026c]\n 31263: jump @1302 if a0 >u 63\n      : @1301 (gas: 2)\n 31267: u32 [0x2026c] = 0x40\n 31273: fallthrough\n      : @1302 (gas: 13)\n 31274: u64 [s1 + 0x38] = a2\n 31277: a0 = sp + 0xffffffffffffffe0\n 31280: a2 = a0 & 0xffffffffffffffe0\n 31283: u64 [s1 + 0x30] = a2\n 31286: sp = a2\n 31288: a0 = 0x20280\n 31293: i32 a0 = a0 + 0\n 31295: i32 a2 = a2 + 0\n 31297: a1 = 0x40\n 31300: u64 [s1 + 0x40] = a0\n 31303: ra = 0x582\n 31307: ecalli 6 // 'hash_keccak_256'\n 31309: fallthrough\n      : @1303 [@dyn 705] (gas: 6)\n 31310: a3 = u64 [s1 + 0x30]\n 31313: a0 = u64 [a3 + 0x18]\n 31316: a1 = u64 [a3 + 0x10]\n 31319: a2 = u64 [a3 + 0x8]\n 31322: a3 = u64 [a3]\n 31324: t0 = 1412, jump @1373\n      : @1304 [@dyn 706] (gas: 7)\n 31330: u64 [s1 + 0x2b8] = a3\n 31334: u64 [s1 + 0x2b0] = a2\n 31338: u64 [s1 + 0x2a8] = a1\n 31342: u64 [s1 + 0x2a0] = a0\n 31346: a0 = s1 + 0x240\n 31350: a1 = s1 + 0x2a0\n 31354: ra = 1414, jump @21\n      : @1305 [@dyn 707] (gas: 28)\n 31360: a1 = s1 + 0x200\n 31364: a2 = u64 [a1 + 0x58]\n 31367: a0 = u64 [a1 + 0x50]\n 31370: a5 = u64 [a1 + 0x48]\n 31373: a4 = u64 [a1 + 0x40]\n 31376: a1 = u64 [s1 + 0x78]\n 31379: t1 = a2 ^ a1\n 31382: u64 [s1 + 0x20] = a2\n 31385: a1 = a2 <u a1\n 31388: a2 = u64 [s1 + 0x68]\n 31391: a3 = a0 <u a2\n 31394: u64 [s1 + 0x8] = a3\n 31397: a1 = a3 if t1 == 0\n 31400: a3 = u64 [s1 + 0x60]\n 31403: t0 = a5 ^ a3\n 31406: u64 [s1 + 0x28] = a5\n 31409: a5 = a5 <u a3\n 31412: a3 = u64 [s1 + 0x70]\n 31415: u64 [s1 + 0x30] = a4\n 31418: a3 = a4 <u a3\n 31421: u64 [s1 + 0x10] = a3\n 31424: a5 = a3 if t0 == 0\n 31427: u64 [s1 + 0x18] = a0\n 31430: a2 = a2 ^ a0\n 31433: a0 = a2 | t1\n 31436: u64 [s1] = a5\n 31438: a1 = a5 if a0 == 0\n 31441: jump @1327 if a1 != 0\n      : @1306 (gas: 11)\n 31445: u64 [s1 + 568] = 0\n 31449: a0 = u64 [s1 + 0x58]\n 31452: a2 = s1 + 0x200\n 31456: u64 [a2 + 0x20] = a0\n 31459: a0 = u64 [s1 + 0x50]\n 31462: u64 [a2 + 0x28] = a0\n 31465: a1 = s1 + 0x220\n 31469: a0 = u64 [s1 + 0x48]\n 31472: u64 [a2 + 0x30] = a0\n 31475: a0 = 0\n 31477: ra = 1416, jump @19\n      : @1307 [@dyn 708] (gas: 7)\n 31483: u64 [s1 + 536] = 0\n 31487: u64 [s1 + 528] = 0\n 31491: u64 [s1 + 520] = 0\n 31495: a0 = 0x20\n 31498: a1 = s1 + 0x200\n 31502: u64 [s1 + 512] = 0\n 31506: ra = 1418, jump @19\n      : @1308 [@dyn 709] (gas: 27)\n 31512: a0 = u64 [s1 + 0x68]\n 31515: a1 = u64 [s1 + 0x18]\n 31518: a0 = a1 - a0\n 31521: a2 = u64 [s1]\n 31523: a1 = a0 - a2\n 31526: u64 [s1 + 0x18] = a1\n 31529: a0 = a0 <u a2\n 31532: a1 = u64 [s1 + 0x78]\n 31535: a2 = u64 [s1 + 0x20]\n 31538: a1 = a2 - a1\n 31541: a2 = u64 [s1 + 0x8]\n 31544: a1 = a1 - a2\n 31547: a1 = a1 - a0\n 31550: u64 [s1 + 0x20] = a1\n 31553: a2 = u64 [s1 + 0x38]\n 31556: a0 = i32 [a2]\n 31558: a1 = u64 [s1 + 0x60]\n 31561: a3 = u64 [s1 + 0x28]\n 31564: a1 = a3 - a1\n 31567: a3 = u64 [s1 + 0x10]\n 31570: a1 = a1 - a3\n 31573: u64 [s1 + 0x28] = a1\n 31576: a3 = u64 [s1 + 0x70]\n 31579: a4 = u64 [s1 + 0x30]\n 31582: a4 = a4 - a3\n 31585: u64 [s1 + 0x30] = a4\n 31588: jump @1310 if a0 >u 63\n      : @1309 (gas: 2)\n 31592: u32 [a2 + 0] = 0x40\n 31595: fallthrough\n      : @1310 (gas: 10)\n 31596: a0 = sp + 0xffffffffffffffe0\n 31599: a0 = a0 & 0xffffffffffffffe0\n 31602: u64 [s1 + 0x38] = a0\n 31605: sp = a0\n 31607: i32 a2 = a0 + 0\n 31609: a1 = 0x40\n 31612: a0 = u64 [s1 + 0x40]\n 31615: ra = 0x58c\n 31619: ecalli 6 // 'hash_keccak_256'\n 31621: fallthrough\n      : @1311 [@dyn 710] (gas: 6)\n 31622: a3 = u64 [s1 + 0x38]\n 31625: a0 = u64 [a3 + 0x18]\n 31628: a1 = u64 [a3 + 0x10]\n 31631: a2 = u64 [a3 + 0x8]\n 31634: a3 = u64 [a3]\n 31636: t0 = 1422, jump @1373\n      : @1312 [@dyn 711] (gas: 16)\n 31642: a4 = s1 + 0x200\n 31646: u64 [a4 + 0xd8] = a3\n 31650: u64 [a4 + 0xd0] = a2\n 31654: u64 [a4 + 0xc8] = a1\n 31658: u64 [a4 + 0xc0] = a0\n 31662: a0 = u64 [s1 + 0x20]\n 31665: u64 [a4 + 0xf8] = a0\n 31669: a0 = u64 [s1 + 0x18]\n 31672: u64 [a4 + 0xf0] = a0\n 31676: a0 = u64 [s1 + 0x28]\n 31679: u64 [a4 + 0xe8] = a0\n 31683: a0 = u64 [s1 + 0x30]\n 31686: u64 [a4 + 0xe0] = a0\n 31690: a0 = s1 + 0x2c0\n 31694: a1 = s1 + 0x2e0\n 31698: ra = 1424, jump @24\n      : @1313 [@dyn 712] (gas: 7)\n 31704: u64 [s1 + 792] = 0\n 31708: u64 [s1 + 784] = 0\n 31712: u64 [s1 + 776] = 0\n 31716: u64 [s1 + 768] = 0x2\n 31721: a0 = s1 + 0x1e0\n 31725: a1 = s1 + 0x300\n 31729: ra = 1426, jump @21\n      : @1314 [@dyn 713] (gas: 34)\n 31735: a1 = u64 [s1 + 0x1e8]\n 31739: t0 = u64 [s1 + 0x1f8]\n 31743: t1 = u64 [s1 + 0x1e0]\n 31747: a3 = u64 [s1 + 0x1f0]\n 31751: a4 = u64 [s1 + 0x60]\n 31754: a0 = a1 ^ a4\n 31757: a5 = a1 <u a4\n 31760: ra = u64 [s1 + 0x70]\n 31763: t2 = t1 <u ra\n 31766: a5 = t2 if a0 == 0\n 31769: a0 = u64 [s1 + 0x68]\n 31772: a2 = a3 - a0\n 31775: a3 = a3 <u a0\n 31778: a0 = u64 [s1 + 0x78]\n 31781: a0 = t0 - a0\n 31784: a0 = a0 - a3\n 31787: a3 = a2 <u a5\n 31790: a0 = a0 - a3\n 31793: a3 = a2 - a5\n 31796: a1 = a1 - a4\n 31799: a1 = a1 - t2\n 31802: a4 = s1 + 0x300\n 31806: u64 [a4 + 32] = 0x2\n 31810: a2 = t1 - ra\n 31813: u64 [a4 + 0x40] = a2\n 31816: u64 [a4 + 0x48] = a1\n 31819: u64 [a4 + 0x50] = a3\n 31822: u64 [a4 + 0x58] = a0\n 31825: u64 [s1 + 824] = 0\n 31829: u64 [s1 + 816] = 0\n 31833: u64 [s1 + 808] = 0\n 31837: a0 = s1 + 0x320\n 31841: a1 = s1 + 0x340\n 31845: ra = 1428, jump @24\n      : @1315 [@dyn 714] (gas: 3)\n 31851: a0 = s1 + 0x1c0\n 31855: a1 = 0x40\n 31858: ra = 1430, jump @17\n      : @1316 [@dyn 715] (gas: 6)\n 31864: a4 = s1 + 0x100\n 31868: a3 = u64 [a4 + 0xd8]\n 31872: a1 = u64 [a4 + 0xd0]\n 31876: a2 = u64 [a4 + 0xc8]\n 31880: a0 = u64 [a4 + 0xc0]\n 31884: t0 = 1432, jump @1356\n      : @1317 [@dyn 716] (gas: 1)\n 31890: jump @1321 if a1 != 0\n      : @1318 (gas: 11)\n 31894: a1 = u64 [s1 + 0x70]\n 31897: u64 [s1 + 0x1a0] = a1\n 31901: a1 = u64 [s1 + 0x60]\n 31904: u64 [s1 + 0x1a8] = a1\n 31908: a1 = u64 [s1 + 0x68]\n 31911: u64 [s1 + 0x1b0] = a1\n 31915: a1 = s1 + 0x1a0\n 31919: a2 = u64 [s1 + 0x78]\n 31922: u64 [s1 + 0x1b8] = a2\n 31926: u64 [s1 + 0x78] = a0\n 31929: ra = 1434, jump @19\n      : @1319 [@dyn 717] (gas: 26)\n 31935: u64 [s1 + 344] = 0\n 31939: u64 [s1 + 336] = 0\n 31943: u64 [s1 + 328] = 0\n 31947: u64 [s1 + 320] = 0\n 31951: u64 [s1 + 376] = 0\n 31955: a0 = u64 [s1 + 0x48]\n 31958: a5 = s1 + 0x100\n 31962: u64 [a5 + 0x70] = a0\n 31965: a0 = u64 [s1 + 0x50]\n 31968: u64 [a5 + 0x68] = a0\n 31971: a0 = u64 [0x20248]\n 31976: a1 = u64 [0x20250]\n 31981: a2 = u64 [0x20258]\n 31986: a3 = u64 [s1 + 0x58]\n 31989: u64 [a5 + 0x60] = a3\n 31992: u64 [a5 + 0x98] = a0\n 31996: u64 [a5 + 0x90] = a1\n 32000: u64 [a5 + 0x88] = a2\n 32004: a0 = u64 [0x20260]\n 32009: a1 = 0x20\n 32012: a2 = s1 + 0x180\n 32016: a3 = s1 + 0x160\n 32020: a4 = s1 + 0x140\n 32024: u64 [a5 + 0x80] = a0\n 32028: a0 = u64 [s1 + 0x78]\n 32031: ra = 1436, jump @27\n      : @1320 [@dyn 718] (gas: 7)\n 32037: sp = s0 + 0xfffffffffffffc80\n 32041: a0 = sp + 0x300\n 32045: ra = u64 [a0 + 0x78]\n 32048: s0 = u64 [a0 + 0x70]\n 32051: s1 = u64 [a0 + 0x68]\n 32054: sp = sp + 0x380\n 32058: ret\n      : @1321 (gas: 1)\n 32060: trap\n      : @1322 (gas: 8)\n 32061: u64 [s1 + 176] = 0\n 32065: u64 [s1 + 168] = 0\n 32069: u64 [s1 + 160] = 0\n 32073: a0 = 0x96c6fd1e00000000\n 32083: a1 = s1 + 0xa0\n 32087: u64 [s1 + 0xb8] = a0\n 32091: a0 = 0\n 32093: ra = 1438, jump @19\n      : @1323 [@dyn 719] (gas: 7)\n 32099: u64 [s1 + 152] = 0\n 32103: u64 [s1 + 144] = 0\n 32107: u64 [s1 + 136] = 0\n 32111: a0 = 0x4\n 32114: a1 = s1 + 0x80\n 32118: u64 [s1 + 128] = 0\n 32122: ra = 1440, jump @19\n      : @1324 [@dyn 720] (gas: 2)\n 32128: a1 = i32 [0x2026c]\n 32133: jump @1326 if a1 >u 63\n      : @1325 (gas: 2)\n 32137: u32 [0x2026c] = 0x40\n 32143: fallthrough\n      : @1326 (gas: 6)\n 32144: a1 = 0x20280\n 32149: i32 a1 = a1 + 0\n 32151: a0 = 0x1\n 32154: a2 = 0x24\n 32157: ecalli 7 // 'seal_return'\n 32159: fallthrough\n      : @1327 (gas: 8)\n 32160: u64 [s1 + 304] = 0\n 32164: u64 [s1 + 296] = 0\n 32168: u64 [s1 + 288] = 0\n 32172: a0 = 0xe450d38c00000000\n 32182: a1 = s1 + 0x120\n 32186: u64 [s1 + 0x138] = a0\n 32190: a0 = 0\n 32192: ra = 1442, jump @19\n      : @1328 [@dyn 721] (gas: 11)\n 32198: u64 [s1 + 280] = 0\n 32202: a0 = u64 [s1 + 0x48]\n 32205: a3 = s1 + 0x100\n 32209: u64 [a3 + 0x10] = a0\n 32212: a0 = u64 [s1 + 0x50]\n 32215: u64 [a3 + 0x8] = a0\n 32218: a0 = 0x4\n 32221: a1 = s1 + 0x100\n 32225: a2 = u64 [s1 + 0x58]\n 32228: u64 [a3] = a2\n 32230: ra = 1444, jump @19\n      : @1329 [@dyn 722] (gas: 11)\n 32236: a0 = u64 [s1 + 0x20]\n 32239: u64 [s1 + 0xf8] = a0\n 32243: a0 = u64 [s1 + 0x18]\n 32246: u64 [s1 + 0xf0] = a0\n 32250: a0 = u64 [s1 + 0x28]\n 32253: u64 [s1 + 0xe8] = a0\n 32257: a0 = 0x24\n 32260: a1 = s1 + 0xe0\n 32264: a2 = u64 [s1 + 0x30]\n 32267: u64 [s1 + 0xe0] = a2\n 32271: ra = 1446, jump @19\n      : @1330 [@dyn 723] (gas: 11)\n 32277: a0 = u64 [s1 + 0x78]\n 32280: u64 [s1 + 0xd8] = a0\n 32284: a0 = u64 [s1 + 0x68]\n 32287: u64 [s1 + 0xd0] = a0\n 32291: a0 = u64 [s1 + 0x60]\n 32294: u64 [s1 + 0xc8] = a0\n 32298: a0 = 0x44\n 32301: a1 = s1 + 0xc0\n 32305: a2 = u64 [s1 + 0x70]\n 32308: u64 [s1 + 0xc0] = a2\n 32312: ra = 1448, jump @19\n      : @1331 [@dyn 724] (gas: 3)\n 32318: a0 = u64 [s1 + 0x38]\n 32321: a0 = i32 [a0]\n 32323: jump @1333 if a0 >u 127\n      : @1332 (gas: 3)\n 32327: a1 = u64 [s1 + 0x38]\n 32330: u32 [a1 + 0] = 0x80\n 32334: fallthrough\n      : @1333 (gas: 6)\n 32335: a0 = 0x1\n 32338: a2 = 0x64\n 32341: a1 = u64 [s1 + 0x40]\n 32344: ra = 0x5aa\n 32348: ecalli 7 // 'seal_return'\n 32350: fallthrough\n      : @1334 [@dyn 725] (gas: 12)\n 32351: sp = sp + 0xffffffffffffff80\n 32354: u64 [sp + 0x78] = ra\n 32357: u64 [sp + 0x70] = s0\n 32360: s0 = sp + 0x80\n 32364: sp = sp & 0xffffffffffffffe0\n 32367: u64 [sp + 88] = 0\n 32370: u64 [sp + 80] = 0\n 32373: u64 [sp + 72] = 0\n 32376: u64 [sp + 64] = 0x5\n 32380: a0 = sp + 0x20\n 32383: a1 = sp + 0x40\n 32386: ra = 1452, jump @21\n      : @1335 [@dyn 726] (gas: 2)\n 32392: a0 = u8 [sp + 0x20]\n 32395: jump @1337 if a0 != 0\n      : @1336 (gas: 5)\n 32398: sp = s0 + 0xffffffffffffff80\n 32401: ra = u64 [sp + 0x78]\n 32404: s0 = u64 [sp + 0x70]\n 32407: sp = sp + 0x80\n 32411: ret\n      : @1337 (gas: 8)\n 32413: u64 [sp + 16] = 0\n 32416: u64 [sp + 8] = 0\n 32419: u64 [sp + 0] = 0\n 32421: a0 = 0xd93c066500000000\n 32431: a1 = sp\n 32433: u64 [sp + 0x18] = a0\n 32436: a0 = 0\n 32438: ra = 1454, jump @19\n      : @1338 [@dyn 727] (gas: 2)\n 32444: a1 = i32 [0x2026c]\n 32449: jump @1340 if a1 >u 31\n      : @1339 (gas: 2)\n 32453: u32 [0x2026c] = 0x20\n 32459: fallthrough\n      : @1340 (gas: 8)\n 32460: a1 = 0x20280\n 32465: i32 a1 = a1 + 0\n 32467: a0 = 0x1\n 32470: a2 = 0x4\n 32473: ecalli 7 // 'seal_return'\n 32475: a0 = 0\n 32477: ra = 0x5b0\n 32481: jump @39\n      : @1341 [export #0: 'call'] (gas: 2)\n 32484: a0 = 0\n 32486: ra = 1456, jump @39\n      : @1342 [@dyn 728] [export #1: 'deploy'] (gas: 2)\n 32492: a0 = 0x1\n 32495: ra = 1458, jump @39\n      : @1343 [@dyn 729] (gas: 16)\n 32501: a0 = u64 [a2 + 0x8]\n 32504: a1 = i32 [a2 + 0x10]\n 32507: a2 = u64 [a2]\n 32509: a0 = reverse a0\n 32511: a3 = a0 << 0x20\n 32514: a1 = reverse a1\n 32516: a1 = a1 >> 0x20\n 32519: a3 = a3 | a1\n 32522: a0 = a0 >> 0x20\n 32525: a1 = reverse a2\n 32527: a2 = a1 << 0x20\n 32530: a0 = a0 | a2\n 32533: a1 = a1 >> 0x20\n 32536: a2 = s1 + 0x7ff\n 32540: a2 = a2 + 0x39\n 32543: jump [t0]\n      : @1344 (gas: 14)\n 32545: a0 = u64 [a2 + 0x8]\n 32548: a1 = i32 [a2 + 0x10]\n 32551: a2 = u64 [a2]\n 32553: a0 = reverse a0\n 32555: a3 = a0 << 0x20\n 32558: a1 = reverse a1\n 32560: a1 = a1 >> 0x20\n 32563: a3 = a3 | a1\n 32566: a0 = a0 >> 0x20\n 32569: a1 = reverse a2\n 32571: a2 = a1 << 0x20\n 32574: a0 = a0 | a2\n 32577: a1 = a1 >> 0x20\n 32580: jump [t0]\n      : @1345 (gas: 30)\n 32582: a3 = u64 [s1 + 0x48]\n 32585: a0 = u64 [a3 + 0x18]\n 32588: a1 = u64 [a3 + 0x10]\n 32591: a2 = u64 [a3 + 0x8]\n 32594: a3 = u64 [a3]\n 32596: a0 = reverse a0\n 32598: u64 [s1 + 0x40] = a0\n 32601: a0 = reverse a1\n 32603: u64 [s1 + 0x38] = a0\n 32606: a0 = reverse a2\n 32608: u64 [s1 + 0x30] = a0\n 32611: a0 = reverse a3\n 32613: u64 [s1 + 0x28] = a0\n 32616: a0 = sp + 0xffffffffffffffe0\n 32619: a0 = a0 & 0xffffffffffffffe0\n 32622: u64 [s1 + 0x48] = a0\n 32625: sp = a0\n 32627: a0 = u64 [s1 + 0x50]\n 32630: a0 = a0 << 0x20\n 32633: a0 = a0 >> 0x20\n 32636: u64 [s1 + 504] = 0\n 32640: u64 [s1] = a0\n 32642: u64 [s1 + 0x1f0] = a0\n 32646: a0 = u64 [s1 + 0x70]\n 32649: u64 [s1 + 0x1e8] = a0\n 32653: a1 = s1 + 0x1e0\n 32657: a0 = u64 [s1 + 0x78]\n 32660: u64 [s1 + 0x1e0] = a0\n 32664: a0 = 0\n 32666: jump [t0]\n      : @1346 (gas: 27)\n 32668: a3 = u64 [s1 + 0x50]\n 32671: a0 = u64 [a3 + 0x18]\n 32674: a1 = u64 [a3 + 0x10]\n 32677: a2 = u64 [a3 + 0x8]\n 32680: a3 = u64 [a3]\n 32682: a0 = reverse a0\n 32684: u64 [s1 + 0x48] = a0\n 32687: a0 = reverse a1\n 32689: u64 [s1 + 0x40] = a0\n 32692: a0 = reverse a2\n 32694: u64 [s1 + 0x38] = a0\n 32697: a0 = reverse a3\n 32699: u64 [s1 + 0x30] = a0\n 32702: a0 = sp + 0xffffffffffffffe0\n 32705: a0 = a0 & 0xffffffffffffffe0\n 32708: u64 [s1 + 0x50] = a0\n 32711: sp = a0\n 32713: u64 [s1 + 344] = 0\n 32717: a0 = u64 [s1]\n 32719: u64 [s1 + 0x150] = a0\n 32723: a0 = u64 [s1 + 0x70]\n 32726: u64 [s1 + 0x148] = a0\n 32730: a1 = s1 + 0x140\n 32734: a0 = u64 [s1 + 0x78]\n 32737: u64 [s1 + 0x140] = a0\n 32741: a0 = 0\n 32743: jump [t0]\n      : @1347 (gas: 8)\n 32745: a0 = u64 [a2 + 0x8]\n 32748: a1 = i32 [a2 + 0x10]\n 32751: a2 = u64 [a2]\n 32753: a3 = reverse a0\n 32755: a0 = a3 << 0x20\n 32758: a1 = reverse a1\n 32760: a1 = a1 >> 0x20\n 32763: jump [t0]\n      : @1348 (gas: 18)\n 32765: a3 = u64 [s1 + 0x28]\n 32768: a0 = u64 [a3 + 0x18]\n 32771: a1 = u64 [a3 + 0x10]\n 32774: a2 = u64 [a3 + 0x8]\n 32777: a3 = u64 [a3]\n 32779: a0 = reverse a0\n 32781: u64 [s1 + 0x20] = a0\n 32784: a0 = reverse a1\n 32786: u64 [s1 + 0x18] = a0\n 32789: a0 = reverse a2\n 32791: u64 [s1 + 0x10] = a0\n 32794: a0 = reverse a3\n 32796: u64 [s1 + 0x8] = a0\n 32799: a0 = sp + 0xffffffffffffffe0\n 32802: a0 = a0 & 0xffffffffffffffe0\n 32805: u64 [s1 + 0x28] = a0\n 32808: sp = a0\n 32810: jump [t0]\n      : @1349 (gas: 26)\n 32812: a3 = u64 [s1 + 0x80]\n 32816: a3 = a3 + 0x1\n 32819: a0 = a3 <u 0x1\n 32822: ra = u64 [s1 + 0x88]\n 32826: ra = ra + a0\n 32829: a0 = a3 | ra\n 32832: a0 = a0 <u 0x1\n 32835: a1 = u64 [s1 + 0x78]\n 32838: t2 = a1 + a0\n 32841: a1 = t2 <u a1\n 32844: a0 = u64 [s1 + 0x90]\n 32848: a0 = a0 + a1\n 32851: a1 = u64 [s1 + 0xb8]\n 32855: t1 = a1 + 0x20\n 32858: a2 = t1 <u a1\n 32861: a4 = u64 [s1 + 0xa0]\n 32865: a1 = a4 + a2\n 32868: a4 = a1 <u a4\n 32871: a4 = a2 if a2 == 0\n 32874: a2 = u64 [s1 + 0xa8]\n 32878: a4 = a4 + a2\n 32881: a2 = a4 <u a2\n 32884: a5 = u64 [s1 + 0xb0]\n 32888: a5 = a5 + a2\n 32891: u64 [s1 + 0xb0] = a5\n 32895: jump [t0]\n      : @1350 (gas: 16)\n 32897: a3 = u64 [s1 + 0x68]\n 32900: a0 = u64 [a3 + 0x18]\n 32903: a1 = u64 [a3 + 0x10]\n 32906: a2 = u64 [a3 + 0x8]\n 32909: a3 = u64 [a3]\n 32911: a0 = reverse a0\n 32913: a4 = reverse a1\n 32915: a2 = reverse a2\n 32917: a3 = reverse a3\n 32919: a1 = u64 [s1 + 0x50]\n 32922: u64 [a1 + 0x18] = a3\n 32925: u64 [a1 + 0x10] = a2\n 32928: u64 [a1 + 0x8] = a4\n 32931: u64 [a1] = a0\n 32933: a0 = s1 + 0x100\n 32937: jump [t0]\n      : @1351 (gas: 16)\n 32939: a3 = u64 [s1 + 0x50]\n 32942: a0 = u64 [a3 + 0x18]\n 32945: a1 = u64 [a3 + 0x10]\n 32948: a2 = u64 [a3 + 0x8]\n 32951: a3 = u64 [a3]\n 32953: a0 = reverse a0\n 32955: a4 = reverse a1\n 32957: a2 = reverse a2\n 32959: a3 = reverse a3\n 32961: a1 = u64 [s1 + 0x48]\n 32964: u64 [a1 + 0x18] = a3\n 32967: u64 [a1 + 0x10] = a2\n 32970: u64 [a1 + 0x8] = a4\n 32973: u64 [a1] = a0\n 32975: a0 = s1 + 0x1a0\n 32979: jump [t0]\n      : @1352 (gas: 9)\n 32981: a0 = u64 [a3 + 0x18]\n 32984: a1 = u64 [a3 + 0x10]\n 32987: a2 = u64 [a3 + 0x8]\n 32990: a3 = u64 [a3]\n 32992: a0 = reverse a0\n 32994: a4 = reverse a1\n 32996: a2 = reverse a2\n 32998: a3 = reverse a3\n 33000: jump [t0]\n      : @1353 (gas: 8)\n 33002: a0 = sp + 0xffffffffffffffe0\n 33005: a0 = a0 & 0xffffffffffffffe0\n 33008: u64 [s1 + 0x50] = a0\n 33011: sp = a0\n 33013: i32 a2 = a0 + 0\n 33015: a1 = 0x40\n 33018: a0 = u64 [s1 + 0x60]\n 33021: jump [t0]\n      : @1354 (gas: 8)\n 33023: a4 = a4 | a2\n 33026: a2 = a0 | a1\n 33029: a2 = a2 | a4\n 33032: a2 = a2 >> 0x20\n 33035: a1 = a1 | a4\n 33038: a1 = a1 << 0x20\n 33041: a1 = a1 | a2\n 33044: jump [t0]\n      : @1355 (gas: 15)\n 33046: a4 = s1 + 0x100\n 33050: a0 = u64 [a4]\n 33052: a1 = u64 [a4 + 0x8]\n 33055: a2 = u64 [a4 + 0x18]\n 33058: a3 = u64 [a4 + 0x10]\n 33061: a0 = a0 & 0xffffffffffffff00\n 33065: a0 = a0 | 0x1\n 33068: a4 = s1 + 0x200\n 33072: u64 [a4 + 0x58] = a2\n 33075: u64 [a4 + 0x50] = a3\n 33078: u64 [a4 + 0x48] = a1\n 33081: u64 [a4 + 0x40] = a0\n 33084: a1 = s1 + 0x240\n 33088: a0 = u64 [s1 + 0x50]\n 33091: jump [t0]\n      : @1356 (gas: 8)\n 33093: a3 = a3 | a2\n 33096: a2 = a0 | a1\n 33099: a2 = a2 | a3\n 33102: a2 = a2 >> 0x20\n 33105: a1 = a1 | a3\n 33108: a1 = a1 << 0x20\n 33111: a1 = a1 | a2\n 33114: jump [t0]\n      : @1357 (gas: 11)\n 33116: u64 [a2] = a1\n 33118: u64 [a2 + 0x8] = a0\n 33121: u64 [a2 + 0x10] = a0\n 33124: u64 [a2 + 0x18] = a0\n 33127: sp = s0 + 0xfffffffffffffd80\n 33131: a0 = sp + 0x200\n 33135: ra = u64 [a0 + 0x78]\n 33138: s0 = u64 [a0 + 0x70]\n 33141: s1 = u64 [a0 + 0x68]\n 33144: sp = sp + 0x280\n 33148: jump [t0]\n      : @1358 (gas: 7)\n 33150: u64 [s1 + 376] = 0\n 33154: u64 [s1 + 368] = 0\n 33158: u64 [s1 + 352] = 0x6\n 33163: a0 = 0x20\n 33166: a1 = s1 + 0x160\n 33170: u64 [s1 + 360] = 0\n 33174: jump [t0]\n      : @1359 (gas: 7)\n 33176: u64 [s1 + 536] = 0\n 33180: u64 [s1 + 528] = 0\n 33184: u64 [s1 + 512] = 0x6\n 33189: a0 = 0x20\n 33192: a1 = s1 + 0x200\n 33196: u64 [s1 + 520] = 0\n 33200: jump [t0]\n      : @1360 (gas: 21)\n 33202: a2 = u64 [s1 + 0x68]\n 33205: a0 = u64 [a2 + 0x8]\n 33208: a1 = i32 [a2 + 0x10]\n 33211: a2 = u64 [a2]\n 33213: a0 = reverse a0\n 33215: a3 = a0 << 0x20\n 33218: a1 = reverse a1\n 33220: a1 = a1 >> 0x20\n 33223: a3 = a3 | a1\n 33226: a0 = a0 >> 0x20\n 33229: a1 = reverse a2\n 33231: a2 = a1 << 0x20\n 33234: a0 = a0 | a2\n 33237: a1 = a1 >> 0x20\n 33240: u64 [s1 + 312] = 0\n 33244: u64 [s1 + 0x130] = a1\n 33248: u64 [s1 + 0x128] = a0\n 33252: a1 = s1 + 0x120\n 33256: u64 [s1 + 0x120] = a3\n 33260: a0 = 0\n 33262: jump [t0]\n      : @1361 (gas: 14)\n 33264: a0 = u64 [a3 + 0x18]\n 33267: a1 = u64 [a3 + 0x10]\n 33270: a2 = u64 [a3 + 0x8]\n 33273: a3 = u64 [a3]\n 33275: a0 = reverse a0\n 33277: a4 = reverse a1\n 33279: a2 = reverse a2\n 33281: a3 = reverse a3\n 33283: a1 = u64 [s1 + 0x28]\n 33286: u64 [a1 + 0x18] = a3\n 33289: u64 [a1 + 0x10] = a2\n 33292: u64 [a1 + 0x8] = a4\n 33295: u64 [a1] = a0\n 33297: jump [t0]\n      : @1362 (gas: 5)\n 33299: sp = a0\n 33301: i32 a2 = a0 + 0\n 33303: a1 = 0x40\n 33306: a0 = u64 [s1 + 0x60]\n 33309: jump [t0]\n      : @1363 (gas: 19)\n 33311: u64 [s1 + 0x90] = ra\n 33315: a0 = u64 [s1 + 0x70]\n 33318: a1 = u64 [s1 + 0xb8]\n 33322: a0 = a1 <u a0\n 33325: a2 = u64 [s1 + 0x60]\n 33328: a1 = t2 ^ a2\n 33331: a2 = t2 <u a2\n 33334: a2 = a0 if a1 == 0\n 33337: a4 = u64 [s1 + 0x68]\n 33340: a0 = t1 <u a4\n 33343: a3 = u64 [s1 + 0x58]\n 33346: a1 = u64 [s1 + 0xb0]\n 33350: a5 = a1 ^ a3\n 33353: a3 = a1 <u a3\n 33356: a3 = a0 if a5 == 0\n 33359: a0 = t1 ^ a4\n 33362: a0 = a0 | a5\n 33365: a3 = a2 if a0 == 0\n 33368: jump [t0]\n      : @1364 (gas: 16)\n 33370: a4 = u64 [s1 + 0x138]\n 33374: a2 = a4 <u 0x80\n 33378: a3 = u64 [s1 + 0xf0]\n 33382: a1 = a3 if a2 != 0\n 33385: a5 = u64 [s1 + 0xf8]\n 33389: a3 = u64 [s1 + 0x108]\n 33393: a3 = a3 | a5\n 33396: a3 = a0 if a2 == 0\n 33399: a1 = 0xffffffffffffffff if a4 == 0\n 33402: a3 = 0xffffffffffffffff if a4 == 0\n 33405: a4 = u64 [s1 + 0x100]\n 33409: a4 = 0 if a2 == 0\n 33411: a5 = 0 if a2 == 0\n 33413: a0 = u64 [s1 + 0x110]\n 33417: a0 = a0 & ~a3\n 33420: jump [t0]\n      : @1365 (gas: 21)\n 33422: a2 = u64 [s1 + 0x68]\n 33425: a0 = u64 [a2 + 0x8]\n 33428: a1 = i32 [a2 + 0x10]\n 33431: a2 = u64 [a2]\n 33433: a0 = reverse a0\n 33435: a3 = a0 << 0x20\n 33438: a1 = reverse a1\n 33440: a1 = a1 >> 0x20\n 33443: a3 = a3 | a1\n 33446: a0 = a0 >> 0x20\n 33449: a1 = reverse a2\n 33451: a2 = a1 << 0x20\n 33454: a0 = a0 | a2\n 33457: a1 = a1 >> 0x20\n 33460: u64 [s1 + 184] = 0\n 33464: u64 [s1 + 0xb0] = a1\n 33468: u64 [s1 + 0xa8] = a0\n 33472: a0 = 0x4\n 33475: a1 = s1 + 0xa0\n 33479: u64 [s1 + 0xa0] = a3\n 33483: jump [t0]\n      : @1366 (gas: 12)\n 33485: a0 = u64 [s1 + 0x28]\n 33488: a3 = s1 + 0x100\n 33492: u64 [a3 + 0xd8] = a0\n 33496: a0 = u64 [s1 + 0x30]\n 33499: u64 [a3 + 0xd0] = a0\n 33503: a0 = u64 [s1 + 0x38]\n 33506: u64 [a3 + 0xc8] = a0\n 33510: a0 = 0x20\n 33513: a1 = s1 + 0x1c0\n 33517: a2 = u64 [s1 + 0x40]\n 33520: u64 [a3 + 0xc0] = a2\n 33524: jump [t0]\n      : @1367 (gas: 15)\n 33526: t2 = u64 [s1 + 0xb8]\n 33530: t1 = u64 [s1 + 0xa0]\n 33534: ra = u64 [s1 + 0xa8]\n 33538: a1 = u64 [s1 + 0x50]\n 33541: a0 = a1 + t2\n 33544: a1 = a0 <u a1\n 33547: a4 = u64 [s1 + 0x48]\n 33550: a2 = a4 + t1\n 33553: a2 = a2 + a1\n 33556: a5 = a2 ^ a4\n 33559: a4 = a2 <u a4\n 33562: a4 = a1 if a5 == 0\n 33565: a5 = u64 [s1 + 0x40]\n 33568: a1 = a5 + ra\n 33571: jump [t0]\n      : @1368 (gas: 12)\n 33573: a0 = u64 [s1 + 0x30]\n 33576: a3 = s1 + 0x100\n 33580: u64 [a3 + 0x38] = a0\n 33583: a0 = u64 [s1 + 0x38]\n 33586: u64 [a3 + 0x30] = a0\n 33589: a0 = u64 [s1 + 0x40]\n 33592: u64 [a3 + 0x28] = a0\n 33595: a0 = 0x20\n 33598: a1 = s1 + 0x120\n 33602: a2 = u64 [s1 + 0x48]\n 33605: u64 [a3 + 0x20] = a2\n 33608: jump [t0]\n      : @1369 (gas: 7)\n 33610: u64 [s1 + 344] = 0\n 33614: u64 [s1 + 336] = 0\n 33618: u64 [s1 + 320] = 0x6\n 33623: a0 = 0x20\n 33626: a1 = s1 + 0x140\n 33630: u64 [s1 + 328] = 0\n 33634: jump [t0]\n      : @1370 (gas: 18)\n 33636: a3 = u64 [s1 + 0x68]\n 33639: a0 = u64 [a3 + 0x18]\n 33642: a1 = u64 [a3 + 0x10]\n 33645: a2 = u64 [a3 + 0x8]\n 33648: a3 = u64 [a3]\n 33650: a0 = reverse a0\n 33652: u64 [s1 + 0x58] = a0\n 33655: a0 = reverse a1\n 33657: u64 [s1 + 0x50] = a0\n 33660: a0 = reverse a2\n 33662: u64 [s1 + 0x48] = a0\n 33665: a0 = reverse a3\n 33667: u64 [s1 + 0x40] = a0\n 33670: a0 = sp + 0xffffffffffffffe0\n 33673: a0 = a0 & 0xffffffffffffffe0\n 33676: u64 [s1 + 0x60] = a0\n 33679: sp = a0\n 33681: jump [t0]\n      : @1371 (gas: 17)\n 33683: a0 = u64 [a3 + 0x18]\n 33686: a1 = u64 [a3 + 0x10]\n 33689: a2 = u64 [a3 + 0x8]\n 33692: a3 = u64 [a3]\n 33694: a0 = reverse a0\n 33696: u64 [s1 + 0x60] = a0\n 33699: a0 = reverse a1\n 33701: u64 [s1 + 0x58] = a0\n 33704: a0 = reverse a2\n 33706: u64 [s1 + 0x50] = a0\n 33709: a0 = reverse a3\n 33711: u64 [s1 + 0x48] = a0\n 33714: a0 = sp + 0xffffffffffffffe0\n 33717: a0 = a0 & 0xffffffffffffffe0\n 33720: u64 [s1 + 0x68] = a0\n 33723: sp = a0\n 33725: jump [t0]\n      : @1372 (gas: 16)\n 33727: a3 = u64 [s1 + 0x58]\n 33730: a0 = u64 [a3 + 0x18]\n 33733: a1 = u64 [a3 + 0x10]\n 33736: a2 = u64 [a3 + 0x8]\n 33739: a3 = u64 [a3]\n 33741: a0 = reverse a0\n 33743: a4 = reverse a1\n 33745: a2 = reverse a2\n 33747: a3 = reverse a3\n 33749: a1 = u64 [s1 + 0x60]\n 33752: u64 [a1 + 0x18] = a3\n 33755: u64 [a1 + 0x10] = a2\n 33758: u64 [a1 + 0x8] = a4\n 33761: u64 [a1] = a0\n 33763: a0 = s1 + 0xe0\n 33767: jump [t0]\n      : @1373 (gas: 5)\n 33769: a0 = reverse a0\n 33771: a1 = reverse a1\n 33773: a2 = reverse a2\n 33775: a3 = reverse a3\n 33777: jump [t0]\n      : @1374 (gas: 14)\n 33779: a3 = a3 + a4\n 33782: u64 [s1 + 0x108] = a3\n 33786: a3 = a3 << 0x3b\n 33789: a4 = a2 >> 0x5\n 33792: a4 = a4 | a3\n 33795: a0 = u64 [s1 + 0x128]\n 33799: t1 = u64 [a0 + 0x18]\n 33802: a2 = a2 << 0x3b\n 33805: a3 = u64 [a0 + 0x10]\n 33808: a1 = a1 >> 0x5\n 33811: a0 = a1 | a2\n 33814: t2 = reverse t1\n 33816: a2 = reverse a3\n 33818: jump [t0]\n      : @1375 (gas: 15)\n 33820: a2 = u64 [s1 + 0x78]\n 33823: a0 = u64 [a2 + 0x8]\n 33826: a1 = i32 [a2 + 0x10]\n 33829: a2 = u64 [a2]\n 33831: a0 = reverse a0\n 33833: a3 = a0 << 0x20\n 33836: a1 = reverse a1\n 33838: a1 = a1 >> 0x20\n 33841: a1 = a1 | a3\n 33844: a0 = a0 >> 0x20\n 33847: a2 = reverse a2\n 33849: a3 = a2 << 0x20\n 33852: a0 = a0 | a3\n 33855: a2 = a2 >> 0x20\n 33858: jump [t0]\n      : @1376 (gas: 14)\n 33860: a5 = a5 + a2\n 33863: a4 = a5 <u a2\n 33866: a0 = u64 [s1 + 0x130]\n 33870: a2 = a2 <u a0\n 33873: a0 = t2 + a2\n 33876: a0 = a0 + a4\n 33879: a2 = a1 | a5\n 33882: a0 = a0 | a3\n 33885: a2 = a2 | a0\n 33888: a2 = a2 >> 0x20\n 33891: a0 = a0 | a5\n 33894: a0 = a0 << 0x20\n 33897: a0 = a0 | a2\n 33900: jump [t0]\n      : @1377 (gas: 10)\n 33902: a4 = 0 if a2 == 0\n 33904: a1 = u64 [s1 + 0x118]\n 33908: a1 = a1 & ~a3\n 33911: a2 = u64 [s1 + 0x120]\n 33915: a0 = a2 & ~a0\n 33918: a2 = u64 [s1 + 0x128]\n 33922: a2 = a2 & ~a4\n 33925: a3 = u64 [s1 + 0x130]\n 33929: a3 = a3 & ~a5\n 33932: jump [t0]\n      : @1378 (gas: 13)\n 33934: a4 = a0 << 0x3f\n 33937: a5 = a1 >> 0x1\n 33940: t1 = a5 | a4\n 33943: a5 = a3 << 0x3f\n 33946: a0 = a0 >> 0x1\n 33949: a0 = a0 | a5\n 33952: a1 = a1 << 0x3f\n 33955: a5 = a2 >> 0x1\n 33958: a1 = a1 | a5\n 33961: a3 = a3 >> 0x1\n 33964: a2 = a2 & 0x1\n 33967: a5 = -a2\n 33969: jump [t0]\n      : @1379 (gas: 16)\n 33971: sp = sp + 0xfffffffffffffd80\n 33975: a2 = sp + 0x200\n 33979: u64 [a2 + 0x78] = ra\n 33982: u64 [a2 + 0x70] = s0\n 33985: u64 [a2 + 0x68] = s1\n 33988: s0 = sp + 0x280\n 33992: sp = sp & 0xffffffffffffffe0\n 33995: s1 = sp\n 33997: a2 = u64 [a1 + 0x10]\n 34000: u64 [s1 + 0x50] = a2\n 34003: a2 = u64 [a1 + 0x8]\n 34006: u64 [s1 + 0x70] = a2\n 34009: a1 = u64 [a1]\n 34011: u64 [s1 + 0x78] = a1\n 34014: u64 [s1 + 0x58] = a0\n 34017: jump [t0]\n      : @1380 (gas: 14)\n 34019: a0 = u64 [a3 + 0x18]\n 34022: a1 = u64 [a3 + 0x10]\n 34025: a2 = u64 [a3 + 0x8]\n 34028: a3 = u64 [a3]\n 34030: a0 = reverse a0\n 34032: a4 = reverse a1\n 34034: a2 = reverse a2\n 34036: a3 = reverse a3\n 34038: a1 = u64 [s1 + 0x68]\n 34041: u64 [a1 + 0x18] = a3\n 34044: u64 [a1 + 0x10] = a2\n 34047: u64 [a1 + 0x8] = a4\n 34050: u64 [a1] = a0\n 34052: jump [t0]\n      : @1381 (gas: 8)\n 34054: a0 = u64 [a4 + 0xb8]\n 34058: a1 = u64 [a4 + 0xc0]\n 34062: a2 = u64 [a4 + 0xb0]\n 34066: a3 = u64 [a4 + 0xa8]\n 34070: a1 = a1 | a2\n 34073: a0 = a0 | a3\n 34076: a0 = a0 | a1\n 34079: jump [t0]\n      : @1382 (gas: 8)\n 34081: a0 = u64 [a4 + 0x78]\n 34084: a1 = u64 [a4 + 0x80]\n 34088: a2 = u64 [a4 + 0x70]\n 34091: a3 = u64 [a4 + 0x68]\n 34094: a1 = a1 | a2\n 34097: a0 = a0 | a3\n 34100: a0 = a0 | a1\n 34103: jump [t0]\n      : @1383 (gas: 13)\n 34105: a5 = a5 + a2\n 34108: a3 = a5 <u a2\n 34111: a2 = a2 <u t2\n 34114: a0 = t1 + a2\n 34117: a0 = a0 + a3\n 34120: a2 = a1 | a5\n 34123: a0 = a0 | a4\n 34126: a2 = a2 | a0\n 34129: a2 = a2 >> 0x20\n 34132: a0 = a0 | a5\n 34135: a0 = a0 << 0x20\n 34138: a0 = a0 | a2\n 34141: jump [t0]\n      : @1384 (gas: 4)\n 34143: a0 = 0x1838\n 34147: a3 = s1 + a0\n 34150: a4 = a3 + 0x300\n 34154: jump [t0]\n      : @1385 (gas: 4)\n 34156: a0 = 0x1038\n 34160: a3 = s1 + a0\n 34163: a4 = a3 + 0x700\n 34167: jump [t0]\n      : @1386 (gas: 8)\n 34169: u64 [s1 + 208] = 0\n 34173: u64 [s1 + 200] = 0\n 34177: u64 [s1 + 192] = 0\n 34181: a0 = 0xe2517d3f00000000\n 34191: a1 = s1 + 0xc0\n 34195: u64 [s1 + 0xd8] = a0\n 34199: a0 = 0\n 34201: jump [t0]\n      : @1387 (gas: 10)\n 34203: a2 = a0 if a1 == 0\n 34206: a0 = u64 [s1 + 0x28]\n 34209: t2 = a4 <u a0\n 34212: a1 = a5 ^ t1\n 34215: a3 = a5 <u t1\n 34218: a3 = t2 if a1 == 0\n 34221: a0 = a0 ^ a4\n 34224: a0 = a0 | a1\n 34227: a3 = a2 if a0 == 0\n 34230: jump [t0]\n      : @1388 (gas: 11)\n 34232: a0 = u64 [s1 + 0x20]\n 34235: u64 [s1 + 0x198] = a0\n 34239: a0 = u64 [s1 + 0x18]\n 34242: u64 [s1 + 0x190] = a0\n 34246: a0 = u64 [s1 + 0x10]\n 34249: u64 [s1 + 0x188] = a0\n 34253: a1 = s1 + 0x180\n 34257: a0 = u64 [s1 + 0x8]\n 34260: u64 [s1 + 0x180] = a0\n 34264: a0 = 0\n 34266: jump [t0]\n      : @1389 (gas: 16)\n 34268: a4 = u64 [a3]\n 34270: u64 [sp + 0x18] = a4\n 34273: a4 = u64 [a3 + 0x8]\n 34276: u64 [sp + 0x20] = a4\n 34279: a4 = u64 [a3 + 0x10]\n 34282: u64 [sp + 0x28] = a4\n 34285: a3 = u64 [a3 + 0x18]\n 34288: u64 [sp + 0x30] = a3\n 34291: s1 = u64 [a2]\n 34293: a3 = u64 [a2 + 0x8]\n 34296: u64 [sp] = a3\n 34298: a3 = u64 [a2 + 0x10]\n 34301: u64 [sp + 0x8] = a3\n 34304: a2 = u64 [a2 + 0x18]\n 34307: u64 [sp + 0x10] = a2\n 34310: jump [t0]\n      : @1390 (gas: 10)\n 34312: a1 = u64 [s1 + 0xb8]\n 34316: a0 = a1 + 0x3f\n 34319: a1 = a0 <u a1\n 34322: a2 = t2 + a1\n 34325: a0 = a0 & 0xffffffffffffffe0\n 34328: ra = u64 [s1 + 0x30]\n 34331: ra = ra + a0\n 34334: u64 [s1 + 0xb8] = ra\n 34338: a0 = ra <u a0\n 34341: jump [t0]\n      : @1391 (gas: 10)\n 34343: a0 = u64 [s1 + 0x28]\n 34346: a1 = u64 [s1 + 0x18]\n 34349: a0 = a0 | a1\n 34352: a1 = 0xffffffe0\n 34362: a3 = u64 [s1 + 0x30]\n 34365: a1 = a3 <u a1\n 34368: a2 = u64 [s1 + 0x20]\n 34371: a1 = 0 if a2 != 0\n 34373: a1 = 0 if a0 != 0\n 34375: jump [t0]\n      : @1392 (gas: 8)\n 34377: a2 = a4 >u 0\n 34379: a1 = a1 ^ 0x1\n 34382: a1 = a2 if a4 != 0\n 34385: a2 = t2 >u 0\n 34387: a3 = a5 >u 0\n 34389: a3 = a2 if a5 == 0\n 34392: a3 = a1 if a0 == 0\n 34395: jump [t0]\n      : @1393 (gas: 12)\n 34397: a0 = u64 [s1 + 0x40]\n 34400: a3 = s1 + 0x100\n 34404: u64 [a3 + 0x18] = a0\n 34407: a0 = u64 [s1 + 0x48]\n 34410: u64 [a3 + 0x10] = a0\n 34413: a0 = u64 [s1 + 0x50]\n 34416: u64 [a3 + 0x8] = a0\n 34419: a0 = 0x20\n 34422: a1 = s1 + 0x100\n 34426: a2 = u64 [s1 + 0x58]\n 34429: u64 [a3] = a2\n 34431: jump [t0]\n      : @1394 (gas: 10)\n 34433: a0 = u64 [sp + 0x10]\n 34436: a1 = u64 [sp + 0x18]\n 34439: a2 = 0x100000000\n 34449: a2 = a2 ^ a0\n 34452: a2 = a2 | a1\n 34455: a3 = a0 >> 0x20\n 34458: a3 = a3 <u 0x1\n 34461: a3 = 0 if a1 != 0\n 34463: a3 = 0 if a2 == 0\n 34465: jump [t0]\n      : @1395 (gas: 8)\n 34467: a1 = a2 & ~a1\n 34470: a2 = u64 [s1 + 0x128]\n 34474: a2 = a2 & ~a5\n 34477: a3 = u64 [s1 + 0x130]\n 34481: a3 = a3 & ~a4\n 34484: a4 = s1 + 0x7ff\n 34488: a4 = a4 + 0xb9\n 34492: jump [t0]\n      : @1396 (gas: 10)\n 34494: a0 = u64 [a3 + 0x18]\n 34497: a1 = u64 [a3 + 0x10]\n 34500: a2 = u64 [a3 + 0x8]\n 34503: a3 = u64 [a3]\n 34505: a0 = reverse a0\n 34507: a1 = reverse a1\n 34509: a2 = reverse a2\n 34511: a3 = reverse a3\n 34513: a4 = s1 + 0x300\n 34517: jump [t0]\n      : @1397 (gas: 8)\n 34519: a4 = a2 + a0\n 34522: a4 = a4 + a3\n 34525: a3 = a4 ^ a2\n 34528: u64 [s1 + 0x110] = a4\n 34532: a2 = a4 <u a2\n 34535: a2 = a0 if a3 == 0\n 34538: a4 = u64 [s1 + 0x108]\n 34542: jump [t0]\n      : @1398 (gas: 4)\n 34544: a0 = 0x1838\n 34548: a3 = s1 + a0\n 34551: a4 = a3 + 0x200\n 34555: jump [t0]\n      : @1399 (gas: 4)\n 34557: a0 = 0x1838\n 34561: a3 = s1 + a0\n 34564: a4 = a3 + 0x100\n 34568: jump [t0]\n      : @1400 (gas: 7)\n 34570: u64 [s1 + 632] = 0\n 34574: u64 [s1 + 624] = 0\n 34578: u64 [s1 + 616] = 0\n 34582: a0 = 0x20\n 34585: a1 = s1 + 0x260\n 34589: u64 [s1 + 608] = 0\n 34593: jump [t0]\n      : @1401 (gas: 11)\n 34595: a4 = a4 + a1\n 34598: a1 = a4 <u a1\n 34601: a1 = a1 + a5\n 34604: a1 = a1 | a2\n 34607: a2 = a0 | a4\n 34610: a2 = a2 | a1\n 34613: a1 = a1 | a4\n 34616: a2 = a2 >> 0x20\n 34619: a1 = a1 << 0x20\n 34622: a1 = a1 | a2\n 34625: jump [t0]\n      : @1402 (gas: 10)\n 34627: u64 [s1 + 0xf8] = a0\n 34631: u64 [s1 + 0x100] = a1\n 34635: a0 = u64 [s1 + 0xf0]\n 34639: a0 = a0 | a1\n 34642: u64 [s1 + 0xf0] = a0\n 34646: a0 = u64 [s1 + 0x138]\n 34650: a2 = a0 + 0xffffffffffffff80\n 34653: a0 = 0xffffffffffffffff\n 34656: a1 = 0xffffffffffffffff\n 34659: jump [t0]\n      : @1403 (gas: 9)\n 34661: u64 [s1 + 0x18] = a1\n 34664: u64 [s1 + 0x230] = a1\n 34668: u64 [s1 + 0x10] = a2\n 34671: u64 [s1 + 0x228] = a2\n 34675: a1 = s1 + 0x220\n 34679: u64 [s1 + 0x8] = a0\n 34682: u64 [s1 + 0x220] = a0\n 34686: a0 = 0\n 34688: jump [t0]\n      : @1404 (gas: 10)\n 34690: sp = sp + 0xfffffffffffffd80\n 34694: a3 = sp + 0x200\n 34698: u64 [a3 + 0x78] = ra\n 34701: u64 [a3 + 0x70] = s0\n 34704: u64 [a3 + 0x68] = s1\n 34707: s0 = sp + 0x280\n 34711: sp = sp & 0xffffffffffffffe0\n 34714: s1 = sp\n 34716: a3 = u64 [a2 + 0x10]\n 34719: jump [t0]\n      : @1405 (gas: 12)\n 34721: a2 = u64 [sp]\n 34723: a3 = u64 [sp + 0x8]\n 34726: u64 [s1] = a2\n 34728: u64 [s1 + 0x8] = a3\n 34731: u64 [s1 + 0x10] = a0\n 34734: u64 [s1 + 0x18] = a1\n 34737: sp = s0 + 0xffffffffffffffc0\n 34740: ra = u64 [sp + 0x38]\n 34743: s0 = u64 [sp + 0x30]\n 34746: s1 = u64 [sp + 0x28]\n 34749: sp = sp + 0x40\n 34752: jump [t0]\n      : @1406 (gas: 6)\n 34754: a0 = u64 [a3 + 0x18]\n 34757: a1 = u64 [a3 + 0x10]\n 34760: a2 = u64 [a3 + 0x8]\n 34763: a3 = u64 [a3]\n 34765: a0 = reverse a0\n 34767: jump [t0]\n      : @1407 (gas: 8)\n 34769: a0 = a0 | a2\n 34772: a2 = a3 | a1\n 34775: a2 = a2 | a0\n 34778: a2 = a2 >> 0x20\n 34781: a0 = a0 | a1\n 34784: a0 = a0 << 0x20\n 34787: a0 = a0 | a2\n 34790: jump [t0]\n      : @1408 (gas: 5)\n 34792: sp = a0\n 34794: i32 a2 = a0 + 0\n 34796: a1 = 0x40\n 34799: a0 = u64 [s1 + 0xb8]\n 34803: jump [t0]\n      : @1409 (gas: 13)\n 34805: a0 = u64 [s1 + 0xb0]\n 34809: a1 = u64 [s1 + 0xa0]\n 34813: a0 = a0 | a1\n 34816: a1 = u64 [s1 + 0xb8]\n 34820: a4 = a1\n 34822: a2 = u64 [s1 + 0xa8]\n 34826: a1 = a1 | a2\n 34829: a1 = a1 | a0\n 34832: a1 = a1 >> 0x20\n 34835: a0 = a0 | a2\n 34838: a0 = a0 << 0x20\n 34841: a0 = a0 | a1\n 34844: jump [t0]\n      : @1410 (gas: 7)\n 34846: a0 = a0 << 0x3b\n 34849: a1 = a0 >> 0x38\n 34852: u64 [s1 + 0x138] = a1\n 34856: a2 = 0x80 - a1\n 34860: a0 = 0xffffffffffffffff\n 34863: a1 = 0xffffffffffffffff\n 34866: jump [t0]\n      : @1411 (gas: 11)\n 34868: a1 = u64 [a5 + 0xf8]\n 34872: a2 = u64 [a5 + 0xf0]\n 34876: a4 = u64 [a5 + 0xe8]\n 34880: a0 = a0 | a2\n 34883: a2 = a4 | a1\n 34886: a2 = a2 | a0\n 34889: a2 = a2 >> 0x20\n 34892: a0 = a0 | a1\n 34895: a0 = a0 << 0x20\n 34898: a0 = a0 | a2\n 34901: jump [t0]\n      : @1412 (gas: 8)\n 34903: a0 = sp + 0xffffffffffffffe0\n 34906: a0 = a0 & 0xffffffffffffffe0\n 34909: u64 [s1 + 0x58] = a0\n 34912: sp = a0\n 34914: i32 a2 = a0 + 0\n 34916: a1 = 0x40\n 34919: a0 = u64 [s1 + 0x70]\n 34922: jump [t0]\n      : @1413 (gas: 8)\n 34924: a0 = sp + 0xffffffffffffffe0\n 34927: a0 = a0 & 0xffffffffffffffe0\n 34930: u64 [s1 + 0x30] = a0\n 34933: sp = a0\n 34935: i32 a2 = a0 + 0\n 34937: a1 = 0x40\n 34940: a0 = u64 [s1 + 0x40]\n 34943: jump [t0]\n      : @1414 (gas: 9)\n 34945: a0 = sp + 0xffffffffffffffe0\n 34948: a4 = a0 & 0xffffffffffffffe0\n 34951: sp = a4\n 34953: a0 = 0\n 34955: u64 [s1 + 184] = 0\n 34959: t2 = 0\n 34961: t1 = 0\n 34963: u64 [s1 + 176] = 0\n 34967: jump [t0]\n      : @1415 (gas: 8)\n 34969: a0 = u64 [a4 + 0x38]\n 34972: a1 = u64 [a4 + 0x40]\n 34975: a2 = u64 [a4 + 0x30]\n 34978: a3 = u64 [a4 + 0x28]\n 34981: a1 = a1 | a2\n 34984: a0 = a0 | a3\n 34987: a0 = a0 | a1\n 34990: jump [t0]\n      : @1416 (gas: 8)\n 34992: a0 = a0 + a4\n 34995: a3 = a3 + a1\n 34998: a5 = a3 <u a1\n 35001: a0 = a0 + a5\n 35004: ra = u64 [s1 + 0x100]\n 35008: ra = ra + a3\n 35011: a3 = ra <u a3\n 35014: jump [t0]\n      : @1417 (gas: 9)\n 35016: sp = sp + 0xffffffffffffffc0\n 35019: u64 [sp + 0x38] = ra\n 35022: u64 [sp + 0x30] = s0\n 35025: u64 [sp + 0x28] = s1\n 35028: s0 = sp + 0x40\n 35031: sp = sp & 0xffffffffffffffe0\n 35034: s1 = a0\n 35036: i32 a0 = sp + 0\n 35038: jump [t0]\n      : @1418 (gas: 6)\n 35040: a1 = a3 << 0x3\n 35043: u64 [s1 + 0x138] = a1\n 35047: i32 a2 = 0x80 - a1\n 35051: a0 = 0xffffffffffffffff\n 35054: a1 = 0xffffffffffffffff\n 35057: jump [t0]\n      : @1419 (gas: 6)\n 35059: i32 a0 = a0 + 0\n 35061: i32 a2 = a2 + 0\n 35063: u64 [s1 + 0x68] = a1\n 35066: a1 = 0x40\n 35069: u64 [s1 + 0x60] = a0\n 35072: jump [t0]\n      : @1420 (gas: 7)\n 35074: a3 = a3 | a5\n 35077: a3 = a1 if a2 == 0\n 35080: a1 = 0xffffffffffffffff\n 35083: a0 = a1 if a4 == 0\n 35086: a3 = a1 if a4 == 0\n 35089: a5 = 0 if a2 == 0\n 35091: jump [t0]\n      : @1421 (gas: 4)\n 35093: a0 = 0x1038\n 35097: a3 = s1 + a0\n 35100: a4 = a3 + 0x600\n 35104: jump [t0]\n      : @1422 (gas: 2)\n 35106: a3 = a2 & 0x40\n 35109: jump @1426 if a3 != 0\n      : @1423 (gas: 1)\n 35112: jump @1425 if a2 == 0\n      : @1424 (gas: 6)\n 35115: i32 a3 = 0x40 - a2\n 35118: a3 = a1 << a3\n 35121: a1 = a1 >> a2\n 35124: a0 = a0 >> a2\n 35127: a0 = a0 | a3\n 35130: ret\n      : @1425 (gas: 1)\n 35132: ret\n      : @1426 (gas: 4)\n 35134: a0 = a2 + 0xffffffffffffffc0\n 35137: a0 = a1 >> a0\n 35140: a1 = 0\n 35142: ret\n      : @1427 (gas: 2)\n 35144: a3 = a2 & 0x40\n 35147: jump @1431 if a3 != 0\n      : @1428 (gas: 1)\n 35150: jump @1430 if a2 == 0\n      : @1429 (gas: 6)\n 35153: i32 a3 = 0x40 - a2\n 35156: a3 = a0 >> a3\n 35159: a0 = a0 << a2\n 35162: a1 = a1 << a2\n 35165: a1 = a1 | a3\n 35168: ret\n      : @1430 (gas: 1)\n 35170: ret\n      : @1431 (gas: 4)\n 35172: a1 = a2 + 0xffffffffffffffc0\n 35175: a1 = a0 << a1\n 35178: a0 = 0\n 35180: ret\n",
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "DEFAULT_ADMIN_ROLE()": "a217fddf",
              "MINTER_ROLE()": "d5391393",
              "PAUSER_ROLE()": "e63ab1e9",
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "burn(uint256)": "42966c68",
              "burnFrom(address,uint256)": "79cc6790",
              "decimals()": "313ce567",
              "getRoleAdmin(bytes32)": "248a9ca3",
              "grantRole(bytes32,address)": "2f2ff15d",
              "hasRole(bytes32,address)": "91d14854",
              "mint(address,uint256)": "40c10f19",
              "minter()": "07546172",
              "name()": "06fdde03",
              "pause()": "8456cb59",
              "paused()": "5c975abb",
              "renounceRole(bytes32,address)": "36568abe",
              "revokeRole(bytes32,address)": "d547741f",
              "supportsInterface(bytes4)": "01ffc9a7",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd",
              "unpause()": "3f4ba83a"
            }
          },
          "irOptimized": "/// @use-src 0:\"@openzeppelin/contracts/access/AccessControl.sol\", 1:\"@openzeppelin/contracts/access/IAccessControl.sol\", 2:\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\", 3:\"@openzeppelin/contracts/token/ERC20/ERC20.sol\", 4:\"@openzeppelin/contracts/token/ERC20/IERC20.sol\", 5:\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\", 6:\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\", 7:\"@openzeppelin/contracts/utils/Context.sol\", 8:\"@openzeppelin/contracts/utils/Pausable.sol\", 9:\"@openzeppelin/contracts/utils/introspection/ERC165.sol\", 10:\"@openzeppelin/contracts/utils/introspection/IERC165.sol\", 11:\"contracts/MyToken.sol\"\nobject \"MyToken_1478\" {\n    code {\n        {\n            /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            mstore(64, memoryguard(0x80))\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"MyToken_1478\")\n            let argSize := sub(codesize(), programSize)\n            let memoryDataOffset := allocate_memory(argSize)\n            codecopy(memoryDataOffset, programSize, argSize)\n            if slt(sub(add(memoryDataOffset, argSize), memoryDataOffset), 32)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            let value := mload(memoryDataOffset)\n            let memPtr := /** @src -1:-1:-1 */ 0\n            /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            let size := /** @src -1:-1:-1 */ 0\n            /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            size := /** @src -1:-1:-1 */ 0\n            /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            memPtr := allocate_memory(64)\n            mstore(memPtr, 7)\n            mstore(add(memPtr, 32), \"MyToken\")\n            let memPtr_1 := /** @src -1:-1:-1 */ 0\n            /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            let size_1 := /** @src -1:-1:-1 */ 0\n            /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            size_1 := /** @src -1:-1:-1 */ 0\n            /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            memPtr_1 := allocate_memory(64)\n            mstore(memPtr_1, 3)\n            mstore(add(memPtr_1, 32), \"MTK\")\n            let newLen := mload(memPtr)\n            if gt(newLen, sub(shl(64, 1), 1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x24)\n            }\n            let _1 := sload(3)\n            let length := /** @src -1:-1:-1 */ 0\n            /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            length := shr(1, _1)\n            let outOfPlaceEncoding := and(_1, 1)\n            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n            if eq(outOfPlaceEncoding, lt(length, 32))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 34)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x24)\n            }\n            if gt(length, 31)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 3)\n                let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 32)\n                let deleteStart := add(data, shr(5, add(newLen, 31)))\n                if lt(newLen, 32) { deleteStart := data }\n                let _2 := add(data, shr(5, add(length, 31)))\n                let start := deleteStart\n                for { } lt(start, _2) { start := add(start, 1) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ 0)\n                }\n            }\n            /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            let srcOffset := /** @src -1:-1:-1 */ 0\n            /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            srcOffset := 32\n            switch gt(newLen, 31)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 3)\n                let dstPtr := keccak256(/** @src -1:-1:-1 */ 0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ srcOffset)\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                for { } lt(i, loopEnd) { i := add(i, 32) }\n                {\n                    sstore(dstPtr, mload(add(memPtr, srcOffset)))\n                    dstPtr := add(dstPtr, 1)\n                    srcOffset := add(srcOffset, 32)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(memPtr, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                }\n                sstore(3, add(shl(1, newLen), 1))\n            }\n            default {\n                let value_1 := /** @src -1:-1:-1 */ 0\n                /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                if newLen\n                {\n                    value_1 := mload(add(memPtr, srcOffset))\n                }\n                sstore(3, or(and(value_1, not(shr(shl(3, newLen), not(0)))), shl(1, newLen)))\n            }\n            let newLen_1 := mload(memPtr_1)\n            if gt(newLen_1, sub(shl(64, 1), 1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ shl(224, 0x4e487b71))\n                mstore(/** @src 3:1671:1688  \"_symbol = symbol_\" */ 0x04, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x24)\n            }\n            let _3 := sload(/** @src 3:1671:1688  \"_symbol = symbol_\" */ 0x04)\n            /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            let length_1 := /** @src -1:-1:-1 */ 0\n            /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            length_1 := shr(1, _3)\n            let outOfPlaceEncoding_1 := and(_3, 1)\n            if iszero(outOfPlaceEncoding_1)\n            {\n                length_1 := and(length_1, 0x7f)\n            }\n            if eq(outOfPlaceEncoding_1, lt(length_1, 32))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ shl(224, 0x4e487b71))\n                mstore(/** @src 3:1671:1688  \"_symbol = symbol_\" */ 0x04, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 34)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x24)\n            }\n            if gt(length_1, 31)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 3:1671:1688  \"_symbol = symbol_\" */ 0x04)\n                /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let data_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 32)\n                let deleteStart_1 := add(data_1, shr(5, add(newLen_1, 31)))\n                if lt(newLen_1, 32) { deleteStart_1 := data_1 }\n                let _4 := add(data_1, shr(5, add(length_1, 31)))\n                let start_1 := deleteStart_1\n                for { } lt(start_1, _4) { start_1 := add(start_1, 1) }\n                {\n                    sstore(start_1, /** @src -1:-1:-1 */ 0)\n                }\n            }\n            /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            let srcOffset_1 := /** @src -1:-1:-1 */ 0\n            /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            srcOffset_1 := 32\n            switch gt(newLen_1, 31)\n            case 1 {\n                let loopEnd_1 := and(newLen_1, not(31))\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 3:1671:1688  \"_symbol = symbol_\" */ 0x04)\n                /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let dstPtr_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ srcOffset_1)\n                let i_1 := /** @src -1:-1:-1 */ 0\n                /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                for { } lt(i_1, loopEnd_1) { i_1 := add(i_1, 32) }\n                {\n                    sstore(dstPtr_1, mload(add(memPtr_1, srcOffset_1)))\n                    dstPtr_1 := add(dstPtr_1, 1)\n                    srcOffset_1 := add(srcOffset_1, 32)\n                }\n                if lt(loopEnd_1, newLen_1)\n                {\n                    let lastValue_1 := mload(add(memPtr_1, srcOffset_1))\n                    sstore(dstPtr_1, and(lastValue_1, not(shr(and(shl(3, newLen_1), 248), not(0)))))\n                }\n                sstore(/** @src 3:1671:1688  \"_symbol = symbol_\" */ 0x04, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ add(shl(1, newLen_1), 1))\n            }\n            default {\n                let value_2 := /** @src -1:-1:-1 */ 0\n                /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                if newLen_1\n                {\n                    value_2 := mload(add(memPtr_1, srcOffset_1))\n                }\n                sstore(/** @src 3:1671:1688  \"_symbol = symbol_\" */ 0x04, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ or(and(value_2, not(shr(shl(3, newLen_1), not(0)))), shl(1, newLen_1)))\n            }\n            sstore(7, or(and(sload(7), not(sub(shl(160, 1), 1))), /** @src 11:665:675  \"msg.sender\" */ caller()))\n            /// @src 11:681:723  \"_grantRole(DEFAULT_ADMIN_ROLE, msg.sender)\"\n            pop(fun_grantRole_7004(/** @src 11:665:675  \"msg.sender\" */ caller()))\n            /// @src 11:729:764  \"_grantRole(PAUSER_ROLE, msg.sender)\"\n            pop(fun_grantRole_7005(/** @src 11:665:675  \"msg.sender\" */ caller()))\n            /// @src 11:770:805  \"_grantRole(MINTER_ROLE, msg.sender)\"\n            pop(fun_grantRole(/** @src 11:665:675  \"msg.sender\" */ caller()))\n            /// @src 3:7509:7530  \"account == address(0)\"\n            let _5 := iszero(/** @src 11:665:675  \"msg.sender\" */ caller())\n            /// @src 3:7505:7596  \"if (account == address(0)) {...\"\n            if /** @src 3:7509:7530  \"account == address(0)\" */ _5\n            /// @src 3:7505:7596  \"if (account == address(0)) {...\"\n            {\n                /// @src 3:7553:7585  \"ERC20InvalidReceiver(address(0))\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 3:7553:7585  \"ERC20InvalidReceiver(address(0))\" */ shl(224, 0xec442f05))\n                /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src 3:1671:1688  \"_symbol = symbol_\" */ 0x04, /** @src -1:-1:-1 */ 0)\n                /// @src 3:7553:7585  \"ERC20InvalidReceiver(address(0))\"\n                revert(/** @src -1:-1:-1 */ 0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 36)\n            }\n            /// @src 8:1939:2000  \"if (paused()) {...\"\n            if /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(sload(/** @src 8:1796:1803  \"_paused\" */ 0x05), /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0xff)\n            /// @src 8:1939:2000  \"if (paused()) {...\"\n            {\n                /// @src 8:1974:1989  \"EnforcedPause()\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 8:1974:1989  \"EnforcedPause()\" */ shl(224, 0xd93c0665))\n                revert(/** @src -1:-1:-1 */ 0, /** @src 3:1671:1688  \"_symbol = symbol_\" */ 0x04)\n            }\n            /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            let _6 := sload(/** @src 3:6214:6235  \"_totalSupply += value\" */ 0x02)\n            /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            let sum := add(_6, value)\n            if gt(_6, sum)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ shl(224, 0x4e487b71))\n                mstore(/** @src 3:1671:1688  \"_symbol = symbol_\" */ 0x04, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x11)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x24)\n            }\n            sstore(/** @src 3:6214:6235  \"_totalSupply += value\" */ 0x02, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sum)\n            /// @src 3:6624:7049  \"if (to == address(0)) {...\"\n            _5 := /** @src -1:-1:-1 */ 0\n            /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            mstore(/** @src -1:-1:-1 */ 0, /** @src 11:665:675  \"msg.sender\" */ caller())\n            /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            mstore(32, /** @src -1:-1:-1 */ 0)\n            /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 64)\n            sstore(dataSlot, add(sload(/** @src 3:7002:7024  \"_balances[to] += value\" */ dataSlot), /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ value))\n            /// @src 3:7064:7089  \"Transfer(from, to, value)\"\n            let _7 := /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ mload(64)\n            mstore(_7, value)\n            /// @src 3:7064:7089  \"Transfer(from, to, value)\"\n            log3(_7, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 32, /** @src 3:7064:7089  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src -1:-1:-1 */ 0, /** @src 11:665:675  \"msg.sender\" */ caller())\n            /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            let _8 := mload(64)\n            let _9 := datasize(\"MyToken_1478_deployed\")\n            codecopy(_8, dataoffset(\"MyToken_1478_deployed\"), _9)\n            return(_8, _9)\n        }\n        function allocate_memory(size) -> memPtr\n        {\n            memPtr := mload(64)\n            let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n        }\n        /// @ast-id 256 @src 0:6179:6495  \"function _grantRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n        function fun_grantRole_7004(var_account) -> var\n        {\n            /// @src 0:6256:6260  \"bool\"\n            var := /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0\n            mstore(0, 0)\n            mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ 0x06)\n            /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            let dataSlot := keccak256(0, 0x40)\n            /// @src 0:2954:2983  \"_roles[role].hasRole[account]\"\n            let dataSlot_1 := /** @src -1:-1:-1 */ 0\n            /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            mstore(/** @src -1:-1:-1 */ 0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:6277:6299  \"hasRole(role, account)\" */ var_account, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n            mstore(0x20, /** @src 0:2954:2966  \"_roles[role]\" */ dataSlot)\n            /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n            /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n            switch /** @src 0:6276:6299  \"!hasRole(role, account)\" */ iszero(/** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(sload(/** @src 0:2954:2983  \"_roles[role].hasRole[account]\" */ dataSlot_1), /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0xff))\n            case /** @src 0:6272:6489  \"if (!hasRole(role, account)) {...\" */ 0 {\n                /// @src 0:6466:6478  \"return false\"\n                var := /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0\n                /// @src 0:6466:6478  \"return false\"\n                leave\n            }\n            default /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n            {\n                /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(0, 0)\n                mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ 0x06)\n                /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let dataSlot_2 := keccak256(0, 0x40)\n                /// @src 0:6315:6344  \"_roles[role].hasRole[account]\"\n                let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ var_account, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 0:6315:6327  \"_roles[role]\" */ dataSlot_2)\n                /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                sstore(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ dataSlot_3, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ or(and(sload(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ dataSlot_3), /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ not(255)), /** @src 0:6347:6351  \"true\" */ 0x01))\n                /// @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\"\n                log4(/** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, 0, /** @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, and(/** @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\" */ var_account, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)), /** @src 7:735:745  \"msg.sender\" */ caller())\n                /// @src 0:6424:6435  \"return true\"\n                var := /** @src 0:6347:6351  \"true\" */ 0x01\n                /// @src 0:6424:6435  \"return true\"\n                leave\n            }\n        }\n        /// @ast-id 256 @src 0:6179:6495  \"function _grantRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n        function fun_grantRole_7005(var_account) -> var\n        {\n            /// @src 0:6256:6260  \"bool\"\n            var := /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0\n            mstore(0, /** @src 11:471:495  \"keccak256(\\\"PAUSER_ROLE\\\")\" */ 0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a)\n            /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ 0x06)\n            /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            let dataSlot := keccak256(0, 0x40)\n            /// @src 0:2954:2983  \"_roles[role].hasRole[account]\"\n            let dataSlot_1 := /** @src -1:-1:-1 */ 0\n            /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            mstore(/** @src -1:-1:-1 */ 0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:6277:6299  \"hasRole(role, account)\" */ var_account, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n            mstore(0x20, /** @src 0:2954:2966  \"_roles[role]\" */ dataSlot)\n            /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n            /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n            switch /** @src 0:6276:6299  \"!hasRole(role, account)\" */ iszero(/** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(sload(/** @src 0:2954:2983  \"_roles[role].hasRole[account]\" */ dataSlot_1), /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0xff))\n            case /** @src 0:6272:6489  \"if (!hasRole(role, account)) {...\" */ 0 {\n                /// @src 0:6466:6478  \"return false\"\n                var := /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0\n                /// @src 0:6466:6478  \"return false\"\n                leave\n            }\n            default /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n            {\n                /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(0, /** @src 11:471:495  \"keccak256(\\\"PAUSER_ROLE\\\")\" */ 0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a)\n                /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ 0x06)\n                /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let dataSlot_2 := keccak256(0, 0x40)\n                /// @src 0:6315:6344  \"_roles[role].hasRole[account]\"\n                let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ var_account, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 0:6315:6327  \"_roles[role]\" */ dataSlot_2)\n                /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                sstore(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ dataSlot_3, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ or(and(sload(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ dataSlot_3), /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ not(255)), /** @src 0:6347:6351  \"true\" */ 0x01))\n                /// @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\"\n                log4(/** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, 0, /** @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, /** @src 11:471:495  \"keccak256(\\\"PAUSER_ROLE\\\")\" */ 0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\" */ var_account, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)), /** @src 7:735:745  \"msg.sender\" */ caller())\n                /// @src 0:6424:6435  \"return true\"\n                var := /** @src 0:6347:6351  \"true\" */ 0x01\n                /// @src 0:6424:6435  \"return true\"\n                leave\n            }\n        }\n        /// @ast-id 256 @src 0:6179:6495  \"function _grantRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n        function fun_grantRole(var_account) -> var\n        {\n            /// @src 0:6256:6260  \"bool\"\n            var := /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0\n            mstore(0, /** @src 11:537:561  \"keccak256(\\\"MINTER_ROLE\\\")\" */ 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6)\n            /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ 0x06)\n            /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            let dataSlot := keccak256(0, 0x40)\n            /// @src 0:2954:2983  \"_roles[role].hasRole[account]\"\n            let dataSlot_1 := /** @src -1:-1:-1 */ 0\n            /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            mstore(/** @src -1:-1:-1 */ 0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:6277:6299  \"hasRole(role, account)\" */ var_account, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n            mstore(0x20, /** @src 0:2954:2966  \"_roles[role]\" */ dataSlot)\n            /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n            dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n            /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n            switch /** @src 0:6276:6299  \"!hasRole(role, account)\" */ iszero(/** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(sload(/** @src 0:2954:2983  \"_roles[role].hasRole[account]\" */ dataSlot_1), /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0xff))\n            case /** @src 0:6272:6489  \"if (!hasRole(role, account)) {...\" */ 0 {\n                /// @src 0:6466:6478  \"return false\"\n                var := /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0\n                /// @src 0:6466:6478  \"return false\"\n                leave\n            }\n            default /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n            {\n                /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(0, /** @src 11:537:561  \"keccak256(\\\"MINTER_ROLE\\\")\" */ 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6)\n                /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ 0x06)\n                /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let dataSlot_2 := keccak256(0, 0x40)\n                /// @src 0:6315:6344  \"_roles[role].hasRole[account]\"\n                let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ var_account, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 0:6315:6327  \"_roles[role]\" */ dataSlot_2)\n                /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                sstore(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ dataSlot_3, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ or(and(sload(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ dataSlot_3), /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ not(255)), /** @src 0:6347:6351  \"true\" */ 0x01))\n                /// @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\"\n                log4(/** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, 0, /** @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, /** @src 11:537:561  \"keccak256(\\\"MINTER_ROLE\\\")\" */ 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\" */ var_account, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)), /** @src 7:735:745  \"msg.sender\" */ caller())\n                /// @src 0:6424:6435  \"return true\"\n                var := /** @src 0:6347:6351  \"true\" */ 0x01\n                /// @src 0:6424:6435  \"return true\"\n                leave\n            }\n        }\n    }\n    /// @use-src 0:\"@openzeppelin/contracts/access/AccessControl.sol\", 3:\"@openzeppelin/contracts/token/ERC20/ERC20.sol\", 5:\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\", 7:\"@openzeppelin/contracts/utils/Context.sol\", 8:\"@openzeppelin/contracts/utils/Pausable.sol\", 9:\"@openzeppelin/contracts/utils/introspection/ERC165.sol\", 11:\"contracts/MyToken.sol\"\n    object \"MyToken_1478_deployed\" {\n        code {\n            {\n                /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x01ffc9a7 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value := calldataload(4)\n                        let _2 := and(value, shl(224, 0xffffffff))\n                        if iszero(eq(value, _2)) { revert(0, 0) }\n                        /// @src 0:2673:2760  \"interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId)\"\n                        let expr := /** @src 0:2673:2720  \"interfaceId == type(IAccessControl).interfaceId\" */ eq(/** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _2, /** @src 0:2688:2720  \"type(IAccessControl).interfaceId\" */ shl(224, 0x7965db0b))\n                        /// @src 0:2673:2760  \"interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId)\"\n                        if iszero(expr)\n                        {\n                            expr := /** @src 9:862:902  \"interfaceId == type(IERC165).interfaceId\" */ eq(_2, /** @src 9:877:902  \"type(IERC165).interfaceId\" */ shl(224, 0x01ffc9a7))\n                        }\n                        /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        mstore(_1, iszero(iszero(expr)))\n                        return(_1, 32)\n                    }\n                    case 0x06fdde03 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPtr := mload(64)\n                        let ret := 0\n                        let slotValue := sload(/** @src 3:1837:1842  \"_name\" */ 0x03)\n                        /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        let length := 0\n                        length := shr(1, slotValue)\n                        let outOfPlaceEncoding := and(slotValue, 1)\n                        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                        if eq(outOfPlaceEncoding, lt(length, 32))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x22)\n                            revert(0, 0x24)\n                        }\n                        mstore(memPtr, length)\n                        switch outOfPlaceEncoding\n                        case 0 {\n                            mstore(add(memPtr, 32), and(slotValue, not(255)))\n                            ret := add(add(memPtr, shl(5, iszero(iszero(length)))), 32)\n                        }\n                        case 1 {\n                            mstore(0, /** @src 3:1837:1842  \"_name\" */ 0x03)\n                            /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                            let dataPos := 87903029871075914254377627908054574944891091886930582284385770809450030037083\n                            let i := 0\n                            for { } lt(i, length) { i := add(i, 32) }\n                            {\n                                mstore(add(add(memPtr, i), 32), sload(dataPos))\n                                dataPos := add(dataPos, 1)\n                            }\n                            ret := add(add(memPtr, i), 32)\n                        }\n                        let newFreePtr := add(memPtr, and(add(sub(ret, memPtr), 31), not(31)))\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr)\n                        return(newFreePtr, sub(abi_encode_string(newFreePtr, memPtr), newFreePtr))\n                    }\n                    case 0x07546172 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value_1 := and(sload(/** @src 11:565:586  \"address public minter\" */ 7), /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1))\n                        let memPos := mload(64)\n                        mstore(memPos, value_1)\n                        return(memPos, 32)\n                    }\n                    case 0x095ea7b3 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0 := abi_decode_address_8531()\n                        let value_2 := calldataload(36)\n                        /// @src 3:9790:9879  \"if (owner == address(0)) {...\"\n                        if /** @src 3:9794:9813  \"owner == address(0)\" */ iszero(/** @src 7:735:745  \"msg.sender\" */ caller())\n                        /// @src 3:9790:9879  \"if (owner == address(0)) {...\"\n                        {\n                            /// @src 3:9836:9868  \"ERC20InvalidApprover(address(0))\"\n                            mstore(/** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, /** @src 3:9836:9868  \"ERC20InvalidApprover(address(0))\" */ shl(224, 0xe602df05))\n                            /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                            mstore(4, 0)\n                            /// @src 3:9836:9868  \"ERC20InvalidApprover(address(0))\"\n                            revert(/** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, 36)\n                        }\n                        let _3 := and(/** @src 3:9892:9913  \"spender == address(0)\" */ value0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1))\n                        /// @src 3:9888:9978  \"if (spender == address(0)) {...\"\n                        if /** @src 3:9892:9913  \"spender == address(0)\" */ iszero(/** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _3)\n                        /// @src 3:9888:9978  \"if (spender == address(0)) {...\"\n                        {\n                            /// @src 3:9936:9967  \"ERC20InvalidSpender(address(0))\"\n                            mstore(/** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, /** @src 3:9936:9967  \"ERC20InvalidSpender(address(0))\" */ shl(225, 0x4a1406b1))\n                            /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                            mstore(4, 0)\n                            /// @src 3:9936:9967  \"ERC20InvalidSpender(address(0))\"\n                            revert(/** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, 36)\n                        }\n                        mstore(0, /** @src 7:735:745  \"msg.sender\" */ caller())\n                        /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        mstore(32, 1)\n                        let dataSlot := keccak256(0, 64)\n                        /// @src 3:9987:10014  \"_allowances[owner][spender]\"\n                        let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                        /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _3)\n                        mstore(0x20, /** @src 3:9987:10005  \"_allowances[owner]\" */ dataSlot)\n                        /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                        sstore(/** @src 3:9987:10014  \"_allowances[owner][spender]\" */ dataSlot_1, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ value_2)\n                        /// @src 3:10066:10097  \"Approval(owner, spender, value)\"\n                        let _4 := /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ mload(64)\n                        mstore(_4, value_2)\n                        /// @src 3:10066:10097  \"Approval(owner, spender, value)\"\n                        log3(_4, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 32, /** @src 3:10066:10097  \"Approval(owner, spender, value)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, /** @src 7:735:745  \"msg.sender\" */ caller(), /** @src 3:10066:10097  \"Approval(owner, spender, value)\" */ _3)\n                        /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        let memPos_1 := mload(64)\n                        mstore(memPos_1, 1)\n                        return(memPos_1, 32)\n                    }\n                    case 0x18160ddd {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _5 := sload(/** @src 3:2908:2920  \"_totalSupply\" */ 0x02)\n                        /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        let memPos_2 := mload(64)\n                        mstore(memPos_2, _5)\n                        return(memPos_2, 32)\n                    }\n                    case 0x23b872dd {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(0, 0) }\n                        let value0_1 := abi_decode_address_8531()\n                        let value1 := abi_decode_address()\n                        let value_3 := calldataload(68)\n                        /// @src 3:4931:4936  \"value\"\n                        fun_spendAllowance(value0_1, /** @src 7:735:745  \"msg.sender\" */ caller(), /** @src 3:4931:4936  \"value\" */ value_3)\n                        /// @src 3:4967:4972  \"value\"\n                        fun_transfer(value0_1, value1, value_3)\n                        /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        let memPos_3 := mload(64)\n                        mstore(memPos_3, 1)\n                        return(memPos_3, 32)\n                    }\n                    case 0x248a9ca3 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let ret_1 := fun_getRoleAdmin(calldataload(4))\n                        let memPos_4 := mload(64)\n                        mstore(memPos_4, ret_1)\n                        return(memPos_4, 32)\n                    }\n                    case 0x2f2ff15d {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value_4 := calldataload(4)\n                        let value1_1 := abi_decode_address()\n                        /// @src 0:2475:2479  \"role\"\n                        fun_checkRole(/** @src 0:4300:4318  \"getRoleAdmin(role)\" */ fun_getRoleAdmin(value_4))\n                        /// @src 0:4330:4355  \"_grantRole(role, account)\"\n                        pop(fun_grantRole(value_4, value1_1))\n                        /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        return(0, 0)\n                    }\n                    case 0x313ce567 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_5 := mload(64)\n                        mstore(memPos_5, /** @src 3:2761:2763  \"18\" */ 0x12)\n                        /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        return(memPos_5, 32)\n                    }\n                    case 0x36568abe {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value1_2 := abi_decode_address()\n                        /// @src 0:5417:5519  \"if (callerConfirmation != _msgSender()) {...\"\n                        if /** @src 0:5421:5455  \"callerConfirmation != _msgSender()\" */ iszero(eq(/** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:5421:5455  \"callerConfirmation != _msgSender()\" */ value1_2, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)), /** @src 7:735:745  \"msg.sender\" */ caller()))\n                        /// @src 0:5417:5519  \"if (callerConfirmation != _msgSender()) {...\"\n                        {\n                            /// @src 0:5478:5508  \"AccessControlBadConfirmation()\"\n                            mstore(/** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, /** @src 0:5478:5508  \"AccessControlBadConfirmation()\" */ shl(225, 0x334bd919))\n                            revert(/** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, 4)\n                        }\n                        /// @src 0:5529:5566  \"_revokeRole(role, callerConfirmation)\"\n                        pop(fun_revokeRole(/** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ calldataload(4), /** @src 0:5529:5566  \"_revokeRole(role, callerConfirmation)\" */ value1_2))\n                        /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        return(0, 0)\n                    }\n                    case 0x3f4ba83a {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        /// @src 0:2475:2479  \"role\"\n                        fun_checkRole_8537()\n                        /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        let _6 := sload(/** @src 8:1796:1803  \"_paused\" */ 0x05)\n                        /// @src 8:2136:2198  \"if (!paused()) {...\"\n                        if /** @src 8:2140:2149  \"!paused()\" */ iszero(/** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(_6, 0xff))\n                        /// @src 8:2136:2198  \"if (!paused()) {...\"\n                        {\n                            /// @src 8:2172:2187  \"ExpectedPause()\"\n                            mstore(/** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, /** @src 8:2172:2187  \"ExpectedPause()\" */ shl(224, 0x8dfc202b))\n                            revert(/** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, 4)\n                        }\n                        sstore(/** @src 8:1796:1803  \"_paused\" */ 0x05, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(_6, not(255)))\n                        /// @src 8:2674:2696  \"Unpaused(_msgSender())\"\n                        let _7 := /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ mload(64)\n                        mstore(_7, /** @src 7:735:745  \"msg.sender\" */ caller())\n                        /// @src 8:2674:2696  \"Unpaused(_msgSender())\"\n                        log1(_7, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 32, /** @src 8:2674:2696  \"Unpaused(_msgSender())\" */ 0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa)\n                        /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        return(0, 0)\n                    }\n                    case 0x40c10f19 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0_2 := abi_decode_address_8531()\n                        let value_5 := calldataload(36)\n                        mstore(0, /** @src 11:537:561  \"keccak256(\\\"MINTER_ROLE\\\")\" */ 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6)\n                        /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        mstore(32, /** @src 0:2954:2960  \"_roles\" */ 0x06)\n                        /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        let dataSlot_2 := keccak256(0, 64)\n                        /// @src 0:2954:2983  \"_roles[role].hasRole[account]\"\n                        let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                        /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 7:735:745  \"msg.sender\" */ caller(), /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 0:2954:2966  \"_roles[role]\" */ dataSlot_2)\n                        /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                        /// @src 0:3515:3623  \"if (!hasRole(role, account)) {...\"\n                        if /** @src 0:3519:3542  \"!hasRole(role, account)\" */ iszero(/** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(sload(/** @src 0:2954:2983  \"_roles[role].hasRole[account]\" */ dataSlot_3), /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0xff))\n                        /// @src 0:3515:3623  \"if (!hasRole(role, account)) {...\"\n                        {\n                            /// @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\"\n                            mstore(/** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, /** @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\" */ shl(224, 0xe2517d3f))\n                            /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                            mstore(4, /** @src 7:735:745  \"msg.sender\" */ caller())\n                            /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                            mstore(36, /** @src 11:537:561  \"keccak256(\\\"MINTER_ROLE\\\")\" */ 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6)\n                            /// @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\"\n                            revert(/** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, 68)\n                        }\n                        let _8 := and(/** @src 3:7509:7530  \"account == address(0)\" */ value0_2, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1))\n                        /// @src 3:7509:7530  \"account == address(0)\"\n                        let _9 := iszero(/** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _8)\n                        /// @src 3:7505:7596  \"if (account == address(0)) {...\"\n                        if /** @src 3:7509:7530  \"account == address(0)\" */ _9\n                        /// @src 3:7505:7596  \"if (account == address(0)) {...\"\n                        {\n                            /// @src 3:7553:7585  \"ERC20InvalidReceiver(address(0))\"\n                            mstore(/** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, /** @src 3:7553:7585  \"ERC20InvalidReceiver(address(0))\" */ shl(224, 0xec442f05))\n                            /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                            mstore(4, 0)\n                            /// @src 3:7553:7585  \"ERC20InvalidReceiver(address(0))\"\n                            revert(/** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, 36)\n                        }\n                        /// @src 8:1315:1387  \"modifier whenNotPaused() {...\"\n                        fun_requireNotPaused()\n                        /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        let _10 := sload(/** @src 3:6214:6235  \"_totalSupply += value\" */ 0x02)\n                        /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        let sum := add(_10, value_5)\n                        if gt(_10, sum)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 36)\n                        }\n                        sstore(/** @src 3:6214:6235  \"_totalSupply += value\" */ 0x02, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sum)\n                        /// @src 3:6624:7049  \"if (to == address(0)) {...\"\n                        _9 := /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0\n                        mstore(0, _8)\n                        mstore(32, 0)\n                        let dataSlot_4 := keccak256(0, 64)\n                        sstore(dataSlot_4, add(sload(/** @src 3:7002:7024  \"_balances[to] += value\" */ dataSlot_4), /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ value_5))\n                        /// @src 3:7064:7089  \"Transfer(from, to, value)\"\n                        let _11 := /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ mload(64)\n                        mstore(_11, value_5)\n                        /// @src 3:7064:7089  \"Transfer(from, to, value)\"\n                        log3(_11, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 32, /** @src 3:7064:7089  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, /** @src 3:7064:7089  \"Transfer(from, to, value)\" */ _8)\n                        /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        return(0, 0)\n                    }\n                    case 0x42966c68 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        /// @src 5:692:697  \"value\"\n                        fun_burn(/** @src 7:735:745  \"msg.sender\" */ caller(), /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ calldataload(4))\n                        return(0, 0)\n                    }\n                    case 0x5c975abb {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let converted := and(sload(/** @src 8:1796:1803  \"_paused\" */ 0x05), /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0xff)\n                        let memPos_6 := mload(64)\n                        mstore(memPos_6, iszero(iszero(converted)))\n                        return(memPos_6, 32)\n                    }\n                    case 0x70a08231 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, and(abi_decode_address_8531(), sub(shl(160, 1), 1)))\n                        mstore(32, 0)\n                        let _12 := sload(keccak256(0, 64))\n                        let memPos_7 := mload(64)\n                        mstore(memPos_7, _12)\n                        return(memPos_7, 32)\n                    }\n                    case 0x79cc6790 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0_3 := abi_decode_address_8531()\n                        let value_6 := calldataload(36)\n                        /// @src 5:1135:1140  \"value\"\n                        fun_spendAllowance(value0_3, /** @src 7:735:745  \"msg.sender\" */ caller(), /** @src 5:1135:1140  \"value\" */ value_6)\n                        /// @src 5:1166:1171  \"value\"\n                        fun_burn(value0_3, value_6)\n                        /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        return(0, 0)\n                    }\n                    case 0x8456cb59 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        /// @src 0:2475:2479  \"role\"\n                        fun_checkRole_8537()\n                        /// @src 8:1315:1387  \"modifier whenNotPaused() {...\"\n                        fun_requireNotPaused()\n                        /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        sstore(/** @src 8:2398:2412  \"_paused = true\" */ 0x05, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ or(and(sload(/** @src 8:2398:2412  \"_paused = true\" */ 0x05), /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ not(255)), /** @src 8:2408:2412  \"true\" */ 0x01))\n                        /// @src 8:2427:2447  \"Paused(_msgSender())\"\n                        let _13 := /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ mload(64)\n                        mstore(_13, /** @src 7:735:745  \"msg.sender\" */ caller())\n                        /// @src 8:2427:2447  \"Paused(_msgSender())\"\n                        log1(_13, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 32, /** @src 8:2427:2447  \"Paused(_msgSender())\" */ 0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258)\n                        /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        return(0, 0)\n                    }\n                    case 0x91d14854 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value1_3 := abi_decode_address()\n                        mstore(0, calldataload(4))\n                        mstore(32, /** @src 0:2954:2960  \"_roles\" */ 0x06)\n                        /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        let dataSlot_5 := keccak256(0, 64)\n                        /// @src 0:2954:2983  \"_roles[role].hasRole[account]\"\n                        let dataSlot_6 := /** @src -1:-1:-1 */ 0\n                        /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(value1_3, sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 0:2954:2966  \"_roles[role]\" */ dataSlot_5)\n                        /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        dataSlot_6 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                        let converted_1 := and(sload(/** @src 0:2954:2983  \"_roles[role].hasRole[account]\" */ dataSlot_6), /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0xff)\n                        let memPos_8 := mload(64)\n                        mstore(memPos_8, iszero(iszero(converted_1)))\n                        return(memPos_8, 32)\n                    }\n                    case 0x95d89b41 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPtr_1 := mload(64)\n                        let ret_2 := 0\n                        let slotValue_1 := sload(4)\n                        let length_1 := 0\n                        length_1 := shr(1, slotValue_1)\n                        let outOfPlaceEncoding_1 := and(slotValue_1, 1)\n                        if iszero(outOfPlaceEncoding_1)\n                        {\n                            length_1 := and(length_1, 0x7f)\n                        }\n                        if eq(outOfPlaceEncoding_1, lt(length_1, 32))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x22)\n                            revert(0, 0x24)\n                        }\n                        mstore(memPtr_1, length_1)\n                        switch outOfPlaceEncoding_1\n                        case 0 {\n                            mstore(add(memPtr_1, 32), and(slotValue_1, not(255)))\n                            ret_2 := add(add(memPtr_1, shl(5, iszero(iszero(length_1)))), 32)\n                        }\n                        case 1 {\n                            mstore(0, 4)\n                            let dataPos_1 := 62514009886607029107290561805838585334079798074568712924583230797734656856475\n                            let i_1 := 0\n                            for { } lt(i_1, length_1) { i_1 := add(i_1, 32) }\n                            {\n                                mstore(add(add(memPtr_1, i_1), 32), sload(dataPos_1))\n                                dataPos_1 := add(dataPos_1, 1)\n                            }\n                            ret_2 := add(add(memPtr_1, i_1), 32)\n                        }\n                        let newFreePtr_1 := add(memPtr_1, and(add(sub(ret_2, memPtr_1), 31), not(31)))\n                        if or(gt(newFreePtr_1, 0xffffffffffffffff), lt(newFreePtr_1, memPtr_1))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr_1)\n                        return(newFreePtr_1, sub(abi_encode_string(newFreePtr_1, memPtr_1), newFreePtr_1))\n                    }\n                    case 0xa217fddf {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_9 := mload(64)\n                        mstore(memPos_9, 0)\n                        return(memPos_9, 32)\n                    }\n                    case 0xa9059cbb {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0_4 := abi_decode_address_8531()\n                        /// @src 3:3440:3445  \"value\"\n                        fun_transfer(/** @src 7:735:745  \"msg.sender\" */ caller(), /** @src 3:3440:3445  \"value\" */ value0_4, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ calldataload(36))\n                        let memPos_10 := mload(64)\n                        mstore(memPos_10, 1)\n                        return(memPos_10, 32)\n                    }\n                    case 0xd5391393 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_11 := mload(64)\n                        mstore(memPos_11, /** @src 11:537:561  \"keccak256(\\\"MINTER_ROLE\\\")\" */ 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6)\n                        /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        return(memPos_11, 32)\n                    }\n                    case 0xd547741f {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value_7 := calldataload(4)\n                        let value1_4 := abi_decode_address()\n                        /// @src 0:2475:2479  \"role\"\n                        fun_checkRole(/** @src 0:4717:4735  \"getRoleAdmin(role)\" */ fun_getRoleAdmin(value_7))\n                        /// @src 0:4747:4773  \"_revokeRole(role, account)\"\n                        pop(fun_revokeRole(value_7, value1_4))\n                        /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        return(0, 0)\n                    }\n                    case 0xdd62ed3e {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0_5 := abi_decode_address_8531()\n                        let value1_5 := abi_decode_address()\n                        mstore(0, and(value0_5, sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 3:3638:3649  \"_allowances\" */ 0x01)\n                        /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        let dataSlot_7 := keccak256(0, 64)\n                        /// @src 3:3638:3665  \"_allowances[owner][spender]\"\n                        let dataSlot_8 := /** @src -1:-1:-1 */ 0\n                        /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(value1_5, sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 3:3638:3656  \"_allowances[owner]\" */ dataSlot_7)\n                        /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        dataSlot_8 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                        let _14 := sload(/** @src 3:3638:3665  \"_allowances[owner][spender]\" */ dataSlot_8)\n                        /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        let memPos_12 := mload(64)\n                        mstore(memPos_12, _14)\n                        return(memPos_12, 32)\n                    }\n                    case 0xe63ab1e9 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_13 := mload(64)\n                        mstore(memPos_13, /** @src 11:471:495  \"keccak256(\\\"PAUSER_ROLE\\\")\" */ 0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a)\n                        /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        return(memPos_13, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_encode_string(headStart, value0) -> tail\n            {\n                mstore(headStart, 32)\n                let length := mload(value0)\n                mstore(add(headStart, 32), length)\n                mcopy(add(headStart, 64), add(value0, 32), length)\n                mstore(add(add(headStart, length), 64), 0)\n                tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n            }\n            function abi_decode_address_8531() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            /// @ast-id 128 @src 0:3810:3930  \"function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {...\"\n            function fun_getRoleAdmin(var_role) -> var\n            {\n                /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ var_role)\n                mstore(0x20, /** @src 0:3901:3907  \"_roles\" */ 0x06)\n                /// @src 0:3894:3923  \"return _roles[role].adminRole\"\n                var := /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sload(/** @src 0:3901:3923  \"_roles[role].adminRole\" */ add(/** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40), /** @src 0:3901:3923  \"_roles[role].adminRole\" */ 1))\n            }\n            /// @ast-id 1029 @src 3:10396:10872  \"function _spendAllowance(address owner, address spender, uint256 value) internal virtual {...\"\n            function fun_spendAllowance(var_owner, var_spender, var_value)\n            {\n                /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let _1 := and(var_owner, sub(shl(160, 1), 1))\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _1)\n                mstore(0x20, /** @src 3:3638:3649  \"_allowances\" */ 0x01)\n                /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                /// @src 3:3638:3665  \"_allowances[owner][spender]\"\n                let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 3:10522:10547  \"allowance(owner, spender)\" */ var_spender, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 3:3638:3656  \"_allowances[owner]\" */ dataSlot)\n                /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                let _2 := sload(/** @src 3:3638:3665  \"_allowances[owner][spender]\" */ dataSlot_1)\n                /// @src 3:10557:10866  \"if (currentAllowance < type(uint256).max) {...\"\n                if /** @src 3:10561:10597  \"currentAllowance < type(uint256).max\" */ lt(_2, /** @src 3:10580:10597  \"type(uint256).max\" */ not(0))\n                /// @src 3:10557:10866  \"if (currentAllowance < type(uint256).max) {...\"\n                {\n                    /// @src 3:10613:10743  \"if (currentAllowance < value) {...\"\n                    if /** @src 3:10617:10641  \"currentAllowance < value\" */ lt(_2, var_value)\n                    /// @src 3:10613:10743  \"if (currentAllowance < value) {...\"\n                    {\n                        /// @src 3:10668:10728  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 3:10668:10728  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\" */ shl(225, 0x7dc7a0d9))\n                        /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        mstore(/** @src 3:10668:10728  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\" */ 4, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(var_spender, sub(shl(160, 1), 1)))\n                        mstore(36, _2)\n                        mstore(68, var_value)\n                        /// @src 3:10668:10728  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\"\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 100)\n                    }\n                    /// @src 3:9790:9879  \"if (owner == address(0)) {...\"\n                    if /** @src 3:9794:9813  \"owner == address(0)\" */ iszero(/** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _1)\n                    /// @src 3:9790:9879  \"if (owner == address(0)) {...\"\n                    {\n                        /// @src 3:9836:9868  \"ERC20InvalidApprover(address(0))\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 3:9836:9868  \"ERC20InvalidApprover(address(0))\" */ shl(224, 0xe602df05))\n                        /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        mstore(/** @src 3:9836:9868  \"ERC20InvalidApprover(address(0))\" */ 4, /** @src -1:-1:-1 */ 0)\n                        /// @src 3:9836:9868  \"ERC20InvalidApprover(address(0))\"\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 36)\n                    }\n                    /// @src 3:9888:9978  \"if (spender == address(0)) {...\"\n                    if /** @src 3:9892:9913  \"spender == address(0)\" */ iszero(/** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 3:9892:9913  \"spender == address(0)\" */ var_spender, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n                    /// @src 3:9888:9978  \"if (spender == address(0)) {...\"\n                    {\n                        /// @src 3:9936:9967  \"ERC20InvalidSpender(address(0))\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 3:9936:9967  \"ERC20InvalidSpender(address(0))\" */ shl(225, 0x4a1406b1))\n                        /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                        mstore(/** @src 3:9936:9967  \"ERC20InvalidSpender(address(0))\" */ 4, /** @src -1:-1:-1 */ 0)\n                        /// @src 3:9936:9967  \"ERC20InvalidSpender(address(0))\"\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 36)\n                    }\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _1)\n                    mstore(0x20, /** @src 3:3638:3649  \"_allowances\" */ 0x01)\n                    /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    let dataSlot_2 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                    /// @src 3:9987:10014  \"_allowances[owner][spender]\"\n                    let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                    /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 3:9987:10014  \"_allowances[owner][spender]\" */ var_spender, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n                    mstore(0x20, /** @src 3:9987:10005  \"_allowances[owner]\" */ dataSlot_2)\n                    /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                    sstore(/** @src 3:9987:10014  \"_allowances[owner][spender]\" */ dataSlot_3, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(/** @src 3:10809:10833  \"currentAllowance - value\" */ _2, var_value))\n                }\n            }\n            /// @ast-id 760 @src 3:5374:5674  \"function _transfer(address from, address to, uint256 value) internal {...\"\n            function fun_transfer(var_from, var_to, var_value)\n            {\n                /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let _1 := and(/** @src 3:5457:5475  \"from == address(0)\" */ var_from, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1))\n                /// @src 3:5457:5475  \"from == address(0)\"\n                let _2 := iszero(/** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _1)\n                /// @src 3:5453:5539  \"if (from == address(0)) {...\"\n                if /** @src 3:5457:5475  \"from == address(0)\" */ _2\n                /// @src 3:5453:5539  \"if (from == address(0)) {...\"\n                {\n                    /// @src 3:5498:5528  \"ERC20InvalidSender(address(0))\"\n                    mstore(/** @src 3:5473:5474  \"0\" */ 0x00, /** @src 3:5498:5528  \"ERC20InvalidSender(address(0))\" */ shl(225, 0x4b637e8f))\n                    /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    mstore(/** @src 3:5498:5528  \"ERC20InvalidSender(address(0))\" */ 4, /** @src 3:5473:5474  \"0\" */ 0x00)\n                    /// @src 3:5498:5528  \"ERC20InvalidSender(address(0))\"\n                    revert(/** @src 3:5473:5474  \"0\" */ 0x00, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 36)\n                }\n                let _3 := and(/** @src 3:5552:5568  \"to == address(0)\" */ var_to, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1))\n                /// @src 3:5552:5568  \"to == address(0)\"\n                let _4 := iszero(/** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _3)\n                /// @src 3:5548:5634  \"if (to == address(0)) {...\"\n                if /** @src 3:5552:5568  \"to == address(0)\" */ _4\n                /// @src 3:5548:5634  \"if (to == address(0)) {...\"\n                {\n                    /// @src 3:5591:5623  \"ERC20InvalidReceiver(address(0))\"\n                    mstore(/** @src 3:5473:5474  \"0\" */ 0x00, /** @src 3:7553:7585  \"ERC20InvalidReceiver(address(0))\" */ shl(224, 0xec442f05))\n                    /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    mstore(/** @src 3:5591:5623  \"ERC20InvalidReceiver(address(0))\" */ 4, /** @src 3:5473:5474  \"0\" */ 0x00)\n                    /// @src 3:5591:5623  \"ERC20InvalidReceiver(address(0))\"\n                    revert(/** @src 3:5473:5474  \"0\" */ 0x00, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 36)\n                }\n                /// @src 8:1315:1387  \"modifier whenNotPaused() {...\"\n                fun_requireNotPaused()\n                /// @src 3:6074:6614  \"if (from == address(0)) {...\"\n                _2 := /** @src 3:5473:5474  \"0\" */ 0x00\n                /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src 3:5473:5474  \"0\" */ 0x00, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _1)\n                mstore(0x20, /** @src 3:5473:5474  \"0\" */ 0x00)\n                /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let _5 := sload(keccak256(/** @src 3:5473:5474  \"0\" */ 0x00, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40))\n                /// @src 3:6317:6432  \"if (fromBalance < value) {...\"\n                if /** @src 3:6321:6340  \"fromBalance < value\" */ lt(_5, var_value)\n                /// @src 3:6317:6432  \"if (fromBalance < value) {...\"\n                {\n                    /// @src 3:6367:6417  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                    mstore(/** @src 3:5473:5474  \"0\" */ 0x00, /** @src 3:6367:6417  \"ERC20InsufficientBalance(from, fromBalance, value)\" */ shl(226, 0x391434e3))\n                    /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    mstore(/** @src 3:6367:6417  \"ERC20InsufficientBalance(from, fromBalance, value)\" */ 4, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _1)\n                    mstore(36, _5)\n                    mstore(68, var_value)\n                    /// @src 3:6367:6417  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                    revert(/** @src 3:5473:5474  \"0\" */ 0x00, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 100)\n                }\n                mstore(/** @src 3:5473:5474  \"0\" */ 0x00, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _1)\n                mstore(0x20, /** @src 3:5473:5474  \"0\" */ 0x00)\n                /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                sstore(keccak256(/** @src 3:5473:5474  \"0\" */ 0x00, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40), sub(/** @src 3:6570:6589  \"fromBalance - value\" */ _5, var_value))\n                /// @src 3:6624:7049  \"if (to == address(0)) {...\"\n                _4 := /** @src 3:5473:5474  \"0\" */ 0x00\n                /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src 3:5473:5474  \"0\" */ 0x00, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _3)\n                mstore(0x20, /** @src 3:5473:5474  \"0\" */ 0x00)\n                /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let dataSlot := keccak256(/** @src 3:5473:5474  \"0\" */ 0x00, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                sstore(dataSlot, add(sload(/** @src 3:7002:7024  \"_balances[to] += value\" */ dataSlot), /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ var_value))\n                /// @src 3:7064:7089  \"Transfer(from, to, value)\"\n                let _6 := /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ mload(0x40)\n                mstore(_6, var_value)\n                /// @src 3:7064:7089  \"Transfer(from, to, value)\"\n                log3(_6, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x20, /** @src 3:7064:7089  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _1, _3)\n            }\n            /// @ast-id 93 @src 0:3199:3302  \"function _checkRole(bytes32 role) internal view virtual {...\"\n            function fun_checkRole_8537()\n            {\n                /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 11:471:495  \"keccak256(\\\"PAUSER_ROLE\\\")\" */ 0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a)\n                /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ 0x06)\n                /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                /// @src 0:2954:2983  \"_roles[role].hasRole[account]\"\n                let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 7:735:745  \"msg.sender\" */ caller(), /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 0:2954:2966  \"_roles[role]\" */ dataSlot)\n                /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                /// @src 0:3515:3623  \"if (!hasRole(role, account)) {...\"\n                if /** @src 0:3519:3542  \"!hasRole(role, account)\" */ iszero(/** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(sload(/** @src 0:2954:2983  \"_roles[role].hasRole[account]\" */ dataSlot_1), /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0xff))\n                /// @src 0:3515:3623  \"if (!hasRole(role, account)) {...\"\n                {\n                    /// @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\" */ shl(224, 0xe2517d3f))\n                    /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    mstore(/** @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\" */ 4, /** @src 7:735:745  \"msg.sender\" */ caller())\n                    /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    mstore(36, /** @src 11:471:495  \"keccak256(\\\"PAUSER_ROLE\\\")\" */ 0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a)\n                    /// @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\"\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 68)\n                }\n            }\n            /// @ast-id 93 @src 0:3199:3302  \"function _checkRole(bytes32 role) internal view virtual {...\"\n            function fun_checkRole(var_role)\n            {\n                /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ var_role)\n                mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ 0x06)\n                /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                /// @src 0:2954:2983  \"_roles[role].hasRole[account]\"\n                let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 7:735:745  \"msg.sender\" */ caller(), /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 0:2954:2966  \"_roles[role]\" */ dataSlot)\n                /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                /// @src 0:3515:3623  \"if (!hasRole(role, account)) {...\"\n                if /** @src 0:3519:3542  \"!hasRole(role, account)\" */ iszero(/** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(sload(/** @src 0:2954:2983  \"_roles[role].hasRole[account]\" */ dataSlot_1), /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0xff))\n                /// @src 0:3515:3623  \"if (!hasRole(role, account)) {...\"\n                {\n                    /// @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\" */ shl(224, 0xe2517d3f))\n                    /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    mstore(/** @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\" */ 4, /** @src 7:735:745  \"msg.sender\" */ caller())\n                    /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    mstore(36, var_role)\n                    /// @src 0:3565:3612  \"AccessControlUnauthorizedAccount(account, role)\"\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 68)\n                }\n            }\n            /// @ast-id 256 @src 0:6179:6495  \"function _grantRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n            function fun_grantRole(var_role, var_account) -> var\n            {\n                /// @src 0:6256:6260  \"bool\"\n                var := /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0\n                mstore(0, var_role)\n                mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ 0x06)\n                /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let dataSlot := keccak256(0, 0x40)\n                /// @src 0:2954:2983  \"_roles[role].hasRole[account]\"\n                let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:6277:6299  \"hasRole(role, account)\" */ var_account, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 0:2954:2966  \"_roles[role]\" */ dataSlot)\n                /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n                switch /** @src 0:6276:6299  \"!hasRole(role, account)\" */ iszero(/** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(sload(/** @src 0:2954:2983  \"_roles[role].hasRole[account]\" */ dataSlot_1), /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0xff))\n                case /** @src 0:6272:6489  \"if (!hasRole(role, account)) {...\" */ 0 {\n                    /// @src 0:6466:6478  \"return false\"\n                    var := /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0\n                    /// @src 0:6466:6478  \"return false\"\n                    leave\n                }\n                default /// @src 0:6272:6489  \"if (!hasRole(role, account)) {...\"\n                {\n                    /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    mstore(0, var_role)\n                    mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ 0x06)\n                    /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    let dataSlot_2 := keccak256(0, 0x40)\n                    /// @src 0:6315:6344  \"_roles[role].hasRole[account]\"\n                    let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                    /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ var_account, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n                    mstore(0x20, /** @src 0:6315:6327  \"_roles[role]\" */ dataSlot_2)\n                    /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                    sstore(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ dataSlot_3, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ or(and(sload(/** @src 0:6315:6344  \"_roles[role].hasRole[account]\" */ dataSlot_3), /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ not(255)), /** @src 0:6347:6351  \"true\" */ 0x01))\n                    /// @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\"\n                    log4(/** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, 0, /** @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, var_role, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:6370:6410  \"RoleGranted(role, account, _msgSender())\" */ var_account, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)), /** @src 7:735:745  \"msg.sender\" */ caller())\n                    /// @src 0:6424:6435  \"return true\"\n                    var := /** @src 0:6347:6351  \"true\" */ 0x01\n                    /// @src 0:6424:6435  \"return true\"\n                    leave\n                }\n            }\n            /// @ast-id 294 @src 0:6732:7049  \"function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n            function fun_revokeRole(var_role, var_account) -> var\n            {\n                /// @src 0:6810:6814  \"bool\"\n                var := /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0\n                mstore(0, var_role)\n                mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ 0x06)\n                /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let dataSlot := keccak256(0, 0x40)\n                /// @src 0:2954:2983  \"_roles[role].hasRole[account]\"\n                let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:6830:6852  \"hasRole(role, account)\" */ var_account, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 0:2954:2966  \"_roles[role]\" */ dataSlot)\n                /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                /// @src 0:6826:7043  \"if (hasRole(role, account)) {...\"\n                switch /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(sload(/** @src 0:2954:2983  \"_roles[role].hasRole[account]\" */ dataSlot_1), /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0xff)\n                case /** @src 0:6826:7043  \"if (hasRole(role, account)) {...\" */ 0 {\n                    /// @src 0:7020:7032  \"return false\"\n                    var := /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0\n                    /// @src 0:7020:7032  \"return false\"\n                    leave\n                }\n                default /// @src 0:6826:7043  \"if (hasRole(role, account)) {...\"\n                {\n                    /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    mstore(0, var_role)\n                    mstore(0x20, /** @src 0:2954:2960  \"_roles\" */ 0x06)\n                    /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    let dataSlot_2 := keccak256(0, 0x40)\n                    /// @src 0:6868:6897  \"_roles[role].hasRole[account]\"\n                    let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                    /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:6868:6897  \"_roles[role].hasRole[account]\" */ var_account, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)))\n                    mstore(0x20, /** @src 0:6868:6880  \"_roles[role]\" */ dataSlot_2)\n                    /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40)\n                    sstore(/** @src 0:6868:6897  \"_roles[role].hasRole[account]\" */ dataSlot_3, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(sload(/** @src 0:6868:6897  \"_roles[role].hasRole[account]\" */ dataSlot_3), /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ not(255)))\n                    /// @src 0:6924:6964  \"RoleRevoked(role, account, _msgSender())\"\n                    log4(/** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0, 0, /** @src 0:6924:6964  \"RoleRevoked(role, account, _msgSender())\" */ 0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b, var_role, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(/** @src 0:6924:6964  \"RoleRevoked(role, account, _msgSender())\" */ var_account, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1)), /** @src 7:735:745  \"msg.sender\" */ caller())\n                    /// @src 0:6978:6989  \"return true\"\n                    var := /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 1\n                    /// @src 0:6978:6989  \"return true\"\n                    leave\n                }\n            }\n            /// @ast-id 903 @src 3:7965:8171  \"function _burn(address account, uint256 value) internal {...\"\n            function fun_burn(var_account, var_value)\n            {\n                /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let _1 := and(/** @src 3:8035:8056  \"account == address(0)\" */ var_account, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(shl(160, 1), 1))\n                /// @src 3:8035:8056  \"account == address(0)\"\n                let _2 := iszero(/** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _1)\n                /// @src 3:8031:8120  \"if (account == address(0)) {...\"\n                if /** @src 3:8035:8056  \"account == address(0)\" */ _2\n                /// @src 3:8031:8120  \"if (account == address(0)) {...\"\n                {\n                    /// @src 3:8079:8109  \"ERC20InvalidSender(address(0))\"\n                    mstore(/** @src 3:8054:8055  \"0\" */ 0x00, /** @src 3:5498:5528  \"ERC20InvalidSender(address(0))\" */ shl(225, 0x4b637e8f))\n                    /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    mstore(/** @src 3:8079:8109  \"ERC20InvalidSender(address(0))\" */ 4, /** @src 3:8054:8055  \"0\" */ 0x00)\n                    /// @src 3:8079:8109  \"ERC20InvalidSender(address(0))\"\n                    revert(/** @src 3:8054:8055  \"0\" */ 0x00, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 36)\n                }\n                /// @src 8:1315:1387  \"modifier whenNotPaused() {...\"\n                fun_requireNotPaused()\n                /// @src 3:6074:6614  \"if (from == address(0)) {...\"\n                _2 := /** @src 3:8054:8055  \"0\" */ 0x00\n                /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                mstore(/** @src 3:8054:8055  \"0\" */ 0x00, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _1)\n                mstore(0x20, /** @src 3:8054:8055  \"0\" */ 0x00)\n                /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                let _3 := sload(keccak256(/** @src 3:8054:8055  \"0\" */ 0x00, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40))\n                /// @src 3:6317:6432  \"if (fromBalance < value) {...\"\n                if /** @src 3:6321:6340  \"fromBalance < value\" */ lt(_3, var_value)\n                /// @src 3:6317:6432  \"if (fromBalance < value) {...\"\n                {\n                    /// @src 3:6367:6417  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                    mstore(/** @src 3:8054:8055  \"0\" */ 0x00, /** @src 3:6367:6417  \"ERC20InsufficientBalance(from, fromBalance, value)\" */ shl(226, 0x391434e3))\n                    /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                    mstore(/** @src 3:6367:6417  \"ERC20InsufficientBalance(from, fromBalance, value)\" */ 4, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _1)\n                    mstore(36, _3)\n                    mstore(68, var_value)\n                    /// @src 3:6367:6417  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                    revert(/** @src 3:8054:8055  \"0\" */ 0x00, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 100)\n                }\n                mstore(/** @src 3:8054:8055  \"0\" */ 0x00, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ _1)\n                mstore(0x20, /** @src 3:8054:8055  \"0\" */ 0x00)\n                /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                sstore(keccak256(/** @src 3:8054:8055  \"0\" */ 0x00, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x40), sub(/** @src 3:6570:6589  \"fromBalance - value\" */ _3, var_value))\n                /// @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\"\n                sstore(/** @src 3:6791:6812  \"_totalSupply -= value\" */ 0x02, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ sub(sload(/** @src 3:6791:6812  \"_totalSupply -= value\" */ 0x02), /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ var_value))\n                /// @src 3:7064:7089  \"Transfer(from, to, value)\"\n                let _4 := /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ mload(0x40)\n                mstore(_4, var_value)\n                /// @src 3:7064:7089  \"Transfer(from, to, value)\"\n                log3(_4, /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0x20, /** @src 3:7064:7089  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _1, /** @src 3:8054:8055  \"0\" */ 0x00)\n            }\n            /// @ast-id 1272 @src 8:1878:2006  \"function _requireNotPaused() internal view virtual {...\"\n            function fun_requireNotPaused()\n            {\n                /// @src 8:1939:2000  \"if (paused()) {...\"\n                if /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ and(sload(/** @src 8:1796:1803  \"_paused\" */ 0x05), /** @src 11:363:1241  \"contract MyToken is ERC20, ERC20Burnable, Pausable, AccessControl {...\" */ 0xff)\n                /// @src 8:1939:2000  \"if (paused()) {...\"\n                {\n                    /// @src 8:1974:1989  \"EnforcedPause()\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 8:1974:1989  \"EnforcedPause()\" */ shl(224, 0xd93c0665))\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 8:1974:1989  \"EnforcedPause()\" */ 4)\n                }\n            }\n        }\n        data \".metadata\" hex\"a264697066735822122012a0cf0d9f8348b681fcf16be953cf5831d3c4a023b01d63c3f729c7ef25fae164736f6c634300081c0033\"\n    }\n}\n",
          "hash": "e5bc81d5b472e3ff653f41af215ec4049911a2cbf3b44ee3b78f98d85ed7feb3",
          "factoryDependencies": {}
        }
      }
    }
  }
}